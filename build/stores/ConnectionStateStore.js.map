{"version":3,"sources":["../../src/stores/ConnectionStateStore.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAUA,IAAM,YAAY,GAAG,QAAQ,CAAC;;AAE9B,IAAI,MAAM,GAAG,EAAE,CAAC;;IAEV,oBAAoB;YAApB,oBAAoB;;AACxB,WADI,oBAAoB,GACV;0BADV,oBAAoB;;uEAApB,oBAAoB;;UAqBxB,aAAa,GAAG,UAAC,KAAK,EAAK;AACzB,YAAM,GAAG,KAAK,CAAC;AACf,YAAK,UAAU,EAAE,CAAC;KACnB;;;GArBA;;eAHG,oBAAoB;;iCAKX;AACX,UAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;KACzB;;;sCAEiB,QAAQ,EAAE;AAC1B,UAAI,CAAC,EAAE,CAAC,YAAY,EAAE,QAAQ,CAAC,CAAC;KACjC;;;yCAEoB,QAAQ,EAAE;AAC7B,UAAI,CAAC,cAAc,CAAC,YAAY,EAAE,QAAQ,CAAC,CAAC;KAC7C;;;+BAEU;AACT,aAAO,MAAM,CAAC;KACf;;;SAnBG,oBAAoB;WAVjB,YAAY;;AAqCrB,IAAI,4BAA4B,GAAG,IAAI,oBAAoB,EAAE,CAAC;;AAE9D,4BAA4B,CAAC,aAAa,GAAG,6BAAmB,QAAQ,CAAC,UAAA,MAAM,EAAI;AACjF,UAAO,MAAM,CAAC,IAAI;AAChB,SAAK,mBAvCA,WAAW,CAuCC,WAAW;AAC1B,4BAAY,gBAAgB,CAAC,4BAA4B,CAAC,aAAa,CAAC,CAAC;AACzE,YAAM;AAAA,AACR,SAAK,mBA1CA,WAAW,CA0CC,UAAU;AACzB,4BAAY,kBAAkB,CAAC,4BAA4B,CAAC,aAAa,CAAC,CAAC;AAC3E,YAAM;AAAA,AACR;AACE,aAAO;AAAA,GACV;CACF,CAAC,CAAC;;kBAEY,4BAA4B","file":"ConnectionStateStore.js","sourcesContent":["/*\n * Copyright (C) 2015 Actor LLC. <https://actor.im>\n */\n\nimport { EventEmitter } from 'events';\nimport ActorAppDispatcher from '../dispatcher/ActorAppDispatcher';\nimport { ActionTypes } from '../constants/ActorAppConstants';\n\nimport ActorClient from '../utils/ActorClient';\n\nconst CHANGE_EVENT = 'change';\n\nlet _state = '';\n\nclass ConnectionStateStore extends EventEmitter {\n  constructor() {\n    super();\n  }\n\n  emitChange() {\n    this.emit(CHANGE_EVENT);\n  }\n\n  addChangeListener(callback) {\n    this.on(CHANGE_EVENT, callback);\n  }\n\n  removeChangeListener(callback) {\n    this.removeListener(CHANGE_EVENT, callback);\n  }\n\n  getState() {\n    return _state;\n  }\n\n  onStateChange = (state) => {\n    _state = state;\n    this.emitChange();\n  }\n}\n\nlet ConnectionStateStoreInstance = new ConnectionStateStore();\n\nConnectionStateStoreInstance.dispatchToken = ActorAppDispatcher.register(action => {\n  switch(action.type) {\n    case ActionTypes.APP_VISIBLE:\n      ActorClient.bindConnectState(ConnectionStateStoreInstance.onStateChange);\n      break;\n    case ActionTypes.APP_HIDDEN:\n      ActorClient.unbindConnectState(ConnectionStateStoreInstance.onStateChange);\n      break;\n    default:\n      return;\n  }\n});\n\nexport default ConnectionStateStoreInstance;\n"]}