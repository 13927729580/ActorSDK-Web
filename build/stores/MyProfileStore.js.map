{"version":3,"sources":["../../src/stores/MyProfileStore.js"],"names":[],"mappings":";;;;AAIA;;AACA;;;;AACA;;AACA;;;;;;;;;;;;;;AAEA,IAAI,WAAW,IAAf;IACI,QAAQ,IADZ;IAEI,QAAQ,IAFZ;IAGI,SAAS,IAHb;IAII,eAAe,KAJnB;;IAMM,c;;;AACJ,0BAAY,UAAZ,EAAwB;AAAA;;AAAA,4CACtB,kBAAM,UAAN,CADsB;AAEvB;;2BAED,W,0BAAc;AACZ,WAAO,YAAP;AACD,G;;2BAED,O,sBAAU;AACR,WAAO,KAAP;AACD,G;;2BAED,O,sBAAU;AACR,WAAO,KAAP;AACD,G;;2BAED,Q,uBAAW;AACT,WAAO,MAAP;AACD,G;;2BAED,U,yBAAa;AACX,WAAO,QAAP;AACD,G;;2BAED,U,uBAAW,O,EAAS;AAClB,eAAW,OAAX;AACA,YAAQ,QAAQ,IAAhB;AACA,YAAQ,QAAQ,IAAhB;AACA,aAAS,QAAQ,KAAjB;AACD,G;;2BAED,Y,yBAAa,M,EAAQ;AACnB,YAAO,OAAO,IAAd;AACE,WAAK,+BAAY,qBAAjB;AACE,uBAAe,IAAf;AACA,aAAK,YAAL;AACA;AACF,WAAK,+BAAY,qBAAjB;AACE,uBAAe,KAAf;AACA,aAAK,YAAL;AACA;AACF,WAAK,+BAAY,kBAAjB;AACE,aAAK,UAAL,CAAgB,OAAO,OAAvB;AACA,aAAK,YAAL;AACA;AACF,WAAK,+BAAY,oBAAjB;AACE,YAAI,UAAU,OAAO,IAArB,EAA2B;AACzB,kBAAQ,OAAO,IAAf;AACA,gCAAY,UAAZ,CAAuB,KAAvB;AACA,eAAK,YAAL;AACD;AACD;AACF,WAAK,+BAAY,wBAAjB;AACE,YAAI,UAAU,OAAO,IAArB,EAA2B;AACzB,kBAAQ,OAAO,IAAf;AACA,gCAAY,UAAZ,CAAuB,KAAvB;AACA,eAAK,YAAL;AACD;AACD;AACF,WAAK,+BAAY,6BAAjB;AACE,YAAI,WAAW,OAAO,KAAtB,EAA6B;AAC3B,mBAAS,OAAO,KAAhB;AACA,eAAK,YAAL;AACD;AACD;AACF;AAjCF;AAmCD,G;;;;;kBAGY,IAAI,cAAJ,8B","file":"MyProfileStore.js","sourcesContent":["/*\n * Copyright (C) 2015 Actor LLC. <https://actor.im>\n */\n\nimport { Store } from 'flux/utils';\nimport Dispatcher from '../dispatcher/ActorAppDispatcher';\nimport { ActionTypes } from '../constants/ActorAppConstants';\nimport ActorClient from '../utils/ActorClient';\n\nlet _profile = null,\n    _name = null,\n    _nick = null,\n    _about = null,\n    _isModalOpen = false;\n\nclass MyProfileStore extends Store {\n  constructor(Dispatcher) {\n    super(Dispatcher);\n  }\n\n  isModalOpen() {\n    return _isModalOpen;\n  }\n\n  getName() {\n    return _name;\n  }\n\n  getNick() {\n    return _nick;\n  }\n\n  getAbout() {\n    return _about;\n  }\n\n  getProfile() {\n    return _profile;\n  }\n\n  setProfile(profile) {\n    _profile = profile;\n    _name = profile.name;\n    _nick = profile.nick;\n    _about = profile.about;\n  }\n\n  __onDispatch(action) {\n    switch(action.type) {\n      case ActionTypes.MY_PROFILE_MODAL_SHOW:\n        _isModalOpen = true;\n        this.__emitChange();\n        break;\n      case ActionTypes.MY_PROFILE_MODAL_HIDE:\n        _isModalOpen = false;\n        this.__emitChange();\n        break;\n      case ActionTypes.MY_PROFILE_CHANGED:\n        this.setProfile(action.profile);\n        this.__emitChange();\n        break;\n      case ActionTypes.MY_PROFILE_SAVE_NAME:\n        if (_name !== action.name) {\n          _name = action.name;\n          ActorClient.editMyName(_name);\n          this.__emitChange();\n        }\n        break;\n      case ActionTypes.MY_PROFILE_SAVE_NICKNAME:\n        if (_nick !== action.nick) {\n          _nick = action.nick;\n          ActorClient.editMyNick(_nick);\n          this.__emitChange();\n        }\n        break;\n      case ActionTypes.MY_PROFILE_EDIT_ABOUT_SUCCESS:\n        if (_about !== action.about) {\n          _about = action.about;\n          this.__emitChange();\n        }\n        break;\n      default:\n    }\n  }\n}\n\nexport default new MyProfileStore(Dispatcher);\n"]}