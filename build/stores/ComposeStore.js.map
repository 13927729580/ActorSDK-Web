{"version":3,"sources":["../../src/stores/ComposeStore.js"],"names":[],"mappings":"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","file":"ComposeStore.js","sourcesContent":["/*\n * Copyright (C) 2015 Actor LLC. <https://actor.im>\n */\n\nimport { Store } from 'flux/utils';\nimport Dispatcher from '../dispatcher/ActorAppDispatcher';\nimport ActorClient from '../utils/ActorClient';\nimport { ActionTypes, PeerTypes } from '../constants/ActorAppConstants';\n\nimport DraftStore from './DraftStore';\n\nconst getQuery = (text, position) => {\n  const run = (runText, query) => {\n    if (runText.length === 0) {\n      return null;\n    } else {\n      const lastChar = runText.charAt(runText.length - 1);\n      if (lastChar === '@') {\n        const charBeforeAt = runText.charAt(runText.length - 2);\n        if (charBeforeAt.trim() === '') {\n          const text = (query || '');\n          const atStart = text.length + 1 === position;\n\n          return {\n            text: text,\n            atStart: atStart\n          };\n        } else {\n          return null;\n        }\n      } else if (lastChar.trim() === '') {\n        return null;\n      } else {\n        return run(runText.substring(0, runText.length - 1), lastChar + (query || ''));\n      }\n    }\n  };\n\n  const runText = text.substring(0, position);\n  return run(runText, null);\n};\n\nlet text = '';\nlet mentions = null;\nlet _isAutoFocusEnabled = true;\n\nclass ComposeStore extends Store {\n  constructor(dispatcher) {\n    super(dispatcher);\n  }\n\n  getMentions() {\n    return mentions;\n  }\n\n  getText() {\n    return text;\n  }\n\n  isAutoFocusEnabled() {\n    return _isAutoFocusEnabled;\n  }\n\n  onTyping = (action) => {\n    text = action.text;\n    const query = getQuery(text, action.caretPosition);\n\n    if (action.peer.type === PeerTypes.GROUP && query !== null) {\n      mentions = ActorClient.findMentions(action.peer.id, query.text);\n    } else {\n      mentions = null;\n    }\n\n    this.__emitChange();\n  };\n\n  onMentionInsert = (action) => {\n    const query = getQuery(action.text, action.caretPosition);\n    const mentionEnding = query.atStart ? ': ' : ' ';\n\n    text = action.text.substring(0, action.caretPosition - query.text.length - 1) +\n      action.mention.mentionText +\n      mentionEnding +\n      action.text.substring(action.caretPosition, action.text.length);\n\n    mentions = null;\n\n    this.__emitChange();\n  };\n\n  onMentionClose = () => {\n    mentions = null;\n    this.__emitChange();\n  };\n\n  onComposeClean = () => {\n    text = '';\n    mentions = null;\n    this.__emitChange();\n  };\n\n  onDraftLoad = () => {\n    text = DraftStore.getDraft();\n    this.__emitChange();\n  };\n\n  onEmojiInsert = (action) => {\n    const emojiText = `${action.emoji} `;\n\n    text = action.text.substring(0, action.caretPosition) +\n      emojiText +\n      action.text.substring(action.caretPosition, action.text.length);\n\n    this.__emitChange();\n  };\n\n  onComposePaste = (newText) => {\n    text = newText;\n    this.__emitChange();\n  };\n\n  __onDispatch(action) {\n    switch (action.type) {\n      case ActionTypes.COMPOSE_TYPING:\n        this.onTyping(action);\n        break;\n      case ActionTypes.COMPOSE_MENTION_INSERT:\n        this.onMentionInsert(action);\n        break;\n      case ActionTypes.COMPOSE_MENTION_CLOSE:\n        this.onMentionClose();\n        break;\n      case ActionTypes.COMPOSE_CLEAN:\n        this.onComposeClean();\n        break;\n      case ActionTypes.DRAFT_LOAD:\n        this.onDraftLoad();\n        break;\n      case ActionTypes.EMOJI_INSERT:\n        this.onEmojiInsert(action);\n        break;\n      case ActionTypes.COMPOSE_PASTE:\n        this.onComposePaste(action.text);\n        break;\n\n      case ActionTypes.COMPOSE_TOGGLE_AUTO_FOCUS:\n        _isAutoFocusEnabled = action.isEnable;\n        this.__emitChange();\n        break;\n\n      case ActionTypes.SEARCH_TOGGLE_FOCUS:\n        _isAutoFocusEnabled = !action.isEnable;\n        this.__emitChange();\n        break;\n\n      default:\n    }\n  }\n}\n\nexport default new ComposeStore(Dispatcher);\n"]}