{"version":3,"sources":["../../src/stores/ComposeStore.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAWA,IAAM,QAAQ,GAAG,SAAX,QAAQ,CAAI,IAAI,EAAE,QAAQ,EAAK;AACnC,MAAM,GAAG,GAAG,SAAN,GAAG,CAAI,OAAO,EAAE,KAAK,EAAK;AAC9B,QAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;AACxB,aAAO,IAAI,CAAC;KACb,MAAM;AACL,UAAM,QAAQ,GAAG,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;AACpD,UAAI,QAAQ,KAAK,GAAG,EAAE;AACpB,YAAM,YAAY,GAAG,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;AACxD,YAAI,YAAY,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE;AAC9B,cAAM,KAAI,GAAI,KAAK,IAAI,EAAE,AAAC,CAAC;AAC3B,cAAM,OAAO,GAAG,KAAI,CAAC,MAAM,GAAG,CAAC,KAAK,QAAQ,CAAC;;AAE7C,iBAAO;AACL,gBAAI,EAAE,KAAI;AACV,mBAAO,EAAE,OAAO;WACjB,CAAC;SACH,MAAM;AACL,iBAAO,IAAI,CAAC;SACb;OACF,MAAM,IAAI,QAAQ,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE;AACjC,eAAO,IAAI,CAAC;OACb,MAAM;AACL,eAAO,GAAG,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,EAAE,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE,QAAQ,IAAI,KAAK,IAAI,EAAE,CAAA,AAAC,CAAC,CAAC;OAChF;KACF;GACF,CAAC;;AAEF,MAAM,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC;AAC5C,SAAO,GAAG,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;CAC3B,CAAC;;AAEF,IAAI,IAAI,GAAG,EAAE,CAAC;AACd,IAAI,QAAQ,GAAG,IAAI,CAAC;AACpB,IAAI,mBAAmB,GAAG,IAAI,CAAC;;IAEzB,YAAY;YAAZ,YAAY;;AAChB,WADI,YAAY,CACJ,UAAU,EAAE;0BADpB,YAAY;;uEAAZ,YAAY,aAER,UAAU;;UAelB,QAAQ,GAAG,UAAC,MAAM,EAAK;AACrB,UAAI,GAAG,MAAM,CAAC,IAAI,CAAC;AACnB,UAAM,KAAK,GAAG,QAAQ,CAAC,IAAI,EAAE,MAAM,CAAC,aAAa,CAAC,CAAC;;AAEnD,UAAI,MAAM,CAAC,IAAI,CAAC,IAAI,KAAK,6BAAU,KAAK,IAAI,KAAK,KAAK,IAAI,EAAE;AAC1D,gBAAQ,GAAG,sBAAY,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC;OACjE,MAAM;AACL,gBAAQ,GAAG,IAAI,CAAC;OACjB;;AAED,YAAK,YAAY,EAAE,CAAC;KACrB;;UAED,eAAe,GAAG,UAAC,MAAM,EAAK;AAC5B,UAAM,KAAK,GAAG,QAAQ,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,aAAa,CAAC,CAAC;AAC1D,UAAM,aAAa,GAAG,KAAK,CAAC,OAAO,GAAG,IAAI,GAAG,GAAG,CAAC;;AAEjD,UAAI,GAAG,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,MAAM,CAAC,aAAa,GAAG,KAAK,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,GAC3E,MAAM,CAAC,OAAO,CAAC,WAAW,GAC1B,aAAa,GACb,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,aAAa,EAAE,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;;AAElE,cAAQ,GAAG,IAAI,CAAC;;AAEhB,YAAK,YAAY,EAAE,CAAC;KACrB;;UAED,cAAc,GAAG,YAAM;AACrB,cAAQ,GAAG,IAAI,CAAC;AAChB,YAAK,YAAY,EAAE,CAAC;KACrB;;UAED,cAAc,GAAG,YAAM;AACrB,UAAI,GAAG,EAAE,CAAC;AACV,cAAQ,GAAG,IAAI,CAAC;AAChB,YAAK,YAAY,EAAE,CAAC;KACrB;;UAED,kBAAkB,GAAG,YAAM;;AAEzB,UAAI,GAAG,qBAAW,QAAQ,EAAE,CAAC;AAC7B,YAAK,YAAY,EAAE,CAAC;KACrB;;UAED,aAAa,GAAG,UAAC,MAAM,EAAK;AAC1B,UAAM,SAAS,GAAM,MAAM,CAAC,KAAK,MAAG,CAAC;;AAErC,UAAI,GAAG,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,MAAM,CAAC,aAAa,CAAC,GACnD,SAAS,GACT,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,aAAa,EAAE,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;;AAElE,YAAK,YAAY,EAAE,CAAC;KACrB;;UAED,cAAc,GAAG,UAAC,OAAO,EAAK;AAC5B,UAAI,GAAG,OAAO,CAAC;AACf,YAAK,YAAY,EAAE,CAAC;KACrB;;;GAvEA;;eAHG,YAAY;;kCAKF;AACZ,aAAO,QAAQ,CAAC;KACjB;;;8BAES;AACR,aAAO,IAAI,CAAC;KACb;;;yCAEoB;AACnB,aAAO,mBAAmB,CAAC;KAC5B;;;iCA6DY,MAAM,EAAE;AACnB,cAAQ,MAAM,CAAC,IAAI;AACjB,aAAK,+BAAY,cAAc;AAC7B,cAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;AACtB,gBAAM;AAAA,AACR,aAAK,+BAAY,sBAAsB;AACrC,cAAI,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;AAC7B,gBAAM;AAAA,AACR,aAAK,+BAAY,qBAAqB;AACpC,cAAI,CAAC,cAAc,EAAE,CAAC;AACtB,gBAAM;AAAA,AACR,aAAK,+BAAY,aAAa;AAC5B,cAAI,CAAC,cAAc,EAAE,CAAC;AACtB,gBAAM;AAAA,AACR,aAAK,+BAAY,kBAAkB;AACjC,cAAI,CAAC,kBAAkB,EAAE,CAAC;AAC1B,gBAAM;AAAA,AACR,aAAK,+BAAY,YAAY;AAC3B,cAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;AAC3B,gBAAM;AAAA,AACR,aAAK,+BAAY,aAAa;AAC5B,cAAI,CAAC,cAAc,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AACjC,gBAAM;;AAAA,AAER,aAAK,+BAAY,yBAAyB;AACxC,6BAAmB,GAAG,MAAM,CAAC,QAAQ,CAAC;AACtC,cAAI,CAAC,YAAY,EAAE,CAAC;AACpB,gBAAM;;AAAA,AAER,gBAAQ;OACT;KACF;;;SA3GG,YAAY;;;kBA8GH,IAAI,YAAY,8BAAY","file":"ComposeStore.js","sourcesContent":["/*\n * Copyright (C) 2015 Actor LLC. <https://actor.im>\n */\n\nimport { Store } from 'flux/utils';\nimport Dispatcher from '../dispatcher/ActorAppDispatcher';\nimport ActorClient from '../utils/ActorClient';\nimport { ActionTypes, PeerTypes } from '../constants/ActorAppConstants';\n\nimport DraftStore from './DraftStore';\n\nconst getQuery = (text, position) => {\n  const run = (runText, query) => {\n    if (runText.length === 0) {\n      return null;\n    } else {\n      const lastChar = runText.charAt(runText.length - 1);\n      if (lastChar === '@') {\n        const charBeforeAt = runText.charAt(runText.length - 2);\n        if (charBeforeAt.trim() === '') {\n          const text = (query || '');\n          const atStart = text.length + 1 === position;\n\n          return {\n            text: text,\n            atStart: atStart\n          };\n        } else {\n          return null;\n        }\n      } else if (lastChar.trim() === '') {\n        return null;\n      } else {\n        return run(runText.substring(0, runText.length - 1), lastChar + (query || ''));\n      }\n    }\n  };\n\n  const runText = text.substring(0, position);\n  return run(runText, null);\n};\n\nlet text = '';\nlet mentions = null;\nlet _isAutoFocusEnabled = true;\n\nclass ComposeStore extends Store {\n  constructor(dispatcher) {\n    super(dispatcher);\n  }\n\n  getMentions() {\n    return mentions;\n  }\n\n  getText() {\n    return text;\n  }\n\n  isAutoFocusEnabled() {\n    return _isAutoFocusEnabled;\n  }\n\n  onTyping = (action) => {\n    text = action.text;\n    const query = getQuery(text, action.caretPosition);\n\n    if (action.peer.type === PeerTypes.GROUP && query !== null) {\n      mentions = ActorClient.findMentions(action.peer.id, query.text);\n    } else {\n      mentions = null;\n    }\n\n    this.__emitChange();\n  };\n\n  onMentionInsert = (action) => {\n    const query = getQuery(action.text, action.caretPosition);\n    const mentionEnding = query.atStart ? ': ' : ' ';\n\n    text = action.text.substring(0, action.caretPosition - query.text.length - 1) +\n      action.mention.mentionText +\n      mentionEnding +\n      action.text.substring(action.caretPosition, action.text.length);\n\n    mentions = null;\n\n    this.__emitChange();\n  };\n\n  onMentionClose = () => {\n    mentions = null;\n    this.__emitChange();\n  };\n\n  onComposeClean = () => {\n    text = '';\n    mentions = null;\n    this.__emitChange();\n  };\n\n  onSelectDialogPeer = () => {\n    //waitFor([DraftStore.dispatchToken]);\n    text = DraftStore.getDraft();\n    this.__emitChange();\n  };\n\n  onEmojiInsert = (action) => {\n    const emojiText = `${action.emoji} `;\n\n    text = action.text.substring(0, action.caretPosition) +\n      emojiText +\n      action.text.substring(action.caretPosition, action.text.length);\n\n    this.__emitChange();\n  };\n\n  onComposePaste = (newText) => {\n    text = newText;\n    this.__emitChange();\n  };\n\n  __onDispatch(action) {\n    switch (action.type) {\n      case ActionTypes.COMPOSE_TYPING:\n        this.onTyping(action);\n        break;\n      case ActionTypes.COMPOSE_MENTION_INSERT:\n        this.onMentionInsert(action);\n        break;\n      case ActionTypes.COMPOSE_MENTION_CLOSE:\n        this.onMentionClose();\n        break;\n      case ActionTypes.COMPOSE_CLEAN:\n        this.onComposeClean();\n        break;\n      case ActionTypes.SELECT_DIALOG_PEER:\n        this.onSelectDialogPeer();\n        break;\n      case ActionTypes.EMOJI_INSERT:\n        this.onEmojiInsert(action);\n        break;\n      case ActionTypes.COMPOSE_PASTE:\n        this.onComposePaste(action.text);\n        break;\n\n      case ActionTypes.COMPOSE_TOGGLE_AUTO_FOCUS:\n        _isAutoFocusEnabled = action.isEnable;\n        this.__emitChange();\n        break;\n\n      default:\n    }\n  };\n}\n\nexport default new ComposeStore(Dispatcher);\n"]}