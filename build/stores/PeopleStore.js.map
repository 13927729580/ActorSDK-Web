{"version":3,"sources":["../../src/stores/PeopleStore.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAUA,IAAI,OAAO,GAAG,KAAK;IACf,KAAK,GAAG,EAAE;IACV,QAAQ,GAAG,EAAE;;;;;AAAC;IAKZ,WAAW;YAAX,WAAW;;AACf,WADI,WAAW,CACH,UAAU,EAAE;0BADpB,WAAW;;kEAAX,WAAW,aAEP,UAAU;GACjB;;;;;AAAA;eAHG,WAAW;;6BAQN;AACP,aAAO,OAAO,CAAC;KAChB;;;;;;;;8BAKS;AACR,aAAO,KAAK,CAAC;KACd;;;;;;;;iCAKY;AACX,aAAO,QAAQ,CAAC;KACjB;;;sCAGiB,KAAK,EAAE;AACvB,UAAI,OAAO,GAAG,EAAE,CAAC;;AAEjB,UAAI,KAAK,KAAK,EAAE,EAAE;AAChB,eAAO,GAAG,KAAK,CAAC;OACjB,MAAM;AACL,oBA9CG,OAAO,EA8CF,KAAK,EAAE,UAAC,MAAM,EAAK;AACzB,cAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;AACvC,cAAI,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,EAAE;AACtC,mBAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;WACtB;SACF,CAAC,CAAA;OACH;;AAED,cAAQ,GAAG,OAAO,CAAC;KACpB;;;iCAEY,MAAM,EAAE;AACnB,cAAQ,MAAM,CAAC,IAAI;AACjB,aAAK,mBAxDF,WAAW,CAwDG,iBAAiB;AAChC,iBAAO,GAAI,IAAI,CAAC;AAChB,cAAI,CAAC,iBAAiB,CAAC,EAAE,CAAC,CAAC;AAC3B,cAAI,CAAC,YAAY,EAAE,CAAC;AACpB,gBAAM;AAAA,AACR,aAAK,mBA7DF,WAAW,CA6DG,iBAAiB;AAChC,iBAAO,GAAI,KAAK,CAAC;AACjB,kBAAQ,GAAG,EAAE,CAAC;AACd,cAAI,CAAC,YAAY,EAAE,CAAC;AACpB,gBAAM;;AAAA,AAER,aAAK,mBAnEF,WAAW,CAmEG,oBAAoB;;AAEnC,eAAK,GAAG,YAxEE,MAAM,EAwED,MAAM,CAAC,QAAQ,EAAE,UAAC,OAAO,EAAK;AAC3C,gBAAI,OAAO,CAAC,GAAG,IAAI,sBAAY,MAAM,EAAE,EAAE;AACvC,qBAAO,OAAO,CAAC;aAChB;WACF,CAAC,CAAC;AACH,cAAI,CAAC,YAAY,EAAE,CAAC;AACpB,gBAAM;;AAAA,AAER,aAAK,mBA7EF,WAAW,CA6EG,mBAAmB;AAClC,cAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;AACrC,cAAI,CAAC,YAAY,EAAE,CAAC;AACpB,gBAAM;;AAAA,AAER,aAAK,mBAlFF,WAAW,CAkFG,WAAW,CAAC;AAC7B,aAAK,mBAnFF,WAAW,CAmFG,cAAc;AAC7B,cAAI,CAAC,YAAY,EAAE,CAAC;AACpB,gBAAM;AAAA,AACR,gBAAQ;OACT;KACF;;;SA9EG,WAAW;UAZR,KAAK;;kBA6FC,IAAI,WAAW,8BAAY","file":"PeopleStore.js","sourcesContent":["/*\n * Copyright (C) 2015 Actor LLC. <https://actor.im>\n */\n\nimport { forEach, filter } from 'lodash';\nimport { Store } from 'flux/utils';\nimport Dispatcher from '../dispatcher/ActorAppDispatcher';\nimport { ActionTypes } from '../constants/ActorAppConstants';\nimport ActorClient from '../utils/ActorClient';\n\nlet _isOpen = false,\n    _list = [],\n    _results = [];\n\n/**\n * Class representing a store for searchable people list.\n */\nclass PeopleStore extends Store {\n  constructor(dispatcher) {\n    super(dispatcher);\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  isOpen() {\n    return _isOpen;\n  }\n\n  /**\n   * @returns {Array}\n   */\n  getList() {\n    return _list;\n  }\n\n  /**\n   * @returns {Array}\n   */\n  getResults() {\n    return _results;\n  }\n\n\n  handleSearchQuery(query) {\n    let results = [];\n\n    if (query === '') {\n      results = _list;\n    } else {\n      forEach(_list, (result) => {\n        const name = result.name.toLowerCase();\n        if (name.includes(query.toLowerCase())) {\n          results.push(result);\n        }\n      })\n    }\n\n    _results = results;\n  }\n\n  __onDispatch(action) {\n    switch (action.type) {\n      case ActionTypes.CONTACT_LIST_SHOW:\n        _isOpen  = true;\n        this.handleSearchQuery('');\n        this.__emitChange();\n        break;\n      case ActionTypes.CONTACT_LIST_HIDE:\n        _isOpen  = false;\n        _results = [];\n        this.__emitChange();\n        break;\n\n      case ActionTypes.CONTACT_LIST_CHANGED:\n        // Remove current user from contacts list\n        _list = filter(action.contacts, (contact) => {\n          if (contact.uid != ActorClient.getUid()) {\n            return contact;\n          }\n        });\n        this.__emitChange();\n        break;\n\n      case ActionTypes.CONTACT_LIST_SEARCH:\n        this.handleSearchQuery(action.query);\n        this.__emitChange();\n        break;\n\n      case ActionTypes.CONTACT_ADD:\n      case ActionTypes.CONTACT_REMOVE:\n        this.__emitChange();\n        break;\n      default:\n    }\n  }\n}\n\nexport default new PeopleStore(Dispatcher);\n"]}