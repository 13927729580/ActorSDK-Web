{"version":3,"sources":["../../src/stores/PeopleStore.js"],"names":[],"mappings":";;;;;;AAIA;;AACA;;;;AACA;;AACA;;;;;;;;;;;;;;IAEM,W;;;;;;;;;wBACJ,e,8BAAkB;AAChB,WAAO,EAAP;AACD,G;;wBAED,M,mBAAO,K,EAAO,M,EAAQ;AACpB,QAAI,OAAO,IAAP,KAAgB,+BAAY,oBAAhC,EAAsD;AAAA;AACpD,YAAM,MAAM,sBAAY,MAAZ,EAAZ;AACA;AAAA,aAAO,OAAO,QAAP,CAAgB,MAAhB,CAAuB,UAAC,OAAD;AAAA,mBAAa,QAAQ,GAAR,KAAgB,GAA7B;AAAA,WAAvB;AAAP;AAFoD;;AAAA;AAGrD;;AAED,WAAO,KAAP;AACD,G;;;;;kBAGY,IAAI,WAAJ,8B","file":"PeopleStore.js","sourcesContent":["/*\n * Copyright (C) 2016 Actor LLC. <https://actor.im>\n */\n\nimport { ReduceStore } from 'flux/utils';\nimport Dispatcher from '../dispatcher/ActorAppDispatcher';\nimport { ActionTypes } from '../constants/ActorAppConstants';\nimport ActorClient from '../utils/ActorClient';\n\nclass PeopleStore extends ReduceStore {\n  getInitialState() {\n    return [];\n  }\n\n  reduce(state, action) {\n    if (action.type === ActionTypes.CONTACT_LIST_CHANGED) {\n      const uid = ActorClient.getUid();\n      return action.contacts.filter((contact) => contact.uid !== uid);\n    }\n\n    return state;\n  }\n}\n\nexport default new PeopleStore(Dispatcher);\n"]}