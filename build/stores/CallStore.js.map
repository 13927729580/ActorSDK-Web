{"version":3,"sources":["../../src/stores/CallStore.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAQA,IAAI,OAAO,GAAG,KAAK,CAAC;AACpB,IAAI,WAAW,GAAG,KAAK,CAAC;AACxB,IAAI,GAAG,YAAA;IAAE,QAAQ,YAAA;IAAE,KAAK,YAAA;IAAE,MAAM,YAAA,CAAC;;IAE3B,SAAS;YAAT,SAAS;;AACb,WADI,SAAS,CACD,UAAU,EAAE;0BADpB,SAAS;;4CAEX,kBAAM,UAAU,CAAC;GAClB;;AAHG,WAAS,WAKb,MAAM,qBAAG;AACP,WAAO,OAAO,CAAC;GAChB;;AAPG,WAAS,WASb,UAAU,yBAAG;AACX,WAAO,WAAW,CAAA;GACnB;;AAXG,WAAS,WAab,KAAK,oBAAG;AACN,WAAO,GAAG,CAAC;GACZ;;AAfG,WAAS,WAiBb,UAAU,yBAAG;AACX,WAAO,QAAQ,CAAC;GACjB;;AAnBG,WAAS,WAqBb,OAAO,sBAAG;AACR,WAAO,KAAK,CAAC;GACd;;AAvBG,WAAS,WAyBb,QAAQ,uBAAG;AACT,WAAO,MAAM,CAAC;GACf;;AA3BG,WAAS,WA6Bb,YAAY,yBAAC,MAAM,EAAE;AACnB,YAAO,MAAM,CAAC,IAAI;AAChB,WAAK,+BAAY,eAAe;AAC9B,eAAO,GAAG,IAAI,CAAC;AACf,WAAG,GAAI,MAAM,CAAC,EAAE,CAAC;AACjB,YAAI,CAAC,YAAY,EAAE,CAAC;AACpB,cAAM;AAAA,AACR,WAAK,+BAAY,eAAe;AAC9B,eAAO,GAAG,KAAK,CAAC;AAChB,YAAI,CAAC,YAAY,EAAE,CAAC;AACpB,cAAM;AAAA,AACR,WAAK,+BAAY,YAAY;2BACkB,MAAM,CAAC,IAAI;YAAhD,OAAO,gBAAP,OAAO;YAAE,IAAI,gBAAJ,IAAI;YAAE,KAAK,gBAAL,KAAK;YAAE,UAAU,gBAAV,UAAU;;AACxC,mBAAW,GAAG,UAAU,CAAC;AACzB,gBAAQ,GAAG,OAAO,CAAC;AACnB,aAAK,GAAG,IAAI,CAAC;AACb,cAAM,GAAG,KAAK,CAAC;AACf,YAAI,CAAC,YAAY,EAAE,CAAC;AACpB,cAAM;AAAA,AACR,WAAK,+BAAY,IAAI;;AAEnB,cAAM;AAAA,AACR,cAAQ;KACT;GACF;;SArDG,SAAS;;;kBAwDA,IAAI,SAAS,8BAAY","file":"CallStore.js","sourcesContent":["/*\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\n */\n\nimport { Store } from 'flux/utils';\nimport Dispatcher from '../dispatcher/ActorAppDispatcher';\nimport { ActionTypes } from '../constants/ActorAppConstants';\n\nlet _isOpen = false;\nlet _isOutgoing = false;\nlet _id, _members, _peer, _state;\n\nclass CallStore extends Store {\n  constructor(dispatcher) {\n    super(dispatcher);\n  }\n\n  isOpen() {\n    return _isOpen;\n  }\n\n  isOutgoing() {\n    return _isOutgoing\n  }\n\n  getId() {\n    return _id;\n  }\n\n  getMembers() {\n    return _members;\n  }\n\n  getPeer() {\n    return _peer;\n  }\n\n  getState() {\n    return _state;\n  }\n\n  __onDispatch(action) {\n    switch(action.type) {\n      case ActionTypes.CALL_MODAL_OPEN:\n        _isOpen = true;\n        _id  = action.id;\n        this.__emitChange();\n        break;\n      case ActionTypes.CALL_MODAL_HIDE:\n        _isOpen = false;\n        this.__emitChange();\n        break;\n      case ActionTypes.CALL_CHANGED:\n        const { members, peer, state, isOutgoing } = action.call;\n        _isOutgoing = isOutgoing;\n        _members = members;\n        _peer = peer;\n        _state = state;\n        this.__emitChange();\n        break;\n      case ActionTypes.CALL:\n        // console.debug('ActionTypes.CALL', action);\n        break;\n      default:\n    }\n  };\n}\n\nexport default new CallStore(Dispatcher);\n"]}