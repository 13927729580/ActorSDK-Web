{"version":3,"sources":["../../src/stores/GroupStore.js"],"names":[],"mappings":";;;;;;AAIA;;AACA;;;;AACA;;AACA;;;;;;;;;;;;;;IAEM,U;;;;;;;;;uBACJ,e,8BAAkB;AAChB,WAAO;AACL,aAAO;AADF,KAAP;AAGD,G;;uBAED,M,mBAAO,K,EAAO,M,EAAQ;AACpB,YAAQ,OAAO,IAAf;;AAEE,WAAK,+BAAY,eAAjB;AACE,eAAO,KAAP;AACF,WAAK,+BAAY,uBAAjB;AACE,4BACK,KADL;AAEE,iBAAO,OAAO;AAFhB;AAIF,WAAK,+BAAY,qBAAjB;AACE,eAAO,KAAK,eAAL,EAAP;;AAEF,WAAK,+BAAY,WAAjB;AACA,WAAK,+BAAY,mBAAjB;AACA,WAAK,+BAAY,iBAAjB;AACA,WAAK,+BAAY,WAAjB;AACA,WAAK,+BAAY,mBAAjB;AACA,WAAK,+BAAY,iBAAjB;AACA,WAAK,+BAAY,YAAjB;AACA,WAAK,+BAAY,oBAAjB;AACA,WAAK,+BAAY,kBAAjB;AACA;AACE,eAAO,KAAP;AAtBJ;AAwBD,G;;;;;;;;;;uBAQD,Q,qBAAS,G,EAAK;AACZ,WAAO,sBAAY,QAAZ,CAAqB,GAArB,CAAP;AACD,G;;;;;;;;;uBAOD,Q,uBAAW;AACT,WAAO,KAAK,QAAL,GAAgB,KAAvB;AACD,G;;;;;kBAGY,IAAI,UAAJ,8B","file":"GroupStore.js","sourcesContent":["/*\n * Copyright (C) 2016 Actor LLC. <https://actor.im>\n */\n\nimport { ReduceStore } from 'flux/utils';\nimport Dispatcher from '../dispatcher/ActorAppDispatcher';\nimport { ActionTypes } from '../constants/ActorAppConstants';\nimport ActorClient from '../utils/ActorClient';\n\nclass GroupStore extends ReduceStore {\n  getInitialState() {\n    return {\n      token: null\n    };\n  }\n\n  reduce(state, action) {\n    switch (action.type) {\n\n      case ActionTypes.GROUP_GET_TOKEN:\n        return state;\n      case ActionTypes.GROUP_GET_TOKEN_SUCCESS:\n        return {\n          ...state,\n          token: action.response\n        }\n      case ActionTypes.GROUP_GET_TOKEN_ERROR:\n        return this.getInitialState()\n\n      case ActionTypes.GROUP_CLEAR:\n      case ActionTypes.GROUP_CLEAR_SUCCESS:\n      case ActionTypes.GROUP_CLEAR_ERROR:\n      case ActionTypes.GROUP_LEAVE:\n      case ActionTypes.GROUP_LEAVE_SUCCESS:\n      case ActionTypes.GROUP_LEAVE_ERROR:\n      case ActionTypes.GROUP_DELETE:\n      case ActionTypes.GROUP_DELETE_SUCCESS:\n      case ActionTypes.GROUP_DELETE_ERROR:\n      default:\n        return state;\n    }\n  }\n\n  /**\n   * Get group information\n   *\n   * @param gid {number} Group id\n   * @returns {object} Group information\n   */\n  getGroup(gid) {\n    return ActorClient.getGroup(gid);\n  }\n\n  /**\n   * Get group integration token\n   *\n   * @returns {string|null}\n   */\n  getToken() {\n    return this.getState().token;\n  }\n}\n\nexport default new GroupStore(Dispatcher);\n"]}