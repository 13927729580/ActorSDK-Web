{"version":3,"sources":["../../src/stores/GroupListStore.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AASA,IAAI,OAAO,GAAG,KAAK;IACf,UAAU,GAAG,EAAE;IACf,MAAM,GAAG,EAAE,CAAC;;IAEV,UAAU;YAAV,UAAU;;AACd,WADI,UAAU,CACF,UAAU,EAAE;0BADpB,UAAU;;uEAAV,UAAU,aAEN,UAAU;;UAelB,YAAY,GAAG,UAAC,MAAM,EAAK;AACzB,cAAQ,MAAM,CAAC,IAAI;AACjB,aAAK,mBA1BF,WAAW,CA0BG,eAAe;AAC9B,iBAAO,GAAI,KAAK,CAAC;AACjB,gBAAM,GAAG,EAAE,CAAC;AACZ,gBAAK,YAAY,EAAE,CAAC;AACpB,gBAAM;;AAAA,AAER,aAAK,mBAhCF,WAAW,CAgCG,eAAe;AAC9B,iBAAO,GAAI,IAAI,CAAC;AAChB,gBAAK,YAAY,EAAE,CAAC;AACpB,gBAAM;AAAA,AACR,aAAK,mBApCF,WAAW,CAoCG,uBAAuB;AACtC,oBAAU,GAAG,MAAM,CAAC,QAAQ,CAAC;AAC7B,gBAAK,YAAY,EAAE,CAAC;AACpB,gBAAM;AAAA,AACR,aAAK,mBAxCF,WAAW,CAwCG,qBAAqB;AACpC,iBAAO,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;AAC3B,gBAAK,YAAY,EAAE,CAAC;AACpB,gBAAM;;AAAA,AAER,aAAK,mBA7CF,WAAW,CA6CG,iBAAiB;AAChC,gBAAM,GAAG,MAAM,CAAC,KAAK,CAAC;AACtB,gBAAK,YAAY,EAAE,CAAC;AACpB,gBAAM;AAAA,OACT;KACF;;;GAxCA;;eAHG,UAAU;;mCAKC;AACb,aAAO,OAAO,CAAC;KAChB;;;8BAES;AACR,aAAO,UAAU,CAAC;KACnB;;;qCAEgB;AACf,aAAO,MAAM,CAAC;KACf;;;SAfG,UAAU;UATP,KAAK;;kBAuDC,IAAI,UAAU,8BAAY","file":"GroupListStore.js","sourcesContent":["/*\n * Copyright (C) 2015 Actor LLC. <https://actor.im>\n */\n\nimport { Store } from 'flux/utils';\nimport Dispatcher from '../dispatcher/ActorAppDispatcher';\nimport { ActionTypes, AsyncActionStates } from '../constants/ActorAppConstants';\nimport ActorClient from '../utils/ActorClient';\n\nlet _isOpen = false,\n    _groupList = [],\n    _query = '';\n\nclass GroupStore extends Store {\n  constructor(Dispatcher) {\n    super(Dispatcher);\n  }\n\n  isGroupsOpen() {\n    return _isOpen;\n  }\n\n  getList() {\n    return _groupList;\n  }\n\n  getSearchQuery() {\n    return _query;\n  }\n\n  __onDispatch = (action) => {\n    switch (action.type) {\n      case ActionTypes.GROUP_LIST_HIDE:\n        _isOpen  = false;\n        _query = '';\n        this.__emitChange();\n        break;\n\n      case ActionTypes.GROUP_LIST_LOAD:\n        _isOpen  = true;\n        this.__emitChange();\n        break;\n      case ActionTypes.GROUP_LIST_LOAD_SUCCESS:\n        _groupList = action.response;\n        this.__emitChange();\n        break;\n      case ActionTypes.GROUP_LIST_LOAD_ERROR:\n        console.erro(action.error);\n        this.__emitChange();\n        break;\n\n      case ActionTypes.GROUP_LIST_SEARCH:\n        _query = action.query;\n        this.__emitChange();\n        break;\n    }\n  }\n}\n\nexport default new GroupStore(Dispatcher);\n"]}