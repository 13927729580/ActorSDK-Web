{"version":3,"sources":["../../src/stores/GroupListStore.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAUA,IAAI,OAAO,GAAG,KAAK;IACf,KAAK,GAAG,EAAE;IACV,QAAQ,GAAG,EAAE;;;;;AAAC;IAKZ,UAAU;YAAV,UAAU;;AACd,WADI,UAAU,CACF,UAAU,EAAE;0BADpB,UAAU;;4CAEZ,kBAAM,UAAU,CAAC;GAClB;;;;;AAAA;AAHG,YAAU,WAQd,MAAM,qBAAG;AACP,WAAO,OAAO,CAAC;GAChB;;;;;;AAVG,YAAU,WAed,OAAO,sBAAG;AACR,WAAO,KAAK,CAAC;GACd;;;;;;AAjBG,YAAU,WAsBd,UAAU,yBAAG;AACX,WAAO,QAAQ,CAAC;GACjB;;AAxBG,YAAU,WA2Bd,iBAAiB,8BAAC,KAAK,EAAE;AACvB,QAAI,OAAO,GAAG,EAAE,CAAC;;AAEjB,QAAI,KAAK,KAAK,EAAE,EAAE;AAChB,aAAO,GAAG,KAAK,CAAC;KACjB,MAAM;AACL,2BAAQ,KAAK,EAAE,UAAC,MAAM,EAAK;AACzB,YAAM,KAAK,GAAG,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC;AAClD,YAAI,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,EAAE;AACvC,iBAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SACtB;OACF,CAAC,CAAA;KACH;;AAED,YAAQ,GAAG,OAAO,CAAC;GACpB;;AA1CG,YAAU,WA4Cd,YAAY,yBAAC,MAAM,EAAE;AACnB,YAAQ,MAAM,CAAC,IAAI;AACjB,WAAK,+BAAY,eAAe;AAC9B,eAAO,GAAI,IAAI,CAAC;AAChB,YAAI,CAAC,iBAAiB,CAAC,EAAE,CAAC,CAAC;AAC3B,YAAI,CAAC,YAAY,EAAE,CAAC;AACpB,cAAM;AAAA,AACR,WAAK,+BAAY,eAAe;AAC9B,eAAO,GAAI,KAAK,CAAC;AACjB,gBAAQ,GAAG,EAAE,CAAC;AACd,YAAI,CAAC,YAAY,EAAE,CAAC;AACpB,cAAM;;AAAA,AAER,WAAK,+BAAY,uBAAuB;AACtC,aAAK,GAAG,MAAM,CAAC,QAAQ,CAAC;AACxB,YAAI,CAAC,iBAAiB,CAAC,EAAE,CAAC,CAAC;AAC3B,YAAI,CAAC,YAAY,EAAE,CAAC;AACpB,cAAM;AAAA,AACR,WAAK,+BAAY,qBAAqB;AACpC,eAAO,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;AAC5B,YAAI,CAAC,YAAY,EAAE,CAAC;AACpB,cAAM;;AAAA,AAER,WAAK,+BAAY,iBAAiB;AAChC,YAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;AACrC,YAAI,CAAC,YAAY,EAAE,CAAC;AACpB,cAAM;;AAAA,AAER,cAAQ;KACT;GACF;;SA1EG,UAAU;;;kBA6ED,IAAI,UAAU,8BAAY","file":"GroupListStore.js","sourcesContent":["/*\n * Copyright (C) 2015 Actor LLC. <https://actor.im>\n */\n\nimport { forEach } from 'lodash';\nimport { Store } from 'flux/utils';\nimport Dispatcher from '../dispatcher/ActorAppDispatcher';\nimport { ActionTypes } from '../constants/ActorAppConstants';\nimport ActorClient from '../utils/ActorClient';\n\nlet _isOpen = false,\n    _list = [],\n    _results = [];\n\n/**\n * Class representing a store for searchable group list.\n */\nclass GroupStore extends Store {\n  constructor(dispatcher) {\n    super(dispatcher);\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  isOpen() {\n    return _isOpen;\n  }\n\n  /**\n   * @returns {Array}\n   */\n  getList() {\n    return _list;\n  }\n\n  /**\n   * @returns {Array}\n   */\n  getResults() {\n    return _results;\n  }\n\n\n  handleSearchQuery(query) {\n    let results = [];\n\n    if (query === '') {\n      results = _list;\n    } else {\n      forEach(_list, (result) => {\n        const title = result.peerInfo.title.toLowerCase();\n        if (title.includes(query.toLowerCase())) {\n          results.push(result);\n        }\n      })\n    }\n\n    _results = results;\n  }\n\n  __onDispatch(action) {\n    switch (action.type) {\n      case ActionTypes.GROUP_LIST_SHOW:\n        _isOpen  = true;\n        this.handleSearchQuery('');\n        this.__emitChange();\n        break;\n      case ActionTypes.GROUP_LIST_HIDE:\n        _isOpen  = false;\n        _results = [];\n        this.__emitChange();\n        break;\n\n      case ActionTypes.GROUP_LIST_LOAD_SUCCESS:\n        _list = action.response;\n        this.handleSearchQuery('');\n        this.__emitChange();\n        break;\n      case ActionTypes.GROUP_LIST_LOAD_ERROR:\n        console.error(action.error);\n        this.__emitChange();\n        break;\n\n      case ActionTypes.GROUP_LIST_SEARCH:\n        this.handleSearchQuery(action.query);\n        this.__emitChange();\n        break;\n\n      default:\n    }\n  }\n}\n\nexport default new GroupStore(Dispatcher);\n"]}