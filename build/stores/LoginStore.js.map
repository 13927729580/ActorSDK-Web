{"version":3,"sources":["../../src/stores/LoginStore.js"],"names":[],"mappings":"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","file":"LoginStore.js","sourcesContent":["/*\n * Copyright (C) 2015 Actor LLC. <https://actor.im>\n */\n\nimport { Store } from 'flux/utils';\nimport Dispatcher from '../dispatcher/ActorAppDispatcher';\nimport { ActionTypes, AuthSteps } from '../constants/ActorAppConstants';\n\nimport ActorClient from '../utils/ActorClient';\n\nimport { getIntlData } from '../l18n';\n\nlet step = AuthSteps.LOGIN_WAIT,\n    errors = {\n      login: null,\n      code: null,\n      signup: null\n    },\n    login = '',\n    code = '',\n    name = '',\n    isCodeRequested = false,\n    isCodeSended = false,\n    isSignupStarted = false,\n    myUid = null;\n\nclass LoginStore extends Store {\n  constructor(dispatcher) {\n    super(dispatcher);\n\n    // TODO: do not use intlData here. save error codes and send them to ui.\n    this.intl = getIntlData();\n  }\n\n  getStep = () => step;\n  getErrors = () => errors;\n  getLogin = () => login;\n  getCode = () => code;\n  getName = () => name;\n  isCodeRequested = () => isCodeRequested;\n  isCodeSended = () => isCodeSended;\n  isSignupStarted = () => isSignupStarted;\n  getMyId = () => myUid;\n  isLoggedIn = () => ActorClient.isLoggedIn();\n\n  resetStore = () => {\n    step = AuthSteps.LOGIN_WAIT;\n    errors = {\n      login: null,\n      code: null,\n      signup: null\n    };\n    login = code = name = '';\n    isCodeRequested = isCodeSended = isSignupStarted = false;\n    myUid = null;\n  };\n\n  __onDispatch(action) {\n    switch (action.type) {\n\n      case ActionTypes.AUTH_CHANGE_LOGIN:\n        login = action.login;\n        this.__emitChange();\n        break;\n      case ActionTypes.AUTH_CHANGE_CODE:\n        code = action.code;\n        this.__emitChange();\n        break;\n      case ActionTypes.AUTH_CHANGE_NAME:\n        name = action.name;\n        this.__emitChange();\n        break;\n\n      case ActionTypes.AUTH_CODE_REQUEST:\n        isCodeRequested = true;\n        this.__emitChange();\n        break;\n      case ActionTypes.AUTH_CODE_REQUEST_SUCCESS:\n        step = AuthSteps.CODE_WAIT;\n        errors.login = null;\n        this.__emitChange();\n        break;\n      case ActionTypes.AUTH_CODE_REQUEST_FAILURE:\n        switch (action.error) {\n          case 'PHONE_NUMBER_INVALID':\n            errors.login = this.intl.messages['login.errors.numberInvalid'];\n            break;\n          case 'CODE_WAIT':\n            errors.login = this.intl.messages['login.errors.codeWait'];\n            break;\n          default:\n            errors.login = action.error;\n        }\n        isCodeRequested = false;\n        this.__emitChange();\n        break;\n\n      case ActionTypes.AUTH_CODE_SEND:\n        isCodeSended = true;\n        this.__emitChange();\n        break;\n      case ActionTypes.AUTH_CODE_SEND_SUCCESS:\n        errors.code = null;\n        this.__emitChange();\n        break;\n      case ActionTypes.AUTH_CODE_SEND_FAILURE:\n        switch (action.error) {\n          case 'PHONE_CODE_INVALID':\n          case 'EMAIL_CODE_INVALID':\n            errors.code = this.intl.messages['login.errors.codeInvalid'];\n            break;\n          case 'PHONE_CODE_EXPIRED':\n            errors.code = this.intl.messages['login.errors.codeExpired'];\n            break;\n          default:\n            errors.code = action.error;\n        }\n        isCodeSended = false;\n        this.__emitChange();\n        break;\n\n      case ActionTypes.AUTH_SIGNUP_START:\n        step = AuthSteps.NAME_WAIT;\n        this.__emitChange();\n        break;\n\n      case ActionTypes.AUTH_SIGNUP:\n        isSignupStarted = true;\n        this.__emitChange();\n        break;\n      case ActionTypes.AUTH_SIGNUP_SUCCESS:\n        errors.signup = null;\n        this.__emitChange();\n        break;\n      case ActionTypes.AUTH_SIGNUP_FAILURE:\n        switch (action.error) {\n          case 'NAME_INVALID':\n            errors.signup = this.intl.messages['login.errors.nameInvalid'];\n            break;\n          default:\n            errors.signup = action.error;\n        }\n        isSignupStarted = false;\n        this.__emitChange();\n        break;\n\n      case ActionTypes.AUTH_RESTART:\n        this.resetStore();\n        this.__emitChange();\n        break;\n\n      case ActionTypes.AUTH_SET_LOGGED_IN:\n        myUid = ActorClient.getUid();\n        this.__emitChange();\n        break;\n      case ActionTypes.AUTH_SET_LOGGED_OUT:\n        localStorage.clear();\n        location.reload();\n        break;\n      default:\n    }\n  }\n}\n\nexport default new LoginStore(Dispatcher);\n"]}