{"version":3,"sources":["../../src/stores/DraftStore.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAaA,IAAM,mBAAmB,YAAnB;;AAEN,IAAI,SAAS,IAAT;;AAEJ,IAAM,aAAa,4BAAO,EAAP,EAAW,qBAAa,SAAb,EAAwB;AACpD,0CAAgB;AACd,SAAK,IAAL,CAAU,gBAAV,EADc;GADoC;AAKpD,sDAAqB,UAAU;AAC7B,SAAK,EAAL,CAAQ,gBAAR,EAA0B,QAA1B,EAD6B;GALqB;AASpD,4DAAwB,UAAU;AAChC,SAAK,cAAL,CAAoB,gBAApB,EAAsC,QAAtC,EADgC;GATkB;AAapD,gCAAW;AACT,WAAO,MAAP,CADS;GAbyC;CAAnC,CAAb;;AAkBN,WAAW,aAAX,GAA2B,6BAAmB,QAAnB,CAA4B,UAAC,MAAD,EAAY;AACjE,UAAQ,OAAO,IAAP;AACN,SAAK,+BAAY,UAAZ;AACH,eAAS,sBAAY,SAAZ,CAAsB,OAAO,IAAP,CAA/B,CADF;AAEE,iBAAW,aAAX,GAFF;AAGE,YAHF;;AADF,SAMO,+BAAY,UAAZ;AACH,eAAS,OAAO,KAAP,CADX;AAEE,UAAI,OAAO,OAAP,EAAgB;AAClB,YAAM,OAAO,sBAAY,cAAZ,EAAP,CADY;AAElB,8BAAY,SAAZ,CAAsB,IAAtB,EAA4B,MAA5B,EAFkB;OAApB;AAIA,YANF;;AANF,SAcO,+BAAY,kBAAZ;AACH,UAAI,WAAW,IAAX,EAAiB;AACnB,YAAM,WAAW,sBAAY,WAAZ,EAAX,CADa;AAEnB,8BAAY,SAAZ,CAAsB,QAAtB,EAAgC,MAAhC,EAFmB;OAArB;AAIA,eAAS,sBAAY,SAAZ,CAAsB,OAAO,IAAP,CAA/B,CALF;AAME,iBAAW,aAAX,GANF;AAOE,YAPF;;AAdF;GADiE;CAAZ,CAAvD;;kBA4Be","file":"DraftStore.js","sourcesContent":["/*\n * Copyright (C) 2015 Actor LLC. <https://actor.im>\n */\n\nimport { EventEmitter } from 'events';\nimport assign from 'object-assign';\n\nimport ActorClient from '../utils/ActorClient';\n\nimport ActorAppDispatcher from '../dispatcher/ActorAppDispatcher';\nimport { ActionTypes } from '../constants/ActorAppConstants';\nimport DialogStore from './DialogStore';\n\nconst DRAFT_LOAD_EVENT = 'draft_load';\n\nlet _draft = null;\n\nconst DraftStore = assign({}, EventEmitter.prototype, {\n  emitLoadDraft() {\n    this.emit(DRAFT_LOAD_EVENT);\n  },\n\n  addLoadDraftListener(callback) {\n    this.on(DRAFT_LOAD_EVENT, callback);\n  },\n\n  removeLoadDraftListener(callback) {\n    this.removeListener(DRAFT_LOAD_EVENT, callback);\n  },\n\n  getDraft() {\n    return _draft;\n  }\n});\n\nDraftStore.dispatchToken = ActorAppDispatcher.register((action) => {\n  switch (action.type) {\n    case ActionTypes.DRAFT_LOAD:\n      _draft = ActorClient.loadDraft(action.peer);\n      DraftStore.emitLoadDraft();\n      break;\n\n    case ActionTypes.DRAFT_SAVE:\n      _draft = action.draft;\n      if (action.saveNow) {\n        const peer = DialogStore.getCurrentPeer();\n        ActorClient.saveDraft(peer, _draft);\n      }\n      break;\n\n    case ActionTypes.SELECT_DIALOG_PEER:\n      if (_draft !== null) {\n        const lastPeer = DialogStore.getLastPeer();\n        ActorClient.saveDraft(lastPeer, _draft);\n      }\n      _draft = ActorClient.loadDraft(action.peer);\n      DraftStore.emitLoadDraft();\n      break;\n\n    default:\n  }\n});\n\nexport default DraftStore;\n"]}