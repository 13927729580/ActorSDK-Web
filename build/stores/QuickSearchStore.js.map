{"version":3,"sources":["../../src/stores/QuickSearchStore.js"],"names":[],"mappings":";;;;AAIA;;AAEA;;AACA;;;;AACA;;;;;;;;;;;;AAEA,IAAI,UAAU,KAAd;IACI,QAAQ,EADZ;IAEI,WAAW,EAFf;;IAIM,gB;;;AACJ,4BAAY,UAAZ,EAAwB;AAAA;;AAAA,4CACtB,kBAAM,UAAN,CADsB;AAEvB;;6BAED,M,qBAAS;AACP,WAAO,OAAP;AACD,G;;6BAED,U,yBAAa;AACX,WAAO,QAAP;AACD,G;;6BAED,iB,8BAAkB,K,EAAO;AACvB,QAAI,UAAU,EAAd;;AAEA,QAAI,UAAU,EAAd,EAAkB;AAChB,gBAAU,KAAV;AACD,KAFD,MAEO;AACL,2BAAQ,KAAR,EAAe,UAAC,MAAD,EAAY;AACzB,YAAI,OAAO,QAAP,CAAgB,KAAhB,CAAsB,WAAtB,GAAoC,QAApC,CAA6C,MAAM,WAAN,EAA7C,CAAJ,EAAuE;AACrE,kBAAQ,IAAR,CAAa,MAAb;AACD;AACF,OAJD;AAKD;;AAED,eAAW,OAAX;AACA,SAAK,YAAL;AACD,G;;6BAED,Y,yBAAa,M,EAAQ;AACnB,YAAQ,OAAO,IAAf;AACE,WAAK,+BAAY,iBAAjB;AACE,kBAAU,IAAV;AACA,aAAK,iBAAL,CAAuB,EAAvB;AACA,aAAK,YAAL;AACA;;AAEF,WAAK,+BAAY,iBAAjB;AACE,kBAAU,KAAV;AACA,mBAAW,EAAX;AACA,aAAK,YAAL;AACA;;AAEF,WAAK,+BAAY,oBAAjB;AACE,gBAAQ,OAAO,IAAf;AACA,aAAK,YAAL;AACA;;AAEF,WAAK,+BAAY,YAAjB;AACE,aAAK,iBAAL,CAAuB,OAAO,KAA9B;AACA;AApBJ;AAsBD,G;;;;;kBAGY,IAAI,gBAAJ,8B","file":"QuickSearchStore.js","sourcesContent":["/*\n * Copyright (C) 2015 Actor LLC. <https://actor.im>\n */\n\nimport { forEach } from 'lodash';\n\nimport { Store } from 'flux/utils';\nimport Dispatcher from '../dispatcher/ActorAppDispatcher';\nimport { ActionTypes } from '../constants/ActorAppConstants';\n\nlet _isOpen = false,\n    _list = [],\n    _results = [];\n\nclass QuickSearchStore extends Store {\n  constructor(dispatcher) {\n    super(dispatcher);\n  }\n\n  isOpen() {\n    return _isOpen;\n  }\n\n  getResults() {\n    return _results;\n  }\n\n  handleSearchQuery(query) {\n    let results = [];\n\n    if (query === '') {\n      results = _list;\n    } else {\n      forEach(_list, (result) => {\n        if (result.peerInfo.title.toLowerCase().includes(query.toLowerCase())) {\n          results.push(result);\n        }\n      })\n    }\n\n    _results = results;\n    this.__emitChange();\n  }\n\n  __onDispatch(action) {\n    switch (action.type) {\n      case ActionTypes.QUICK_SEARCH_SHOW:\n        _isOpen = true;\n        this.handleSearchQuery('');\n        this.__emitChange();\n        break;\n\n      case ActionTypes.QUICK_SEARCH_HIDE:\n        _isOpen = false;\n        _results = [];\n        this.__emitChange();\n        break;\n\n      case ActionTypes.QUICK_SEARCH_CHANGED:\n        _list = action.list;\n        this.__emitChange();\n        break;\n\n      case ActionTypes.QUICK_SEARCH:\n        this.handleSearchQuery(action.query);\n        break;\n    }\n  }\n}\n\nexport default new QuickSearchStore(Dispatcher);\n"]}