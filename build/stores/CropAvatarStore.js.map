{"version":3,"sources":["../../src/stores/CropAvatarStore.js"],"names":[],"mappings":";;;;;;AAIA;;AACA;;;;AACA;;;;;;;;;;;;IAEM,S;;;;;;;;;sBACJ,e,8BAAkB;AAChB,WAAO;AACL,cAAQ,IADH;AAEL,gBAAU;AAFL,KAAP;AAID,G;;sBAED,M,mBAAO,K,EAAO,M,EAAQ;AACpB,YAAQ,OAAO,IAAf;AACE,WAAK,+BAAY,eAAjB;AACE,4BACK,KADL;AAEE,kBAAQ,OAAO,MAFjB;AAGE,oBAAU,OAAO;AAHnB;AAKF,WAAK,+BAAY,eAAjB;AACE,eAAO,KAAK,eAAL,EAAP;;AAEF;AACE,eAAO,KAAP;AAXJ;AAaD,G;;;;;kBAGY,IAAI,SAAJ,8B","file":"CropAvatarStore.js","sourcesContent":["/*\n * Copyright (C) 2015 Actor LLC. <https://actor.im>\n */\n\nimport { ReduceStore } from 'flux/utils';\nimport Dispatcher from '../dispatcher/ActorAppDispatcher';\nimport { ActionTypes } from '../constants/ActorAppConstants';\n\nclass CropStore extends ReduceStore {\n  getInitialState() {\n    return {\n      source: null,\n      callback: null\n    };\n  }\n\n  reduce(state, action) {\n    switch (action.type) {\n      case ActionTypes.CROP_MODAL_SHOW:\n        return {\n          ...state,\n          source: action.source,\n          callback: action.callback\n        }\n      case ActionTypes.CROP_MODAL_HIDE:\n        return this.getInitialState();\n\n      default:\n        return state;\n    }\n  }\n}\n\nexport default new CropStore(Dispatcher);\n"]}