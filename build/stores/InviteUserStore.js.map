{"version":3,"sources":["../../src/stores/InviteUserStore.js"],"names":[],"mappings":"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","file":"InviteUserStore.js","sourcesContent":["/*\n * Copyright (C) 2015 Actor LLC. <https://actor.im>\n */\n\nimport { EventEmitter } from 'events';\nimport { register } from '../dispatcher/ActorAppDispatcher';\nimport { ActionTypes, AsyncActionStates } from '../constants/ActorAppConstants';\n\nimport ActorClient from '../utils/ActorClient';\n\nconst CHANGE_EVENT = 'change';\n\nlet _isInviteModalOpen = false,\n    _isInviteByLinkModalOpen = false,\n    _group = null,\n    _inviteUrl = null,\n    _inviteUserState = [];\n\nclass InviteUserStore extends EventEmitter {\n  emitChange() {\n    this.emit(CHANGE_EVENT);\n  }\n\n  addChangeListener(callback) {\n    this.on(CHANGE_EVENT, callback);\n  }\n\n  removeChangeListener(callback) {\n    this.removeListener(CHANGE_EVENT, callback);\n  }\n\n  isModalOpen() {\n    return _isInviteModalOpen;\n  }\n\n  isInviteWithLinkModalOpen() {\n    return _isInviteByLinkModalOpen;\n  }\n\n  getGroup() {\n    return _group;\n  }\n\n  getInviteUrl() {\n    return _inviteUrl;\n  }\n\n  getInviteUserState(uid) {\n    return (_inviteUserState[uid] || AsyncActionStates.PENDING);\n  }\n\n  resetInviteUserState(uid) {\n    delete _inviteUserState[uid];\n  }\n}\n\nlet InviteUserStoreInstance = new InviteUserStore();\n\nInviteUserStoreInstance.dispatchToken = register(action => {\n  switch(action.type) {\n    case ActionTypes.SELECTED_DIALOG_INFO_CHANGED:\n      _group = action.info;\n      InviteUserStoreInstance.emitChange();\n      break;\n\n    case ActionTypes.INVITE_USER_MODAL_SHOW:\n      _isInviteModalOpen = true;\n      _group = action.group;\n      InviteUserStoreInstance.emitChange();\n      break;\n    case ActionTypes.INVITE_USER_MODAL_HIDE:\n      _inviteUserState = [];\n      _isInviteModalOpen = false;\n      InviteUserStoreInstance.emitChange();\n      break;\n\n    case ActionTypes.INVITE_USER_BY_LINK_MODAL_SHOW:\n      _isInviteByLinkModalOpen = true;\n      _group = action.group;\n      ActorClient.getInviteUrl(_group.id)\n        .then((url) => {\n          _inviteUrl = url;\n          InviteUserStoreInstance.emitChange();\n        });\n      InviteUserStoreInstance.emitChange();\n      break;\n    case ActionTypes.INVITE_USER_BY_LINK_MODAL_HIDE:\n      _isInviteByLinkModalOpen = false;\n      InviteUserStoreInstance.emitChange();\n      break;\n\n    // Invite user\n    case ActionTypes.INVITE_USER:\n      _inviteUserState[action.uid] = AsyncActionStates.PROCESSING;\n      InviteUserStoreInstance.emitChange();\n      break;\n    case ActionTypes.INVITE_USER_SUCCESS:\n      _inviteUserState[action.uid] = AsyncActionStates.SUCCESS;\n      InviteUserStoreInstance.emitChange();\n      break;\n    case ActionTypes.INVITE_USER_ERROR:\n      _inviteUserState[action.uid] = AsyncActionStates.FAILURE;\n      InviteUserStoreInstance.emitChange();\n      break;\n  }\n});\n\nexport default InviteUserStoreInstance;\n"]}