{"version":3,"sources":["../../src/stores/AllDialogsStore.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AASA,IAAI,QAAQ,GAAG,EAAE,CAAC;;IAEZ,WAAW;YAAX,WAAW;;WAAX,WAAW;0BAAX,WAAW;;kEAAX,WAAW;;;eAAX,WAAW;;oCACC;AACd,aAAO,QAAQ,CAAC;KACjB;;;iCAEY,MAAM,EAAE;AACnB,cAAO,MAAM,CAAC,IAAI;AAChB,aAAK,mBAZF,WAAW,CAYG,eAAe;AAC9B,kBAAQ,GAAG,MAAM,CAAC,OAAO,CAAC;AAC1B,cAAI,CAAC,YAAY,EAAE,CAAC;AACpB,gBAAM;AAAA,AACR,gBAAQ;OACT;KACF;;;SAbG,WAAW;UAPR,KAAK;;kBAuBC,IAAI,WAAW,8BAAY","file":"AllDialogsStore.js","sourcesContent":["/*\n * Copyright (C) 2015 Actor LLC. <https://actor.im>\n */\n\nimport { Store } from 'flux/utils';\nimport Dispatcher from '../dispatcher/ActorAppDispatcher';\nimport { ActionTypes, PeerTypes } from '../constants/ActorAppConstants';\nimport ActorClient from '../utils/ActorClient';\n\nlet _dialogs = [];\n\nclass DialogStore extends Store {\n  getAllDialogs() {\n    return _dialogs;\n  }\n\n  __onDispatch(action) {\n    switch(action.type) {\n      case ActionTypes.DIALOGS_CHANGED:\n        _dialogs = action.dialogs;\n        this.__emitChange();\n        break;\n      default:\n    }\n  }\n}\n\nexport default new DialogStore(Dispatcher);\n"]}