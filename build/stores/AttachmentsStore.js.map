{"version":3,"sources":["../../src/stores/AttachmentsStore.js"],"names":[],"mappings":";;;;;;AAIA;;AACA;;;;AACA;;AACA;;;;;;;;;;;;;;IAEM,gB;;;;;;;;;6BACJ,e,8BAAkB;AAChB,WAAO;AACL,mBAAa,IAAI,oBAAU,IAAd,EADR;AAEL,qBAAe;AAFV,KAAP;AAID,G;;6BAED,M,mBAAO,K,EAAM,M,EAAQ;AACnB,YAAQ,OAAO,IAAf;AACE,WAAK,+BAAY,qBAAjB;AACE,4BACK,KADL;AAEE,uBAAa,IAAI,oBAAU,IAAd,CAAmB,OAAO,WAA1B;AAFf;AAIF,WAAK,+BAAY,qBAAjB;AACE,eAAO,KAAK,eAAL,EAAP;;AAEF,WAAK,+BAAY,iBAAjB;AACE,4BACK,KADL;AAEE,yBAAe,OAAO;AAFxB;;AAKF,WAAK,+BAAY,iBAAjB;AACE,YAAM,oBAAoB,MAAM,WAAN,CAAkB,GAAlB,CAAsB,MAAM,aAA5B,CAA1B;;AAEA,4BACK,KADL;AAEE,uBAAa,MAAM,WAAN,CAAkB,GAAlB,CAAsB,MAAM,aAA5B,eAAgD,iBAAhD,IAAmE,eAAe,OAAO,aAAzF;AAFf;;AAKF,WAAK,+BAAY,iBAAjB;AACA,WAAK,+BAAY,eAAjB;AACE,eAAO;AACL,uBAAa,MAAM,WAAN,CAAkB,MAAlB,CAAyB,MAAM,aAA/B,CADR;AAEL,yBAAe;AAFV,SAAP;AAIF,WAAK,+BAAY,mBAAjB;AACE,eAAO,KAAK,eAAL,EAAP;;AAEF;AACE,eAAO,KAAP;AAjCJ;AAmCD,G;;6BAED,iB,gCAAoB;AAClB,WAAO,KAAK,QAAL,GAAgB,WAAhB,CAA4B,OAA5B,EAAP;AACD,G;;6BAED,a,4BAA+C;AAAA,QAAjC,KAAiC,yDAAzB,KAAK,gBAAL,EAAyB;;AAC7C,WAAO,KAAK,QAAL,GAAgB,WAAhB,CAA4B,GAA5B,CAAgC,KAAhC,CAAP;AACD,G;;6BAED,gB,+BAAmB;AACjB,WAAO,KAAK,QAAL,GAAgB,aAAvB;AACD,G;;;;;kBAGY,IAAI,gBAAJ,8B","file":"AttachmentsStore.js","sourcesContent":["/*\n * Copyright (C) 2016 Actor LLC. <https://actor.im>\n */\n\nimport { ReduceStore } from 'flux/utils';\nimport Dispatcher from '../dispatcher/ActorAppDispatcher';\nimport { ActionTypes } from '../constants/ActorAppConstants';\nimport Immutable from 'immutable';\n\nclass AttachmentsStore extends ReduceStore {\n  getInitialState() {\n    return {\n      attachments: new Immutable.List(),\n      selectedIndex: 0\n    }\n  }\n\n  reduce(state,action) {\n    switch (action.type) {\n      case ActionTypes.ATTACHMENT_MODAL_SHOW:\n        return {\n          ...state,\n          attachments: new Immutable.List(action.attachments)\n        }\n      case ActionTypes.ATTACHMENT_MODAL_HIDE:\n        return this.getInitialState();\n\n      case ActionTypes.ATTACHMENT_SELECT:\n        return {\n          ...state,\n          selectedIndex: action.index\n        }\n\n      case ActionTypes.ATTACHMENT_CHANGE:\n        const changedAttachment = state.attachments.get(state.selectedIndex);\n\n        return {\n          ...state,\n          attachments: state.attachments.set(state.selectedIndex, { ...changedAttachment, sendAsPicture: action.sendAsPicture })\n        };\n\n      case ActionTypes.ATTACHMENT_DELETE:\n      case ActionTypes.ATTACHMENT_SEND:\n        return {\n          attachments: state.attachments.delete(state.selectedIndex),\n          selectedIndex: 0\n        }\n      case ActionTypes.ATTACHMENT_SEND_ALL:\n        return this.getInitialState();\n\n      default:\n        return state;\n    }\n  }\n\n  getAllAttachments() {\n    return this.getState().attachments.toArray();\n  }\n\n  getAttachment(index = this.getSelectedIndex()) {\n    return this.getState().attachments.get(index);\n  }\n\n  getSelectedIndex() {\n    return this.getState().selectedIndex;\n  }\n}\n\nexport default new AttachmentsStore(Dispatcher);\n"]}