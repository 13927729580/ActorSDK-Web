{"version":3,"sources":["../../src/stores/DialogInfoStore.js"],"names":[],"mappings":";;;;AAIA;;AACA;;;;AACA;;AACA;;;;;;;;;;;;;;IAEM,e;;;;;;;;;4BACJ,e,8BAAkB;AAChB,WAAO,IAAP;AACD,G;;4BAED,M,mBAAO,K,EAAO,M,EAAQ;AACpB,YAAO,OAAO,IAAd;AACE,WAAK,+BAAY,kBAAjB;AACE,YAAI,OAAO,IAAP,CAAY,IAAZ,KAAqB,6BAAU,KAAnC,EAA0C;AACxC,iBAAO,sBAAY,QAAZ,CAAqB,OAAO,IAAP,CAAY,EAAjC,CAAP;AACD;;AAED,eAAO,sBAAY,OAAZ,CAAoB,OAAO,IAAP,CAAY,EAAhC,CAAP;;AAEF,WAAK,+BAAY,mBAAjB;AACE,eAAO,OAAO,IAAd;;AAEF;AACE,eAAO,KAAP;AAZJ;AAcD,G;;;;;kBAGY,IAAI,eAAJ,8B","file":"DialogInfoStore.js","sourcesContent":["/*\n * Copyright (C) 2015 Actor LLC. <https://actor.im>\n */\n\nimport { ReduceStore } from 'flux/utils';\nimport Dispatcher from '../dispatcher/ActorAppDispatcher';\nimport { ActionTypes, PeerTypes } from '../constants/ActorAppConstants';\nimport ActorClient from '../utils/ActorClient';\n\nclass DialogInfoStore extends ReduceStore {\n  getInitialState() {\n    return null;\n  }\n\n  reduce(state, action) {\n    switch(action.type) {\n      case ActionTypes.SELECT_DIALOG_PEER:\n        if (action.peer.type === PeerTypes.GROUP) {\n          return ActorClient.getGroup(action.peer.id);\n        }\n\n        return ActorClient.getUser(action.peer.id);\n\n      case ActionTypes.DIALOG_INFO_CHANGED:\n        return action.info;\n\n      default:\n        return state;\n    }\n  }\n}\n\nexport default new DialogInfoStore(Dispatcher);\n"]}