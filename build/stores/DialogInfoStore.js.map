{"version":3,"sources":["../../src/stores/DialogInfoStore.js"],"names":[],"mappings":";;;;;;AAIA;;AACA;;;;AACA;;AACA;;;;;;;;;;;;;;AAEA,SAAS,OAAT,CAAiB,IAAjB,EAAuB;AACrB,MAAI,KAAK,IAAL,KAAc,6BAAU,KAA5B,EAAmC;AACjC,WAAO,sBAAY,QAAZ,CAAqB,KAAK,EAA1B,CAAP;AACD;;AAED,SAAO,sBAAY,OAAZ,CAAoB,KAAK,EAAzB,CAAP;AACD;;IAEK,e;;;;;;;;;4BACJ,e,8BAAkB;;AAEhB,SAAK,WAAL,GAAmB,KAAnB;AACA,WAAO,IAAP;AACD,G;;4BAED,M,mBAAO,K,EAAO,M,EAAQ;AACpB,YAAQ,OAAO,IAAf;AACE,WAAK,+BAAY,kBAAjB;AACE,YAAM,OAAO,QAAQ,OAAO,IAAf,CAAb;;AAEA,4BACK,IADL;AAEE,qBAAW,KAAK;AAFlB;;AAKF,WAAK,+BAAY,mBAAjB;AACE,4BACK,OAAO,IADZ;AAEE,qBAAW,KAAK;AAFlB;;AAKF,WAAK,+BAAY,gBAAjB;AACE,aAAK,WAAL,GAAmB,OAAO,QAAP,IAAmB,OAAO,QAAP,CAAgB,MAAhB,GAAyB,CAA/D;AACA,YAAI,KAAJ,EAAW;AACT,8BACK,KADL;AAEE,uBAAW,KAAK;AAFlB;AAID;;AAED,eAAO,KAAP;;AAEF;AACE,eAAO,KAAP;AA3BJ;AA6BD,G;;;;;kBAGY,IAAI,eAAJ,8B","file":"DialogInfoStore.js","sourcesContent":["/*\n * Copyright (C) 2015 Actor LLC. <https://actor.im>\n */\n\nimport { ReduceStore } from 'flux/utils';\nimport Dispatcher from '../dispatcher/ActorAppDispatcher';\nimport { ActionTypes, PeerTypes } from '../constants/ActorAppConstants';\nimport ActorClient from '../utils/ActorClient';\n\nfunction getPeer(peer) {\n  if (peer.type === PeerTypes.GROUP) {\n    return ActorClient.getGroup(peer.id);\n  }\n\n  return ActorClient.getUser(peer.id);\n}\n\nclass DialogInfoStore extends ReduceStore {\n  getInitialState() {\n    // Temporary workaround while isStarted isn't correct\n    this.__isStarted = false;\n    return null;\n  }\n\n  reduce(state, action) {\n    switch (action.type) {\n      case ActionTypes.SELECT_DIALOG_PEER:\n        const info = getPeer(action.peer);\n\n        return {\n          ...info,\n          isStarted: this.__isStarted\n        };\n\n      case ActionTypes.DIALOG_INFO_CHANGED:\n        return {\n          ...action.info,\n          isStarted: this.__isStarted\n        };\n\n      case ActionTypes.MESSAGES_CHANGED:\n        this.__isStarted = action.messages && action.messages.length > 0;\n        if (state) {\n          return {\n            ...state,\n            isStarted: this.__isStarted\n          };\n        }\n\n        return state;\n\n      default:\n        return state;\n    }\n  }\n}\n\nexport default new DialogInfoStore(Dispatcher);\n"]}