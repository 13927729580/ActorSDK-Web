{"version":3,"sources":["../../src/stores/DialogInfoStore.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAIA;;AACA;;;;AACA;;AACA;;;;;;;;;;IAEM;;;;;;;;4BACJ,6CAAkB;AAChB,WAAO,IAAP,CADgB;;;AADd,4BAKJ,yBAAO,OAAO,QAAQ;AACpB,YAAO,OAAO,IAAP;AACL,WAAK,+BAAY,kBAAZ;AACH,YAAI,OAAO,IAAP,CAAY,IAAZ,KAAqB,6BAAU,KAAV,EAAiB;AACxC,iBAAO,sBAAY,QAAZ,CAAqB,OAAO,IAAP,CAAY,EAAZ,CAA5B,CADwC;SAA1C;;AAIA,eAAO,sBAAY,OAAZ,CAAoB,OAAO,IAAP,CAAY,EAAZ,CAA3B,CALF;;AADF,WAQO,+BAAY,mBAAZ;AACH,eAAO,OAAO,IAAP,CADT;;AARF;AAYI,eAAO,KAAP,CADF;AAXF,KADoB;;;SALlB;;;kBAuBS,IAAI,eAAJ","file":"DialogInfoStore.js","sourcesContent":["/*\n * Copyright (C) 2015 Actor LLC. <https://actor.im>\n */\n\nimport { ReduceStore } from 'flux/utils';\nimport Dispatcher from '../dispatcher/ActorAppDispatcher';\nimport { ActionTypes, PeerTypes } from '../constants/ActorAppConstants';\nimport ActorClient from '../utils/ActorClient';\n\nclass DialogInfoStore extends ReduceStore {\n  getInitialState() {\n    return null;\n  }\n\n  reduce(state, action) {\n    switch(action.type) {\n      case ActionTypes.SELECT_DIALOG_PEER:\n        if (action.peer.type === PeerTypes.GROUP) {\n          return ActorClient.getGroup(action.peer.id);\n        }\n\n        return ActorClient.getUser(action.peer.id);\n\n      case ActionTypes.DIALOG_INFO_CHANGED:\n        return action.info;\n\n      default:\n        return state;\n    }\n  }\n}\n\nexport default new DialogInfoStore(Dispatcher);\n"]}