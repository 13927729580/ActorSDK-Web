{"version":3,"sources":["../../src/stores/ArchiveStore.js"],"names":[],"mappings":";;;;AAIA;;AACA;;;;AACA;;;;;;;;;;;;IAEM,Y;;;AACJ,wBAAY,UAAZ,EAAwB;AAAA;;AAAA,iDACtB,kBAAM,UAAN,CADsB;;AAGtB,UAAK,SAAL,GAAiB,IAAjB;AACA,UAAK,OAAL,GAAe,EAAf;AACA,UAAK,gBAAL,GAAwB,EAAxB;AACA,UAAK,YAAL,GAAoB,KAApB;AACA,UAAK,yBAAL,GAAiC,KAAjC;AAPsB;AAQvB;;yBAED,gB,+BAAmB;AACjB,WAAO,KAAK,SAAZ;AACD,G;;yBAED,W,0BAAc;AACZ,WAAO,KAAK,YAAZ;AACD,G;;yBAED,wB,uCAA2B;AACzB,WAAO,KAAK,yBAAZ;AACD,G;;yBAED,U,yBAAa;AACX,WAAO,KAAK,OAAZ;AACD,G;;yBAED,mB,kCAAsB;AACpB,WAAO,KAAK,gBAAZ;AACD,G;;yBAGD,Y,yBAAa,M,EAAQ;AACnB,YAAO,OAAO,IAAd;AACE,WAAK,+BAAY,WAAjB;AACE,aAAK,gBAAL,CAAsB,OAAO,IAAP,CAAY,GAAlC,IAAyC,qCAAkB,UAA3D;AACA,aAAK,YAAL;AACA;AACF,WAAK,+BAAY,mBAAjB;AACE,eAAO,KAAK,gBAAL,CAAsB,OAAO,IAAP,CAAY,GAAlC,CAAP;AACA,aAAK,YAAL;AACA;AACF,WAAK,+BAAY,iBAAjB;AACE,aAAK,gBAAL,CAAsB,OAAO,IAAP,CAAY,GAAlC,IAAyC,qCAAkB,OAA3D;AACA,aAAK,YAAL;AACA;;AAEF,WAAK,+BAAY,YAAjB;AACE,aAAK,SAAL,GAAiB,IAAjB;AACA,aAAK,YAAL,GAAoB,KAApB;AACA,aAAK,yBAAL,GAAiC,KAAjC;AACA,aAAK,YAAL;AACA;;AAEF,WAAK,+BAAY,oBAAjB;AACE,aAAK,SAAL,GAAiB,KAAjB;AACA,aAAK,yBAAL,GAAiC,IAAjC;AACA,aAAK,OAAL,GAAe,OAAO,QAAtB;AACA,aAAK,YAAL;AACA;;AAEF,WAAK,+BAAY,iBAAjB;AACE,aAAK,SAAL,GAAiB,IAAjB;AACA,aAAK,YAAL;AACA;;AAEF,WAAK,+BAAY,yBAAjB;AACE,aAAK,SAAL,GAAiB,KAAjB;AACA,aAAK,YAAL,GAAoB,OAAO,QAAP,CAAgB,MAAhB,KAA2B,CAA/C;AACA,aAAK,OAAL,CAAa,IAAb,CAAkB,KAAlB,CAAwB,KAAK,OAA7B,EAAsC,OAAO,QAA7C;AACA,aAAK,YAAL;AACA;;AAEF;AAxCF;AA0CD,G;;;;;kBAGY,IAAI,YAAJ,8B","file":"ArchiveStore.js","sourcesContent":["/*\n * Copyright (C) 2016 Actor LLC. <https://actor.im>\n */\n\nimport { Store } from 'flux/utils';\nimport Dispatcher from '../dispatcher/ActorAppDispatcher';\nimport { ActionTypes, AsyncActionStates } from '../constants/ActorAppConstants';\n\nclass ArchiveStore extends Store {\n  constructor(dispatcher) {\n    super(dispatcher);\n\n    this.isLoading = true;\n    this.dialogs = [];\n    this.archiveChatState = {};\n    this._isAllLoaded = false;\n    this._isInitialLoadingComplete = false;\n  }\n\n  isArchiveLoading() {\n    return this.isLoading;\n  }\n\n  isAllLoaded() {\n    return this._isAllLoaded;\n  }\n\n  isInitialLoadingComplete() {\n    return this._isInitialLoadingComplete;\n  }\n\n  getDialogs() {\n    return this.dialogs;\n  }\n\n  getArchiveChatState() {\n    return this.archiveChatState;\n  }\n\n\n  __onDispatch(action) {\n    switch(action.type) {\n      case ActionTypes.ARCHIVE_ADD:\n        this.archiveChatState[action.peer.key] = AsyncActionStates.PROCESSING;\n        this.__emitChange();\n        break;\n      case ActionTypes.ARCHIVE_ADD_SUCCESS:\n        delete this.archiveChatState[action.peer.key];\n        this.__emitChange();\n        break;\n      case ActionTypes.ARCHIVE_ADD_ERROR:\n        this.archiveChatState[action.peer.key] = AsyncActionStates.FAILURE;\n        this.__emitChange();\n        break;\n\n      case ActionTypes.ARCHIVE_LOAD:\n        this.isLoading = true;\n        this._isAllLoaded = false;\n        this._isInitialLoadingComplete = false;\n        this.__emitChange();\n        break;\n\n      case ActionTypes.ARCHIVE_LOAD_SUCCESS:\n        this.isLoading = false;\n        this._isInitialLoadingComplete = true;\n        this.dialogs = action.response;\n        this.__emitChange();\n        break;\n\n      case ActionTypes.ARCHIVE_LOAD_MORE:\n        this.isLoading = true;\n        this.__emitChange();\n        break;\n\n      case ActionTypes.ARCHIVE_LOAD_MORE_SUCCESS:\n        this.isLoading = false;\n        this._isAllLoaded = action.response.length === 0;\n        this.dialogs.push.apply(this.dialogs, action.response);\n        this.__emitChange();\n        break;\n\n      default:\n    }\n  }\n}\n\nexport default new ArchiveStore(Dispatcher);\n"]}