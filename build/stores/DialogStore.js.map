{"version":3,"sources":["../../src/stores/DialogStore.js"],"names":[],"mappings":"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","file":"DialogStore.js","sourcesContent":["/*\n * Copyright (C) 2015 Actor LLC. <https://actor.im>\n */\n\nimport ActorAppDispatcher from '../dispatcher/ActorAppDispatcher';\nimport { ActionTypes, PeerTypes } from '../constants/ActorAppConstants';\n\nimport DialogActionCreators from '../actions/DialogActionCreators'; // TODO: Do not use actions in stores\nimport GroupProfileActionCreators from '../actions/GroupProfileActionCreators';\n\nimport { EventEmitter } from 'events';\nimport assign from 'object-assign';\n\nimport ActorClient from '../utils/ActorClient';\n\nconst CHANGE_EVENT = 'change',\n      SELECT_EVENT = 'select',\n      SELECTED_CHANGE_EVENT = 'selected_change',\n      TYPING_EVENT = 'typing',\n      NOTIFICATION_CHANGE_EVENT = 'notification_change';\n\nlet _dialogs = [],\n    _selectedDialogPeer = null,\n    _selectedDialogInfo = null,\n    _selectedDialogTyping = null,\n    _currentPeer = null,\n    _lastPeer = null;\n\nvar DialogStore = assign({}, EventEmitter.prototype, {\n  emitChange: function() {\n    this.emit(CHANGE_EVENT);\n  },\n\n  addChangeListener: function(callback) {\n    this.on(CHANGE_EVENT, callback);\n  },\n\n  removeChangeListener: function(callback) {\n    this.removeListener(CHANGE_EVENT, callback);\n  },\n\n  emitSelect: function() {\n    this.emit(SELECT_EVENT);\n  },\n\n  addSelectListener: function(callback) {\n    this.on(SELECT_EVENT, callback);\n  },\n\n  removeSelectListener: function(callback) {\n    this.removeListener(SELECT_EVENT, callback);\n  },\n\n  emitSelectedChange: function() {\n    this.emit(SELECTED_CHANGE_EVENT);\n  },\n\n  addSelectedChangeListener: function(callback) {\n    this.on(SELECTED_CHANGE_EVENT, callback);\n  },\n\n  removeSelectedChangeListener: function(callback) {\n    this.removeListener(SELECTED_CHANGE_EVENT, callback);\n  },\n\n  emitTyping: function() {\n    this.emit(TYPING_EVENT);\n  },\n\n  addTypingListener: function(callback) {\n    this.on(TYPING_EVENT, callback);\n  },\n\n  removeTypingListener: function(callback) {\n    this.removeListener(TYPING_EVENT, callback);\n  },\n\n  getSelectedDialogInfo: function() {\n    return _selectedDialogInfo;\n  },\n\n  getSelectedDialogPeer: function() {\n    return _selectedDialogPeer;\n  },\n\n  getSelectedDialogTyping: function() {\n    return _selectedDialogTyping;\n  },\n\n  getAll() {\n    return _dialogs;\n  },\n\n  // Notifications settings\n  isNotificationsEnabled: function(peer) {\n    return ActorClient.isNotificationsEnabled(peer);\n  },\n\n  emitNotificationChange() {\n    this.emit(NOTIFICATION_CHANGE_EVENT);\n  },\n\n  addNotificationsListener(callback) {\n    this.on(NOTIFICATION_CHANGE_EVENT, callback);\n  },\n\n  removeNotificationsListener(callback) {\n    this.removeListener(NOTIFICATION_CHANGE_EVENT, callback);\n  },\n\n  getLastPeer() {\n    return _lastPeer;\n  },\n\n  isGroupMember(group) {\n    return (group.members.length > 0);\n  },\n\n  getCurrentPeer() {\n    return _currentPeer;\n  }\n});\n\nvar onCurrentDialogInfoChange = function(info) {\n  _selectedDialogInfo = info;\n  DialogActionCreators.createSelectedDialogInfoChanged(info);\n};\n\nvar bindDialogInfo = function(peer) {\n  switch(peer.type) {\n    case PeerTypes.USER:\n      ActorClient.bindUser(peer.id, onCurrentDialogInfoChange);\n      break;\n    case PeerTypes.GROUP:\n      ActorClient.bindGroup(peer.id, onCurrentDialogInfoChange);\n      break;\n    default:\n  }\n};\n\nvar unbindCurrentDialogInfo = function() {\n  if (_currentPeer != null) {\n    switch (_currentPeer.type) {\n      case PeerTypes.USER:\n        ActorClient.unbindUser(_currentPeer.id, onCurrentDialogInfoChange);\n        break;\n      case PeerTypes.GROUP:\n        ActorClient.unbindGroup(_currentPeer.id, onCurrentDialogInfoChange);\n        break;\n      default:\n\n    }\n  }\n};\n\nvar onCurrentDialogTypingChange = function(typing) {\n  _selectedDialogTyping = typing.typing;\n  DialogStore.emitTyping();\n};\n\nvar bindDialogTyping = function(peer) {\n  ActorClient.bindTyping(peer, onCurrentDialogTypingChange);\n};\n\nvar unbindCurrentDialogTyping = function() {\n  if (_currentPeer != null) {\n    ActorClient.unbindTyping(_currentPeer, onCurrentDialogTypingChange);\n  }\n};\n\nDialogStore.dispatchToken = ActorAppDispatcher.register(function(action) {\n  switch(action.type) {\n    case ActionTypes.SELECT_DIALOG_PEER:\n      unbindCurrentDialogInfo();\n      unbindCurrentDialogTyping();\n\n      _lastPeer = _currentPeer;\n      _selectedDialogPeer = action.peer;\n      _currentPeer = action.peer;\n\n      // crutch check for membership\n      // TODO: need method for membership check\n      if (action.peer.type === PeerTypes.GROUP) {\n        const group = ActorClient.getGroup(action.peer.id);\n        setTimeout(function() {\n          if (DialogStore.isGroupMember(group)) {\n            bindDialogTyping(action.peer);\n          }\n          bindDialogInfo(action.peer);\n        }, 0);\n      } else {\n        setTimeout(function() {\n          bindDialogTyping(action.peer);\n          bindDialogInfo(action.peer);\n        }, 0);\n      }\n      // end crutch check for membership\n\n      DialogStore.emitSelect();\n      break;\n    case ActionTypes.SELECTED_DIALOG_INFO_CHANGED:\n      _selectedDialogInfo = action.info;\n      DialogStore.emitSelectedChange();\n      break;\n    case ActionTypes.DIALOGS_CHANGED:\n      _dialogs = action.dialogs;\n      DialogStore.emitChange();\n      break;\n    case ActionTypes.NOTIFICATION_CHANGE:\n      ActorClient.changeNotificationsEnabled(action.peer, action.isEnabled);\n      DialogStore.emitNotificationChange();\n      break;\n    default:\n\n  }\n});\n\nexport default DialogStore;\n"]}