{"version":3,"sources":["../../src/stores/NotificationsStore.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IASM,kBAAkB;YAAlB,kBAAkB;;WAAlB,kBAAkB;0BAAlB,kBAAkB;;kEAAlB,kBAAkB;;;eAAlB,kBAAkB;;2CACC,IAAI,EAAE;AAC3B,aAAO,sBAAY,sBAAsB,CAAC,IAAI,CAAC,CAAC;KACjD;;;iCAEY,MAAM,EAAE;AACnB,cAAO,MAAM,CAAC,IAAI;AAChB,aAAK,mBAVF,WAAW,CAUG,mBAAmB;AAClC,cAAI,CAAC,YAAY,EAAE,CAAC;AACpB,gBAAM;AAAA,AACR,gBAAQ;OACT;KACF;;;SAZG,kBAAkB;UALf,KAAK;;kBAoBC,IAAI,kBAAkB,8BAAY","file":"NotificationsStore.js","sourcesContent":["/*\n * Copyright (C) 2015 Actor LLC. <https://actor.im>\n */\n\nimport { Store } from 'flux/utils';\nimport Dispatcher from '../dispatcher/ActorAppDispatcher';\nimport { ActionTypes, PeerTypes } from '../constants/ActorAppConstants';\nimport ActorClient from '../utils/ActorClient';\n\nclass NotificationsStore extends Store {\n  isNotificationsEnabled(peer) {\n    return ActorClient.isNotificationsEnabled(peer);\n  }\n\n  __onDispatch(action) {\n    switch(action.type) {\n      case ActionTypes.NOTIFICATION_CHANGE:\n        this.__emitChange();\n        break;\n      default:\n    }\n  }\n}\n\nexport default new NotificationsStore(Dispatcher);\n"]}