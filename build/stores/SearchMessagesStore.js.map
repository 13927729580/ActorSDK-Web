{"version":3,"sources":["../../src/stores/SearchMessagesStore.js"],"names":[],"mappings":";;;;;;AAIA;;AACA;;;;AACA;;;;;;;;;;;;IAEM,mB;;;;;;;;;gCACJ,e,8BAAkB;AAChB,WAAO;AACL,aAAO,EADF;AAEL,eAAS,EAFJ;AAGL,aAAO,IAHF;AAIL,cAAQ,KAJH;AAKL,mBAAa;AALR,KAAP;AAOD,G;;gCAED,M,mBAAO,K,EAAO,M,EAAQ;AACpB,YAAQ,OAAO,IAAf;AACE,WAAK,+BAAY,oBAAjB;AACE,4BACK,KADL;AAEE,kBAAQ;AAFV;;AAKF,WAAK,+BAAY,gBAAjB;AACA,WAAK,+BAAY,oBAAjB;AACE,eAAO,KAAK,eAAL,EAAP;;AAEF,WAAK,+BAAY,yBAAjB;AACE,4BACK,KADL;AAEE,iBAAO,OAAO,KAFhB;AAGE,kBAAQ,IAHV;AAIE,uBAAa;AAJf;;AAOF,WAAK,+BAAY,mBAAjB;AACE,4BACK,KADL;AAEE,mBAAS,OAAO,KAAP,GAAe,OAAO,QAAtB,GAAiC,EAF5C;AAGE,iBAAO,IAHT;AAIE,uBAAa;AAJf;;AAOF,WAAK,+BAAY,iBAAjB;AACE,4BACK,KADL;AAEE,iBAAO,OAAO,KAFhB;AAGE,uBAAa;AAHf;;AAMF;AACE,eAAO,KAAP;AAnCJ;AAqCD,G;;gCAED,M,qBAAS;AACP,WAAO,KAAK,QAAL,GAAgB,MAAvB;AACD,G;;gCAED,W,0BAAc;AACZ,WAAO,KAAK,QAAL,GAAgB,WAAvB;AACD,G;;gCAED,U,yBAAa;AACX,WAAO,KAAK,QAAL,GAAgB,UAAvB;AACD,G;;gCAED,Q,uBAAW;AACT,WAAO,KAAK,QAAL,GAAgB,KAAvB;AACD,G;;gCAED,a,4BAAgB;AACd,WAAO,KAAK,QAAL,GAAgB,OAAvB;AACD,G;;;;;kBAGY,IAAI,mBAAJ,8B","file":"SearchMessagesStore.js","sourcesContent":["/*\n * Copyright (C) 2015 Actor LLC. <https://actor.im>\n */\n\nimport { ReduceStore } from 'flux/utils';\nimport Dispatcher from '../dispatcher/ActorAppDispatcher';\nimport { ActionTypes } from '../constants/ActorAppConstants';\n\nclass SearchMessagesStore extends ReduceStore {\n  getInitialState() {\n    return {\n      query: '',\n      results: [],\n      error: null,\n      isOpen: false,\n      isSearching: false\n    };\n  }\n\n  reduce(state, action) {\n    switch (action.type) {\n      case ActionTypes.SEARCH_MESSAGES_SHOW:\n        return {\n          ...state,\n          isOpen: true\n        };\n\n      case ActionTypes.BIND_DIALOG_PEER:\n      case ActionTypes.SEARCH_MESSAGES_HIDE:\n        return this.getInitialState();\n\n      case ActionTypes.SEARCH_MESSAGES_SET_QUERY:\n        return {\n          ...state,\n          query: action.query,\n          isOpen: true,\n          isSearching: true\n        };\n\n      case ActionTypes.SEARCH_TEXT_SUCCESS:\n        return {\n          ...state,\n          results: action.query ? action.response : [],\n          error: null,\n          isSearching: false\n        };\n\n      case ActionTypes.SEARCH_TEXT_ERROR:\n        return {\n          ...state,\n          error: action.error,\n          isSearching: false\n        };\n\n      default:\n        return state;\n    }\n  }\n\n  isOpen() {\n    return this.getState().isOpen;\n  }\n\n  isSearching() {\n    return this.getState().isSearching;\n  }\n\n  isExpanded() {\n    return this.getState().isExpanded;\n  }\n\n  getQuery() {\n    return this.getState().query;\n  }\n\n  getAllResults() {\n    return this.getState().results;\n  }\n}\n\nexport default new SearchMessagesStore(Dispatcher);\n"]}