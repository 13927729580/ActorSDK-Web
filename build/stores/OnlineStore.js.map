{"version":3,"sources":["../../src/stores/OnlineStore.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AASA,IAAI,OAAO,GAAG,EAAE;IACZ,MAAM,GAAG,CAAC;IACV,KAAK,GAAG,CAAC;IACT,SAAQ,GAAG,KAAK;IAChB,YAAW,GAAI,KAAK,CAAC;;IAEnB,WAAW;YAAX,WAAW;;AACf,WADI,WAAW,CACH,UAAU,EAAC;0BADnB,WAAW;;kEAAX,WAAW,aAEP,UAAU;GACjB;;eAHG,WAAW;;iCAKF;AACX,aAAO,OAAO,CAAC;KAChB;;;+BAEU;AACT,aAAO,KAAK,CAAC;KACd;;;gCAEW;AACV,aAAO,MAAM,CAAC;KACf;;;+BAEU;AACT,aAAO,SAAQ,CAAC;KACjB;;;kCAEa;AACZ,aAAO,YAAW,CAAC;KACpB;;;iCAEY,MAAM,EAAE;AACnB,cAAO,MAAM,CAAC,IAAI;AAChB,aAAK,mBApCF,WAAW,CAoCG,mBAAmB;AAClC,iBAAO,GAAG,MAAM,CAAC,OAAO,CAAC;AACzB,gBAAM,GAAG,MAAM,CAAC,MAAM,CAAC;AACvB,eAAK,GAAG,MAAM,CAAC,KAAK,CAAC;AACrB,sBAAW,GAAG,MAAM,CAAC,WAAW,CAAC;AACjC,cAAI,CAAC,YAAY,EAAE,CAAC;AACpB,gBAAM;AAAA,AACR,aAAK,mBA3CF,WAAW,CA2CG,kBAAkB;AACjC,iBAAO,GAAG,MAAM,CAAC,OAAO,CAAC;AACzB,mBAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;AAC3B,cAAI,CAAC,YAAY,EAAE,CAAC;AACpB,gBAAM;AAAA,AACR,gBAAQ;OACT;KACF;;;SAzCG,WAAW;UAXR,KAAK;;kBAuDC,IAAI,WAAW,8BAAY","file":"OnlineStore.js","sourcesContent":["/*\n * Copyright (C) 2015 Actor LLC. <https://actor.im>\n */\n\nimport { Store } from 'flux/utils';\nimport Dispatcher from '../dispatcher/ActorAppDispatcher';\nimport { ActionTypes, PeerTypes } from '../constants/ActorAppConstants';\nimport ActorClient from '../utils/ActorClient';\n\nlet message = '',\n    online = 0,\n    total = 0,\n    isOnline = false,\n    isNotMember =  false;\n\nclass OnlineStore extends Store {\n  constructor(dispatcher){\n    super(dispatcher);\n  }\n\n  getMessage() {\n    return message;\n  }\n\n  getTotal() {\n    return total;\n  }\n\n  getOnline() {\n    return online;\n  }\n\n  isOnline() {\n    return isOnline;\n  }\n\n  isNotMember() {\n    return isNotMember;\n  }\n\n  __onDispatch(action) {\n    switch(action.type) {\n      case ActionTypes.GROUP_ONLINE_CHANGE:\n        message = action.message;\n        online = action.online;\n        total = action.total;\n        isNotMember = action.isNotMember;\n        this.__emitChange();\n        break;\n      case ActionTypes.USER_ONLINE_CHANGE:\n        message = action.message;\n        isOnline = action.isOnline;\n        this.__emitChange();\n        break;\n      default:\n    }\n  }\n}\n\nexport default new OnlineStore(Dispatcher);\n"]}