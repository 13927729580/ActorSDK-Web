{"version":3,"sources":["../../src/stores/LoggerStore.js"],"names":[],"mappings":";;;;AAIA;;AACA;;;;AACA;;;;;;;;;;;;IAEM,W;;;AACJ,uBAAY,UAAZ,EAAwB;AAAA;;AAAA,iDACtB,kBAAM,UAAN,CADsB;;AAEtB,UAAK,KAAL,GAAa,EAAb;AACA,UAAK,OAAL,GAAe,KAAf;AAHsB;AAIvB;;wBAED,M,qBAAS;AACP,WAAO,KAAK,OAAZ;AACD,G;;wBAED,O,sBAAU;AACR,WAAO,KAAK,KAAZ;AACD,G;;wBAED,Y,yBAAa,M,EAAQ;AACnB,YAAQ,OAAO,IAAf;AACE,WAAK,+BAAY,aAAjB;AACE,aAAK,OAAL,GAAe,CAAC,KAAK,OAArB;AACA,aAAK,YAAL;AACA;AACF,WAAK,+BAAY,aAAjB;AACE,aAAK,KAAL,CAAW,IAAX,CAAgB,OAAO,OAAvB;AACA,aAAK,YAAL;AACA;AARJ;AAUD,G;;;;;kBAGY,IAAI,WAAJ,8B","file":"LoggerStore.js","sourcesContent":["/*\n * Copyright (C) 2015 Actor LLC. <https://actor.im>\n */\n\nimport { Store } from 'flux/utils';\nimport Dispatcher from '../dispatcher/ActorAppDispatcher';\nimport { ActionTypes } from '../constants/ActorAppConstants';\n\nclass LoggerStore extends Store {\n  constructor(dispatcher) {\n    super(dispatcher);\n    this._logs = [];\n    this._isOpen = false;\n  }\n\n  isOpen() {\n    return this._isOpen;\n  }\n\n  getLogs() {\n    return this._logs;\n  }\n\n  __onDispatch(action) {\n    switch (action.type) {\n      case ActionTypes.LOGGER_TOGGLE:\n        this._isOpen = !this._isOpen;\n        this.__emitChange();\n        break;\n      case ActionTypes.LOGGER_APPEND:\n        this._logs.push(action.payload);\n        this.__emitChange();\n        break;\n    }\n  }\n}\n\nexport default new LoggerStore(Dispatcher);\n"]}