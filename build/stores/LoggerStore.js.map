{"version":3,"sources":["../../src/stores/LoggerStore.js"],"names":[],"mappings":";;;;;;AAIA;;AACA;;;;AACA;;;;;;;;;;;;IAEM;;;;;;;;;wBACJ,6CAAkB;AAChB,WAAO;AACL,YAAM,EAAN;AACA,cAAQ,KAAR;KAFF,CADgB;;;AADd,wBAQJ,yBAAO,OAAO,QAAQ;AACpB,YAAQ,OAAO,IAAP;AACN,WAAK,+BAAY,aAAZ;AACH,4BACK;AACH,kBAAQ,CAAC,MAAM,MAAN;UAFX,CADF;AADF,WAMO,+BAAY,aAAZ;AACH,4BACK;AACH,0BAAU,MAAM,IAAN,GAAY,OAAO,OAAP,EAAtB;UAFF,CADF;AANF;AAYI,eAAO,KAAP,CADF;AAXF,KADoB;;;SARlB;;;kBA0BS,IAAI,WAAJ","file":"LoggerStore.js","sourcesContent":["/*\n * Copyright (C) 2015 Actor LLC. <https://actor.im>\n */\n\nimport { ReduceStore } from 'flux/utils';\nimport Dispatcher from '../dispatcher/ActorAppDispatcher';\nimport { ActionTypes } from '../constants/ActorAppConstants';\n\nclass LoggerStore extends ReduceStore {\n  getInitialState() {\n    return {\n      logs: [],\n      isOpen: false\n    };\n  }\n\n  reduce(state, action) {\n    switch (action.type) {\n      case ActionTypes.LOGGER_TOGGLE:\n        return {\n          ...state,\n          isOpen: !state.isOpen\n        };\n      case ActionTypes.LOGGER_APPEND:\n        return {\n          ...state,\n          logs: [...state.logs, action.payload]\n        };\n      default:\n        return state;\n    }\n  }\n}\n\nexport default new LoggerStore(Dispatcher);\n"]}