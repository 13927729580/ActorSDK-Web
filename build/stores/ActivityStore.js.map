{"version":3,"sources":["../../src/stores/ActivityStore.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAIA;;AACA;;;;AACA;;;;IAEM;;;;;;;;0BACJ,6CAAkB;AAChB,WAAO;AACL,cAAQ,KAAR;KADF,CADgB;;;AADd,0BAOJ,yBAAO,OAAO,QAAQ;AACpB,YAAQ,OAAO,IAAP;AACN,WAAK,+BAAY,eAAZ,CADP;AAEE,WAAK,+BAAY,aAAZ;AACH,eAAO,KAAK,eAAL,EAAP,CADF;AAFF,WAIO,+BAAY,aAAZ;AACH,eAAO;AACL,kBAAQ,IAAR;SADF,CADF;AAJF;AASI,eAAO,KAAP,CADF;AARF,KADoB;;;AAPlB,0BAqBJ,2BAAS;AACP,WAAO,KAAK,QAAL,GAAgB,MAAhB,CADA;;;SArBL;;;;;kBA0BS,IAAI,aAAJ","file":"ActivityStore.js","sourcesContent":["/*\n * Copyright (C) 2015 Actor LLC. <https://actor.im>\n */\n\nimport { ReduceStore } from 'flux/utils';\nimport Dispatcher from '../dispatcher/ActorAppDispatcher';\nimport { ActionTypes } from '../constants/ActorAppConstants';\n\nclass ActivityStore extends ReduceStore {\n  getInitialState() {\n    return {\n      isOpen: false\n    };\n  }\n\n  reduce(state, action) {\n    switch (action.type) {\n      case ActionTypes.CALL_MODAL_OPEN:\n      case ActionTypes.ACTIVITY_HIDE:\n        return this.getInitialState();\n      case ActionTypes.ACTIVITY_SHOW:\n        return {\n          isOpen: true\n        };\n      default:\n        return state;\n    }\n  }\n\n  isOpen() {\n    return this.getState().isOpen;\n  }\n}\n\nexport default new ActivityStore(Dispatcher);\n"]}