{"version":3,"sources":["../../src/stores/ActivityStore.js"],"names":[],"mappings":"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","file":"ActivityStore.js","sourcesContent":["/*\n * Copyright (C) 2015 Actor LLC. <https://actor.im>\n */\n\nimport ActorAppDispatcher from '../dispatcher/ActorAppDispatcher';\nimport { ActionTypes, ActivityTypes, PeerTypes } from '../constants/ActorAppConstants';\nimport ActorClient from '../utils/ActorClient';\n\nimport DialogStore from './DialogStore';\n\nimport { EventEmitter } from 'events';\nimport assign from 'object-assign';\n\nconst CHANGE_EVENT = 'change';\n\nlet _isOpen = false,\n    _activity = null;\n\nvar ActivityStore = assign({}, EventEmitter.prototype, {\n  getActivity() {\n    return _activity;\n  },\n\n  isOpen() {\n    return _isOpen;\n  },\n\n  emitChange() {\n    this.emit(CHANGE_EVENT);\n  },\n\n  addChangeListener(callback) {\n    this.on(CHANGE_EVENT, callback);\n  },\n\n  removeChangeListener(callback) {\n    this.removeListener(CHANGE_EVENT, callback);\n  }\n});\n\n// TODO: move bindings ot action creators\nlet _cleanup = () => {};\n\nvar _setActivityFromPeer = function () {\n  _cleanup();\n\n  var peer = DialogStore.getSelectedDialogPeer();\n  switch (peer.type) {\n    case PeerTypes.USER:\n    {\n      let change = function (user) {\n        _activity = {\n          type: ActivityTypes.USER_PROFILE,\n          user: user\n        };\n\n        ActivityStore.emitChange();\n      };\n\n      _cleanup = function () {\n        ActorClient.unbindUser(peer.id, change);\n      };\n\n      ActorClient.bindUser(peer.id, change);\n    }\n      break;\n    case PeerTypes.GROUP:\n    {\n      let change = function (group) {\n        _activity = {\n          type: ActivityTypes.GROUP_PROFILE,\n          group: group\n        };\n\n        ActivityStore.emitChange();\n      };\n\n      _cleanup = function () {\n        ActorClient.unbindGroup(peer.id, change);\n      };\n\n      ActorClient.bindGroup(peer.id, change);\n    }\n      break;\n    default:\n      return;\n  }\n};\n\nActivityStore.dispatchToken = ActorAppDispatcher.register(action => {\n  switch (action.type) {\n    case ActionTypes.ACTIVITY_HIDE:\n      _isOpen = false;\n      ActivityStore.emitChange();\n      break;\n    case ActionTypes.ACTIVITY_SHOW:\n      _isOpen = true;\n      ActivityStore.emitChange();\n      break;\n    case ActionTypes.SELECT_DIALOG_PEER:\n      ActorAppDispatcher.waitFor([DialogStore.dispatchToken]);\n      _setActivityFromPeer();\n      ActivityStore.emitChange();\n      break;\n    default:\n      return;\n  }\n});\n\nexport default ActivityStore;\n"]}