{"version":3,"sources":["../../src/stores/ActivityStore.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAQA,IAAI,OAAO,GAAG,KAAK,CAAC;;IAEd,aAAa;YAAb,aAAa;;AACjB,WADI,aAAa,CACL,UAAU,EAAE;0BADpB,aAAa;;kEAAb,aAAa,aAET,UAAU;GACjB;;eAHG,aAAa;;6BAKR;AACP,aAAO,OAAO,CAAC;KAChB;;;iCAEY,MAAM,EAAE;AACnB,cAAO,MAAM,CAAC,IAAI;AAChB,aAAK,+BAAY,aAAa;AAC5B,iBAAO,GAAG,KAAK,CAAC;AAChB,cAAI,CAAC,YAAY,EAAE,CAAC;AACpB,gBAAM;AAAA,AACR,aAAK,+BAAY,aAAa;AAC5B,iBAAO,GAAG,IAAI,CAAC;AACf,cAAI,CAAC,YAAY,EAAE,CAAC;AACpB,gBAAM;AAAA,AACR,gBAAQ;OACT;KACF;;;SArBG,aAAa;;;kBAwBJ,IAAI,aAAa,8BAAY","file":"ActivityStore.js","sourcesContent":["/*\n * Copyright (C) 2015 Actor LLC. <https://actor.im>\n */\n\nimport { Store } from 'flux/utils';\nimport Dispatcher from '../dispatcher/ActorAppDispatcher';\nimport { ActionTypes } from '../constants/ActorAppConstants';\n\nlet _isOpen = false;\n\nclass ActivityStore extends Store {\n  constructor(dispatcher) {\n    super(dispatcher);\n  }\n\n  isOpen() {\n    return _isOpen;\n  }\n\n  __onDispatch(action) {\n    switch(action.type) {\n      case ActionTypes.ACTIVITY_HIDE:\n        _isOpen = false;\n        this.__emitChange();\n        break;\n      case ActionTypes.ACTIVITY_SHOW:\n        _isOpen = true;\n        this.__emitChange();\n        break;\n      default:\n    }\n  }\n}\n\nexport default new ActivityStore(Dispatcher);\n"]}