{"version":3,"sources":["../../src/stores/CreateGroupStore.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAWA,IAAI,UAAU,GAAG,KAAK;IAClB,YAAY,GAAG,mBAHG,gBAAgB,CAGF,UAAU;IAC1C,UAAU,GAAG,EAAE;IACf,gBAAgB,GAAG,IAAI,oBAAU,GAAG,EAAE,CAAC;;IAErC,gBAAgB;YAAhB,gBAAgB;;AACpB,WADI,gBAAgB,CACR,UAAU,EAAE;0BADpB,gBAAgB;;uEAAhB,gBAAgB,aAEZ,UAAU;;UA0BlB,YAAY,GAAG,UAAC,MAAM,EAAK;AACzB,cAAQ,MAAM,CAAC,IAAI;;AAEjB,aAAK,mBAtCF,WAAW,CAsCG,uBAAuB;AACtC,oBAAU,GAAG,IAAI,CAAC;AAClB,gBAAK,YAAY,EAAE,CAAC;AACpB,gBAAM;AAAA,AACR,aAAK,mBA1CF,WAAW,CA0CG,wBAAwB;AACvC,gBAAK,UAAU,EAAE,CAAC;AAClB,gBAAK,YAAY,EAAE,CAAC;AACpB,gBAAM;;AAAA,AAER,aAAK,mBA/CF,WAAW,CA+CG,qBAAqB;AACpC,sBAAY,GAAG,mBAhDD,gBAAgB,CAgDE,kBAAkB,CAAC;AACnD,oBAAU,GAAG,MAAM,CAAC,IAAI,CAAC;AACzB,gBAAK,YAAY,EAAE,CAAC;AACpB,gBAAM;;;;;;;AAAA,AAOR,aAAK,mBA1DF,WAAW,CA0DG,wBAAwB;AACvC,0BAAgB,GAAG,MAAM,CAAC,eAAe,CAAC;AAC1C,gBAAK,YAAY,EAAE,CAAC;AACpB,gBAAM;;AAAA,AAER,aAAK,mBA/DF,WAAW,CA+DG,YAAY;AAC3B,sBAAY,GAAG,mBAhED,gBAAgB,CAgEE,gBAAgB,CAAC;AACjD,gBAAK,YAAY,EAAE,CAAC;AACpB,gBAAM;AAAA,AACR,aAAK,mBAnEF,WAAW,CAmEG,oBAAoB;AACnC,gBAAK,UAAU,EAAE,CAAC;AAClB,gBAAK,YAAY,EAAE,CAAC;AACpB,gBAAM;AAAA,AACR,aAAK,mBAvEF,WAAW,CAuEG,kBAAkB;AACjC,iBAAO,CAAC,KAAK,CAAC,wBAAwB,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC;AACtD,gBAAK,YAAY,EAAE,CAAC;AACpB,gBAAM;AAAA,OACT;KACF;;;GAlEA;;eAHG,gBAAgB;;kCAKN;AACZ,aAAO,UAAU,CAAC;KACnB;;;qCAEgB;AACf,aAAO,YAAY,CAAC;KACrB;;;mCAEc;AACb,aAAO,UAAU,CAAC;KACnB;;;yCAEoB;AACnB,aAAO,gBAAgB,CAAC;KACzB;;;iCAEY;AACX,gBAAU,GAAG,KAAK,CAAC;AACnB,kBAAY,GAAG,mBA9BG,gBAAgB,CA8BF,UAAU,CAAC;AAC3C,gBAAU,GAAG,EAAE,CAAC;AAChB,sBAAgB,GAAG,IAAI,oBAAU,GAAG,EAAE,CAAC;KACxC;;;SA1BG,gBAAgB;UATb,KAAK;;kBAiFC,IAAI,gBAAgB,8BAAY","file":"CreateGroupStore.js","sourcesContent":["/*\n * Copyright (C) 2015 Actor LLC. <https://actor.im>\n */\n\nimport Immutable from 'immutable';\nimport keymirror from 'keymirror';\n\nimport { Store } from 'flux/utils';\nimport Dispatcher from '../dispatcher/ActorAppDispatcher';\nimport { ActionTypes, CreateGroupSteps } from '../constants/ActorAppConstants';\n\nlet _modalOpen = false,\n    _currentStep = CreateGroupSteps.NAME_INPUT,\n    _groupName = '',\n    _selectedUserIds = new Immutable.Set();\n\nclass CreateGroupStore extends Store {\n  constructor(Dispatcher) {\n    super(Dispatcher);\n  }\n\n  isModalOpen() {\n    return _modalOpen;\n  }\n\n  getCurrentStep() {\n    return _currentStep;\n  }\n\n  getGroupName() {\n    return _groupName;\n  }\n\n  getSelectedUserIds() {\n    return _selectedUserIds;\n  }\n\n  resetStore() {\n    _modalOpen = false;\n    _currentStep = CreateGroupSteps.NAME_INPUT;\n    _groupName = '';\n    _selectedUserIds = new Immutable.Set();\n  }\n\n  __onDispatch = (action) => {\n    switch (action.type) {\n\n      case ActionTypes.GROUP_CREATE_MODAL_OPEN:\n        _modalOpen = true;\n        this.__emitChange();\n        break;\n      case ActionTypes.GROUP_CREATE_MODAL_CLOSE:\n        this.resetStore();\n        this.__emitChange();\n        break;\n\n      case ActionTypes.GROUP_CREATE_SET_NAME:\n        _currentStep = CreateGroupSteps.CONTACTS_SELECTION;\n        _groupName = action.name;\n        this.__emitChange();\n        break;\n\n      //case ActionTypes.GROUP_CREATE_SET_AVATAR:\n      //  _avatar = action.avatar;\n      //  this.__emitChange();\n      //  break;\n\n      case ActionTypes.GROUP_CREATE_SET_MEMBERS:\n        _selectedUserIds = action.selectedUserIds;\n        this.__emitChange();\n        break;\n\n      case ActionTypes.GROUP_CREATE:\n        _currentStep = CreateGroupSteps.CREATION_STARTED;\n        this.__emitChange();\n        break;\n      case ActionTypes.GROUP_CREATE_SUCCESS:\n        this.resetStore();\n        this.__emitChange();\n        break;\n      case ActionTypes.GROUP_CREATE_ERROR:\n        console.error('Failed to create group', action.error);\n        this.__emitChange();\n        break;\n    }\n  }\n}\n\nexport default new CreateGroupStore(Dispatcher);\n"]}