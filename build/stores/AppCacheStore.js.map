{"version":3,"sources":["../../src/stores/AppCacheStore.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAQA,IAAM,YAAY,GAAG,QAAQ,CAAC;;AAE9B,IAAI,YAAY,GAAG,KAAK,CAAC;;IAEnB,aAAa;YAAb,aAAa;;WAAb,aAAa;0BAAb,aAAa;;kEAAb,aAAa;;;eAAb,aAAa;;kCACH;AACZ,aAAO,YAAY,CAAC;KACrB;;;iCAEY;AACX,UAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;KACzB;;;sCAEiB,QAAQ,EAAE;AAC1B,UAAI,CAAC,EAAE,CAAC,YAAY,EAAE,QAAQ,CAAC,CAAC;KACjC;;;yCAEoB,QAAQ,EAAE;AAC7B,UAAI,CAAC,cAAc,CAAC,YAAY,EAAE,QAAQ,CAAC,CAAC;KAC7C;;;SAfG,aAAa;;;AAkBnB,IAAI,qBAAqB,GAAG,IAAI,aAAa,EAAE,CAAC;;AAEhD,qBAAqB,CAAC,aAAa,GAAG,6BAAmB,QAAQ,CAAC,UAAA,MAAM,EAAI;AAC1E,UAAO,MAAM,CAAC,IAAI;AAChB,SAAK,+BAAY,qBAAqB;AACpC,kBAAY,GAAG,IAAI,CAAC;AACpB,2BAAqB,CAAC,UAAU,EAAE,CAAC;AACnC,YAAM;AAAA,AACR,SAAK,+BAAY,qBAAqB;AACpC,kBAAY,GAAG,KAAK,CAAC;AACrB,2BAAqB,CAAC,UAAU,EAAE,CAAC;AACnC,YAAM;AAAA,AACR;AACE,aAAO;AAAA,GACV;CACF,CAAC,CAAC;;kBAEY,qBAAqB","file":"AppCacheStore.js","sourcesContent":["/*\n * Copyright (C) 2015 Actor LLC. <https://actor.im>\n */\n\nimport { EventEmitter } from 'events';\nimport ActorAppDispatcher from '../dispatcher/ActorAppDispatcher';\nimport { ActionTypes } from '../constants/ActorAppConstants';\n\nconst CHANGE_EVENT = 'change';\n\nlet _isModalOpen = false;\n\nclass AppCacheStore extends EventEmitter {\n  isModalOpen() {\n    return _isModalOpen;\n  }\n\n  emitChange() {\n    this.emit(CHANGE_EVENT);\n  }\n\n  addChangeListener(callback) {\n    this.on(CHANGE_EVENT, callback);\n  }\n\n  removeChangeListener(callback) {\n    this.removeListener(CHANGE_EVENT, callback);\n  }\n}\n\nlet AppCacheStoreInstance = new AppCacheStore();\n\nAppCacheStoreInstance.dispatchToken = ActorAppDispatcher.register(action => {\n  switch(action.type) {\n    case ActionTypes.APP_UPDATE_MODAL_SHOW:\n      _isModalOpen = true;\n      AppCacheStoreInstance.emitChange();\n      break;\n    case ActionTypes.APP_UPDATE_MODAL_HIDE:\n      _isModalOpen = false;\n      AppCacheStoreInstance.emitChange();\n      break;\n    default:\n      return;\n  }\n});\n\nexport default AppCacheStoreInstance;\n"]}