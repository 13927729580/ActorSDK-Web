{"version":3,"sources":["../../src/utils/MessageUtils.js"],"names":[],"mappings":"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","file":"MessageUtils.js","sourcesContent":["import { emoji } from './EmojiUtils';\nimport { MessageStates } from '../constants/ActorAppConstants';\n\nfunction isMessageSender(message, uid) {\n  return uid === message.sender.peer.id;\n}\n\nexport function getMessageState(message, uid, receiveDate, readDate) {\n  if (message.sender.peer.id !== uid) {\n    return MessageStates.UNKNOWN;\n  }\n\n  if (message.isOut && message.state === MessageStates.SENT) {\n    if (message.sortDate <= readDate) {\n      return MessageStates.READ;\n    }\n\n    if (message.sortDate <= receiveDate) {\n      return MessageStates.RECEIVED;\n    }\n  }\n\n  return message.state;\n}\n\nexport function prepareTextMessage(text) {\n  emoji.change_replace_mode('unified');\n  return emoji.replace_colons(text);\n}\n\nexport function quoteMessage(text) {\n  return text\n    .trim()\n    .split('\\n')\n    .map((line) => `> ${line}`)\n    .join('\\n');\n}\n\nexport function isLastMessageMine(uid, { messages }) {\n  const lastMessage = messages[messages.length - 1];\n  return lastMessage && isMessageSender(lastMessage, uid);\n}\n\nexport function getFirstUnreadMessageIndex(messages, readDate, uid) {\n  if (readDate === 0 || !messages.length) {\n    return -1;\n  }\n\n  let index = -1;\n  for (let i = messages.length - 1; i >= 0; i--) {\n    const message = messages[i];\n    if (message.sortDate <= readDate || isMessageSender(message, uid)) {\n      return index;\n    }\n\n    index = i;\n  }\n\n  // maybe unreachable\n  return index;\n}\n\nconst MAX_EDIT_TIME = 5 * 60;\nexport function findLastEditableMessage(messages, uid) {\n  const now = Date.now() / 1000;\n  const minDate = now - MAX_EDIT_TIME;\n\n  console.debug('Check editable message', { minDate });\n  for (let i = messages.length - 1; i >= 0; i--) {\n    const message = messages[i];\n    if (message.sortDate < minDate) {\n      console.debug('Message not editable due sortDate', { message });\n      return null;\n    }\n\n    if (isMessageSender(message, uid)) {\n      if (message.content.content === 'text') {\n        console.debug('Found editable message', { message });\n        return message;\n      }\n\n      console.debug('Last my message is not text', { message });\n\n      return null;\n    }\n  }\n\n  return null;\n}\n"]}