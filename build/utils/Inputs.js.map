{"version":3,"sources":["../../src/utils/Inputs.js"],"names":[],"mappings":";;;;;AAAA,IAAM,MAAM,GAAG;AACb,mBAAiB,EAAE,2BAAC,EAAE,EAAK;AACzB,QAAI,KAAK,GAAG,CAAC;QAAE,GAAG,GAAG,CAAC;QAAE,eAAe;QAAE,KAAK;QAC5C,cAAc;QAAE,GAAG;QAAE,QAAQ,CAAC;;AAEhC,QAAI,OAAO,EAAE,CAAC,cAAc,KAAK,QAAQ,IAAI,OAAO,EAAE,CAAC,YAAY,KAAK,QAAQ,EAAE;AAChF,WAAK,GAAG,EAAE,CAAC,cAAc,CAAC;AAC1B,SAAG,GAAG,EAAE,CAAC,YAAY,CAAC;KACvB,MAAM;AACL,WAAK,GAAG,QAAQ,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC;;AAEzC,UAAI,KAAK,IAAI,KAAK,CAAC,aAAa,EAAE,KAAK,EAAE,EAAE;AACzC,WAAG,GAAG,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC;AACtB,uBAAe,GAAG,EAAE,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC;;;AAAC,AAGlD,sBAAc,GAAG,EAAE,CAAC,eAAe,EAAE,CAAC;AACtC,sBAAc,CAAC,cAAc,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC;;;;;AAAC,AAKnD,gBAAQ,GAAG,EAAE,CAAC,eAAe,EAAE,CAAC;AAChC,gBAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;;AAEzB,YAAI,cAAc,CAAC,gBAAgB,CAAC,YAAY,EAAE,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAE;AAChE,eAAK,GAAG,GAAG,GAAG,GAAG,CAAC;SACnB,MAAM;AACL,eAAK,GAAG,CAAC,cAAc,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,GAAG,CAAC,CAAC;AACrD,eAAK,IAAI,eAAe,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC;;AAEhE,cAAI,cAAc,CAAC,gBAAgB,CAAC,UAAU,EAAE,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAE;AAC9D,eAAG,GAAG,GAAG,CAAC;WACX,MAAM;AACL,eAAG,GAAG,CAAC,cAAc,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC,GAAG,CAAC,CAAC;AACjD,eAAG,IAAI,eAAe,CAAC,KAAK,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC;WAC7D;SACF;OACF;KACF;;AAED,WAAO;AACL,WAAK,EAAE,KAAK;AACZ,SAAG,EAAE,GAAG;KACT,CAAC;GACH;CACF,CAAC;;kBAEa,MAAM","file":"Inputs.js","sourcesContent":["const inputs = {\n  getInputSelection: (el) => {\n    var start = 0, end = 0, normalizedValue, range,\n      textInputRange, len, endRange;\n\n    if (typeof el.selectionStart === 'number' && typeof el.selectionEnd === 'number') {\n      start = el.selectionStart;\n      end = el.selectionEnd;\n    } else {\n      range = document.selection.createRange();\n\n      if (range && range.parentElement() === el) {\n        len = el.value.length;\n        normalizedValue = el.value.replace(/\\r\\n/g, '\\n');\n\n        // Create a working TextRange that lives only in the input\n        textInputRange = el.createTextRange();\n        textInputRange.moveToBookmark(range.getBookmark());\n\n        // Check if the start and end of the selection are at the very end\n        // of the input, since moveStart/moveEnd doesn't return what we want\n        // in those cases\n        endRange = el.createTextRange();\n        endRange.collapse(false);\n\n        if (textInputRange.compareEndPoints('StartToEnd', endRange) > -1) {\n          start = end = len;\n        } else {\n          start = -textInputRange.moveStart('character', -len);\n          start += normalizedValue.slice(0, start).split('\\n').length - 1;\n\n          if (textInputRange.compareEndPoints('EndToEnd', endRange) > -1) {\n            end = len;\n          } else {\n            end = -textInputRange.moveEnd('character', -len);\n            end += normalizedValue.slice(0, end).split('\\n').length - 1;\n          }\n        }\n      }\n    }\n\n    return {\n      start: start,\n      end: end\n    };\n  }\n};\n\nexport default inputs;\n"]}