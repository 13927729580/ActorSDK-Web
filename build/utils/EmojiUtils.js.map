{"version":3,"sources":["../../src/utils/EmojiUtils.js"],"names":[],"mappings":"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","file":"EmojiUtils.js","sourcesContent":["/*\n * Copyright (C) 2015 Actor LLC. <https://actor.im>\n */\n\nimport { escape } from 'lodash';\nimport emoji from 'js-emoji';\nimport emojiDataCategories from 'emoji-data/emoji_categories.json';\nimport { Path } from '../constants/ActorAppConstants';\n\nemoji.include_title = true;\nemoji.include_text = true;\nemoji.use_sheet = true;\nemoji.colons_mode = false;\nemoji.img_set = 'apple';\nemoji.img_sets = {\n  'apple': {\n    // 'path': Path.toEmoji + '/img-apple-64/',\n    'sheet': Path.toEmoji + '/sheet_apple_64.png',\n    'mask': 1\n  },\n  'google': {\n    // 'path': Path.toEmoji + '/img-google-64/',\n    'sheet': Path.toEmoji + '/sheet_google_64.png',\n    'mask': 2\n  },\n  'twitter': {\n    // 'path': Path.toEmoji + '/img-twitter-64/',\n    'sheet': Path.toEmoji + '/sheet_twitter_64.png',\n    'mask': 4\n  },\n  'emojione': {\n    // 'path': Path.toEmoji + '/img-emojione-64/',\n    'sheet': Path.toEmoji + '/sheet_emojione_64.png',\n    'mask': 8\n  }\n};\n\nexport { emoji as emoji };\n\nexport const getEmojiCategories = () => {\n  let emojiCategories = [];\n\n  for (let category of emojiDataCategories.EmojiDataArray) {\n    let title = category.CVDataTitle.replace(/^(.*)-/, '');\n    let data = category.CVCategoryData.Data.split(',');\n    let icon = '';\n\n    switch (title) {\n      case 'People':\n        icon = ':grinning:';\n        break;\n      case 'Nature':\n        icon = ':evergreen_tree:';\n        break;\n      case 'Foods':\n        icon = ':hamburger:';\n        break;\n      case 'Celebration':\n        icon = ':gift:';\n        break;\n      case 'Activity':\n        icon = ':football:';\n        break;\n      case 'Places':\n        icon = ':airplane:';\n        break;\n      case 'Objects':\n        icon = ':bulb:';\n        break;\n      case 'Flags':\n        icon = ':flag-ru:';\n        break;\n      case 'Symbols':\n        icon = ':peace_symbol:';\n        break;\n      default:\n    }\n\n    emojiCategories.push({title, icon, data});\n  }\n\n  return emojiCategories;\n};\n\nexport const emojiRegexp = /([\\uE000-\\uF8FF]|\\uD83C[\\uDF00-\\uDFFF]|\\uD83D[\\uDC00-\\uDDFF])/g;\n\nexport const preloadEmojiSheet = () => (new Image()).src = emoji.img_sets[emoji.img_set].sheet;\n\nexport const escapeWithEmoji = (text) => {\n  emoji.include_title = false;\n  emoji.include_text = false;\n  return emoji.replace_unified(escape(text));\n};\n\nexport default {\n  emoji,\n  emojiRegexp,\n  getEmojiCategories,\n  preloadEmojiSheet,\n  escapeWithEmoji\n};\n"]}