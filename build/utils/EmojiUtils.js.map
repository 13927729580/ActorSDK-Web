{"version":3,"sources":["../../src/utils/EmojiUtils.js"],"names":[],"mappings":";;;;QA8FgB,gB,GAAA,gB;;AA1FhB;;AACA;;;;AACA;;;;AACA;;;;;;;;AAEA,qBAAM,aAAN,GAAsB,IAAtB;AACA,qBAAM,YAAN,GAAqB,IAArB;AACA,qBAAM,SAAN,GAAkB,IAAlB;AACA,qBAAM,WAAN,GAAoB,KAApB;AACA,qBAAM,OAAN,GAAgB,OAAhB;AACA,qBAAM,QAAN,GAAiB;AACf,WAAS;;AAEP,aAAS,wBAAK,OAAL,GAAe,qBAFjB;AAGP,YAAQ;AAHD,GADM;AAMf,YAAU;;AAER,aAAS,wBAAK,OAAL,GAAe,sBAFhB;AAGR,YAAQ;AAHA,GANK;AAWf,aAAW;;AAET,aAAS,wBAAK,OAAL,GAAe,uBAFf;AAGT,YAAQ;AAHC,GAXI;AAgBf,cAAY;;AAEV,aAAS,wBAAK,OAAL,GAAe,wBAFd;AAGV,YAAQ;AAHE;AAhBG,CAAjB;;QAuBkB,K;AAEX,IAAM,kDAAqB,SAArB,kBAAqB,GAAM;AACtC,MAAI,kBAAkB,EAAtB;;AAEA,uBAAqB,2BAAoB,cAAzC,kHAAyD;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,QAAhD,QAAgD;;AACvD,QAAI,QAAQ,SAAS,WAAT,CAAqB,OAArB,CAA6B,QAA7B,EAAuC,EAAvC,CAAZ;AACA,QAAI,OAAO,SAAS,cAAT,CAAwB,IAAxB,CAA6B,KAA7B,CAAmC,GAAnC,CAAX;AACA,QAAI,OAAO,EAAX;;AAEA,YAAQ,KAAR;AACE,WAAK,QAAL;AACE,eAAO,YAAP;AACA;AACF,WAAK,QAAL;AACE,eAAO,kBAAP;AACA;AACF,WAAK,OAAL;AACE,eAAO,aAAP;AACA;AACF,WAAK,aAAL;AACE,eAAO,QAAP;AACA;AACF,WAAK,UAAL;AACE,eAAO,YAAP;AACA;AACF,WAAK,QAAL;AACE,eAAO,YAAP;AACA;AACF,WAAK,SAAL;AACE,eAAO,QAAP;AACA;AACF,WAAK,OAAL;AACE,eAAO,WAAP;AACA;AACF,WAAK,SAAL;AACE,eAAO,gBAAP;AACA;AACF;AA5BF;;AA+BA,oBAAgB,IAAhB,CAAqB,EAAE,YAAF,EAAS,UAAT,EAAe,UAAf,EAArB;AACD;;AAED,SAAO,eAAP;AACD,CA3CM;;AA6CA,IAAM,oCAAc,gEAApB;;AAEA,IAAM,gDAAoB,SAApB,iBAAoB;AAAA,SAAO,IAAI,KAAJ,EAAD,CAAc,GAAd,GAAoB,qBAAM,QAAN,CAAe,qBAAM,OAArB,EAA8B,KAAxD;AAAA,CAA1B;;AAEA,IAAM,4CAAkB,SAAlB,eAAkB,CAAC,IAAD,EAAU;AACvC,uBAAM,aAAN,GAAsB,KAAtB;AACA,uBAAM,YAAN,GAAqB,KAArB;AACA,SAAO,qBAAM,eAAN,CAAsB,oBAAO,IAAP,CAAtB,CAAP;AACD,CAJM;;AAMA,SAAS,gBAAT,CAA0B,IAA1B,EAAgC;AACrC,uBAAM,aAAN,GAAsB,IAAtB;AACA,uBAAM,YAAN,GAAqB,IAArB;AACA,uBAAM,mBAAN,CAA0B,KAA1B;;AAEA,MAAI,gBAAgB,IAApB;AACA,kBAAgB,qBAAM,cAAN,CAAqB,IAArB,CAAhB;AACA,kBAAgB,qBAAM,eAAN,CAAsB,aAAtB,CAAhB;;AAEA,SAAO,aAAP;AACD;;kBAEc;AACb,6BADa;AAEb,0BAFa;AAGb,wCAHa;AAIb,sCAJa;AAKb;AALa,C","file":"EmojiUtils.js","sourcesContent":["/*\n * Copyright (C) 2015 Actor LLC. <https://actor.im>\n */\n\nimport { escape } from 'lodash';\nimport emoji from 'actor-emoji';\nimport emojiDataCategories from 'actor-emoji/emoji_categories';\nimport { Path } from '../constants/ActorAppConstants';\n\nemoji.include_title = true;\nemoji.include_text = true;\nemoji.use_sheet = true;\nemoji.colons_mode = false;\nemoji.img_set = 'apple';\nemoji.img_sets = {\n  'apple': {\n    // 'path': Path.toEmoji + '/img-apple-64/',\n    'sheet': Path.toEmoji + '/sheet_apple_64.png',\n    'mask': 1\n  },\n  'google': {\n    // 'path': Path.toEmoji + '/img-google-64/',\n    'sheet': Path.toEmoji + '/sheet_google_64.png',\n    'mask': 2\n  },\n  'twitter': {\n    // 'path': Path.toEmoji + '/img-twitter-64/',\n    'sheet': Path.toEmoji + '/sheet_twitter_64.png',\n    'mask': 4\n  },\n  'emojione': {\n    // 'path': Path.toEmoji + '/img-emojione-64/',\n    'sheet': Path.toEmoji + '/sheet_emojione_64.png',\n    'mask': 8\n  }\n};\n\nexport { emoji as emoji };\n\nexport const getEmojiCategories = () => {\n  let emojiCategories = [];\n\n  for (let category of emojiDataCategories.EmojiDataArray) {\n    let title = category.CVDataTitle.replace(/^(.*)-/, '');\n    let data = category.CVCategoryData.Data.split(',');\n    let icon = '';\n\n    switch (title) {\n      case 'People':\n        icon = ':grinning:';\n        break;\n      case 'Nature':\n        icon = ':evergreen_tree:';\n        break;\n      case 'Foods':\n        icon = ':hamburger:';\n        break;\n      case 'Celebration':\n        icon = ':gift:';\n        break;\n      case 'Activity':\n        icon = ':football:';\n        break;\n      case 'Places':\n        icon = ':airplane:';\n        break;\n      case 'Objects':\n        icon = ':bulb:';\n        break;\n      case 'Flags':\n        icon = ':flag-ru:';\n        break;\n      case 'Symbols':\n        icon = ':peace_symbol:';\n        break;\n      default:\n    }\n\n    emojiCategories.push({ title, icon, data });\n  }\n\n  return emojiCategories;\n};\n\nexport const emojiRegexp = /([\\uE000-\\uF8FF]|\\uD83C[\\uDF00-\\uDFFF]|\\uD83D[\\uDC00-\\uDDFF])/g;\n\nexport const preloadEmojiSheet = () => (new Image()).src = emoji.img_sets[emoji.img_set].sheet;\n\nexport const escapeWithEmoji = (text) => {\n  emoji.include_title = false;\n  emoji.include_text = false;\n  return emoji.replace_unified(escape(text));\n};\n\nexport function processEmojiText(text) {\n  emoji.include_title = true;\n  emoji.include_text = true;\n  emoji.change_replace_mode('css');\n\n  let emojifiedText = text;\n  emojifiedText = emoji.replace_colons(text);\n  emojifiedText = emoji.replace_unified(emojifiedText);\n\n  return emojifiedText;\n}\n\nexport default {\n  emoji,\n  emojiRegexp,\n  getEmojiCategories,\n  preloadEmojiSheet,\n  escapeWithEmoji\n};\n"]}