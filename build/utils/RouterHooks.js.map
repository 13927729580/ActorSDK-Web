{"version":3,"sources":["../../src/utils/RouterHooks.js"],"names":[],"mappings":";;;;AAAA;;;;AACA;;;;AACA;;;;;;AAEA,IAAM,cAAc;AAClB,oCAAY,WAAW,cAAc;AACnC,QAAI,CAAC,qBAAW,UAAX,EAAD,EAA0B;AAC5B,mBAAa;AACX,kBAAU,OAAV;AACA,eAAO;AACL,wBAAc,UAAU,QAAV,CAAmB,QAAnB;SADhB;OAFF,EAD4B;KAA9B;GAFgB;AAWlB,wCAAc,WAAW,cAAc;AACrC,QAAM,OAAO,oBAAU,YAAV,CAAuB,UAAU,MAAV,CAAiB,EAAjB,CAA9B,CAD+B;AAErC,QAAI,CAAC,oBAAU,OAAV,CAAkB,IAAlB,CAAD,EAA0B;AAC5B,cAAQ,KAAR,CAAc,cAAd,EAA8B,SAA9B,EAD4B;AAE5B,mBAAa,KAAb,EAF4B;KAA9B,MAGO;AACL,qCAAqB,gBAArB,CAAsC,IAAtC,EADK;KAHP;GAbgB;AAoBlB,0CAAgB;AACd,mCAAqB,gBAArB,CAAsC,IAAtC,EADc;GApBE;CAAd;;kBAyBS","file":"RouterHooks.js","sourcesContent":["import LoginStore from '../stores/LoginStore';\nimport DialogActionCreators from '../actions/DialogActionCreators';\nimport PeerUtils from './PeerUtils';\n\nconst RouterHooks = {\n  requireAuth(nextState, replaceState) {\n    if (!LoginStore.isLoggedIn()) {\n      replaceState({\n        pathname: '/auth',\n        state: {\n          nextPathname: nextState.location.pathname\n        }\n      });\n    }\n  },\n  onDialogEnter(nextState, replaceState) {\n    const peer = PeerUtils.stringToPeer(nextState.params.id);\n    if (!PeerUtils.hasPeer(peer)) {\n      console.error('Invalig peer', nextState);\n      replaceState('/im');\n    } else {\n      DialogActionCreators.selectDialogPeer(peer);\n    }\n  },\n  onDialogLeave() {\n    DialogActionCreators.selectDialogPeer(null);\n  }\n};\n\nexport default RouterHooks;\n"]}