{"version":3,"sources":["../../src/actions/CallActionCreators.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AASA,IAAM,gBAAgB,GAAG,IAAI,CAAC;;kBAEf;AACb,MAAI,kBAAG;AACL,sCAAS,+BAAY,eAAe,CAAC,CAAC;GACvC;AAED,YAAU,sBAAC,KAAK,EAAE;;;QACR,EAAE,GAAW,KAAK,CAAlB,EAAE;QAAE,IAAI,GAAK,KAAK,CAAd,IAAI;;AAChB,YAAQ,IAAI;AACV,WAAK,6BAAU,OAAO;AACpB,8BAAY,QAAQ,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;AACvC,0CAAS,+BAAY,eAAe,EAAE,EAAE,EAAE,EAAF,EAAE,EAAE,CAAC,CAAC;AAC9C,cAAM;AAAA,AACR,WAAK,6BAAU,KAAK;AAClB,kBAAU,CAAC,YAAM;AACf,gCAAY,UAAU,CAAC,EAAE,EAAE,MAAK,OAAO,CAAC,CAAC;AACzC,cAAI,oBAAU,MAAM,EAAE,EAAE,kCAAS,+BAAY,eAAe,CAAC,CAAC;SAC/D,EAAE,gBAAgB,CAAC,CAAC;AACrB,cAAM;AAAA,AACR,cAAQ;KACT;GACF;AAED,UAAQ,oBAAC,GAAG,EAAE;AACZ,2CAAc,sBAAY,QAAQ,CAAC,GAAG,CAAC,EAAE;AACvC,aAAO,EAAE,+BAAY,IAAI;AACzB,aAAO,EAAE,+BAAY,YAAY;AACjC,aAAO,EAAE,+BAAY,UAAU;KAChC,EAAE,EAAE,GAAG,EAAH,GAAG,EAAE,CAAC,CAAC;GACb;AAED,SAAO,mBAAC,IAAI,EAAE;AACZ,sCAAS,+BAAY,YAAY,EAAE,EAAE,IAAI,EAAJ,IAAI,EAAE,CAAC,CAAC;GAC9C;AAED,YAAU,sBAAC,EAAE,EAAE;AACb,0BAAY,UAAU,CAAC,EAAE,CAAC,CAAC;AAC3B,sCAAS,+BAAY,WAAW,EAAE,EAAE,EAAE,EAAF,EAAE,EAAE,CAAC,CAAA;GAC1C;AAED,SAAO,mBAAC,EAAE,EAAE;AACV,0BAAY,OAAO,CAAC,EAAE,CAAC,CAAC;AACxB,sCAAS,+BAAY,QAAQ,EAAE,EAAE,EAAE,EAAF,EAAE,EAAE,CAAC,CAAA;GACvC;CACF","file":"CallActionCreators.js","sourcesContent":["/*\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\n */\n\nimport { dispatch, dispatchAsync } from '../dispatcher/ActorAppDispatcher';\nimport { ActionTypes, CallTypes } from '../constants/ActorAppConstants';\nimport ActorClient from '../utils/ActorClient';\nimport CallStore from '../stores/CallStore';\n\nconst HIDE_MODAL_AFTER = 3000;\n\nexport default {\n  hide() {\n    dispatch(ActionTypes.CALL_MODAL_HIDE);\n  },\n\n  handleCall(event) {\n    const { id, type } = event;\n    switch (type) {\n      case CallTypes.STARTED:\n        ActorClient.bindCall(id, this.setCall);\n        dispatch(ActionTypes.CALL_MODAL_OPEN, { id });\n        break;\n      case CallTypes.ENDED:\n        setTimeout(() => {\n          ActorClient.unbindCall(id, this.setCall);\n          if (CallStore.isOpen()) dispatch(ActionTypes.CALL_MODAL_HIDE);\n        }, HIDE_MODAL_AFTER);\n        break;\n      default:\n    }\n  },\n\n  makeCall(uid) {\n    dispatchAsync(ActorClient.makeCall(uid), {\n      request: ActionTypes.CALL,\n      success: ActionTypes.CALL_SUCCESS,\n      failure: ActionTypes.CALL_ERROR\n    }, { uid });\n  },\n\n  setCall(call) {\n    dispatch(ActionTypes.CALL_CHANGED, { call });\n  },\n\n  answerCall(id) {\n    ActorClient.answerCall(id);\n    dispatch(ActionTypes.CALL_ANSWER, { id })\n  },\n\n  endCall(id) {\n    ActorClient.endCall(id);\n    dispatch(ActionTypes.CALL_END, { id })\n  }\n}\n"]}