{"version":3,"sources":["../../src/actions/CallActionCreators.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAIA;;AACA;;AACA;;;;AAEA;;;;;;;;;;IAEM;;;;;;;;+BACJ,uBAAO;AACL,sCAAS,+BAAY,eAAZ,CAAT,CADK;;;AADH,+BAKJ,iCAAW,OAAO;QACR,KAAa,MAAb,GADQ;QACJ,OAAS,MAAT,KADI;;AAEhB,YAAQ,IAAR;AACE,WAAK,6BAAU,OAAV;AACH,aAAK,WAAL,CAAiB,MAAjB,EAAyB,CACvB,sBAAY,QAAZ,CAAqB,EAArB,EAAyB,KAAK,OAAL,CADF,CAAzB,EADF;AAIE,0CAAS,+BAAY,eAAZ,EAA6B,EAAE,MAAF,EAAtC,EAJF;AAKE,cALF;AADF,WAOO,6BAAU,KAAV;AACH,aAAK,cAAL,CAAoB,MAApB,EADF;AAEE,0CAAS,+BAAY,eAAZ,CAAT,CAFF;AAGE,cAHF;AAPF,KAFgB;;;AALd,+BAqBJ,6BAAS,QAAQ;AACf,2CAAc,sBAAY,QAAZ,CAAqB,MAArB,CAAd,EAA4C;AAC1C,eAAS,+BAAY,IAAZ;AACT,eAAS,+BAAY,YAAZ;AACT,eAAS,+BAAY,UAAZ;KAHX,EAIG,EAAE,cAAF,EAJH,EADe;;;AArBb,+BA6BJ,uCAAc,QAAQ;AACpB,2CAAc,sBAAY,aAAZ,CAA0B,MAA1B,CAAd,EAAiD;AAC/C,eAAS,+BAAY,IAAZ;AACT,eAAS,+BAAY,YAAZ;AACT,eAAS,+BAAY,UAAZ;KAHX,EAIG,EAAE,cAAF,EAJH,EADoB;;;AA7BlB,+BAqCJ,2BAAQ,MAAM;AACZ,sCAAS,+BAAY,YAAZ,EAA0B,EAAE,UAAF,EAAnC,EADY;;;AArCV,+BAyCJ,iCAAW,QAAQ;AACjB,0BAAY,UAAZ,CAAuB,MAAvB,EADiB;AAEjB,sCAAS,+BAAY,WAAZ,EAAyB,EAAE,cAAF,EAAlC,EAFiB;;;AAzCf,+BA8CJ,2BAAQ,QAAQ;AACd,0BAAY,OAAZ,CAAoB,MAApB,EADc;AAEd,sCAAS,+BAAY,QAAZ,EAAsB,EAAE,cAAF,EAA/B,EAFc;;;AA9CZ,+BAmDJ,yCAAe,QAAQ;AACrB,0BAAY,cAAZ,CAA2B,MAA3B,EADqB;AAErB,sCAAS,+BAAY,gBAAZ,EAA8B,EAAE,cAAF,EAAvC,EAFqB;;;AAnDnB,+BAwDJ,2CAAiB;AACf,sCAAS,+BAAY,iBAAZ,CAAT,CADe;;;SAxDb;;;kBA6DS,IAAI,kBAAJ","file":"CallActionCreators.js","sourcesContent":["/*\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\n */\n\nimport { dispatch, dispatchAsync } from '../dispatcher/ActorAppDispatcher';\nimport { ActionTypes, CallTypes } from '../constants/ActorAppConstants';\nimport ActorClient from '../utils/ActorClient';\n\nimport ActionCreators from './ActionCreators';\n\nclass CallActionCreators extends ActionCreators {\n  hide() {\n    dispatch(ActionTypes.CALL_MODAL_HIDE);\n  }\n\n  handleCall(event) {\n    const { id, type } = event;\n    switch (type) {\n      case CallTypes.STARTED:\n        this.setBindings('call', [\n          ActorClient.bindCall(id, this.setCall)\n        ]);\n        dispatch(ActionTypes.CALL_MODAL_OPEN, { id });\n        break;\n      case CallTypes.ENDED:\n        this.removeBindings('call');\n        dispatch(ActionTypes.CALL_MODAL_HIDE)\n        break;\n    }\n  }\n\n  makeCall(peerId) {\n    dispatchAsync(ActorClient.makeCall(peerId), {\n      request: ActionTypes.CALL,\n      success: ActionTypes.CALL_SUCCESS,\n      failure: ActionTypes.CALL_ERROR\n    }, { peerId });\n  }\n\n  makeGroupCall(peerId) {\n    dispatchAsync(ActorClient.makeGroupCall(peerId), {\n      request: ActionTypes.CALL,\n      success: ActionTypes.CALL_SUCCESS,\n      failure: ActionTypes.CALL_ERROR\n    }, { peerId });\n  }\n\n  setCall(call) {\n    dispatch(ActionTypes.CALL_CHANGED, { call });\n  }\n\n  answerCall(callId) {\n    ActorClient.answerCall(callId);\n    dispatch(ActionTypes.CALL_ANSWER, { callId })\n  }\n\n  endCall(callId) {\n    ActorClient.endCall(callId);\n    dispatch(ActionTypes.CALL_END, { callId })\n  }\n\n  toggleCallMute(callId) {\n    ActorClient.toggleCallMute(callId);\n    dispatch(ActionTypes.CALL_MUTE_TOGGLE, { callId })\n  }\n\n  toggleFloating() {\n    dispatch(ActionTypes.CALL_FLOAT_TOGGLE)\n  }\n}\n\nexport default new CallActionCreators();\n"]}