{"version":3,"sources":["../../src/actions/MessageActionCreators.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAUA,IAAM,aAAa,GAAG,SAAhB,aAAa,CAAI,IAAI,EAAK;AAC9B,oBAAM,mBAAmB,CAAC,SAAS,CAAC,CAAC;AACrC,SAAO,kBAAM,cAAc,CAAC,IAAI,CAAC,CAAC;CACnC,CAAC;;kBAEa;AACb,iBAAe,2BAAC,IAAI,EAAE,OAAO,EAAE;AAC7B,0BAAY,cAAc,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;GAC3C;AAED,iBAAe,2BAAC,IAAI,EAAE,IAAI,EAAE;AAC1B,0BAAY,eAAe,CAAC,IAAI,EAAE,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC;AACvD,sCAAS,+BAAY,iBAAiB,EAAE,EAAE,IAAI,EAAJ,IAAI,EAAE,IAAI,EAAJ,IAAI,EAAE,CAAC,CAAC;GACzD;AAED,iBAAe,2BAAC,IAAI,EAAE,IAAI,EAAE;AAC1B,0BAAY,eAAe,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;AACxC,sCAAS,+BAAY,iBAAiB,EAAE,EAAE,IAAI,EAAJ,IAAI,EAAE,IAAI,EAAJ,IAAI,EAAE,CAAC,CAAC;GACzD;AAED,kBAAgB,4BAAC,IAAI,EAAE,KAAK,EAAE;AAC5B,0BAAY,gBAAgB,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;AAC1C,sCAAS,+BAAY,kBAAkB,EAAE,EAAE,IAAI,EAAJ,IAAI,EAAE,KAAK,EAAL,KAAK,EAAE,CAAC,CAAC;GAC3D;AAED,2BAAyB,qCAAC,IAAI,EAAE,KAAK,EAAE;AACrC,0BAAY,yBAAyB,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;GACpD;AAED,kBAAgB,4BAAC,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE;AACtC,0BAAY,gBAAgB,CAAC,IAAI,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;GACrD;AAED,eAAa,yBAAC,IAAI,EAAE,GAAG,EAAE;AACvB,0BAAY,aAAa,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;AACrC,sCAAS,+BAAY,cAAc,EAAE,EAAE,IAAI,EAAJ,IAAI,EAAE,GAAG,EAAH,GAAG,EAAE,CAAC,CAAC;GACrD;AAED,SAAO,mBAAC,IAAI,EAAE,GAAG,EAAE;AACjB,0BAAY,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;AAC/B,sCAAS,+BAAY,gBAAgB,EAAE,EAAE,IAAI,EAAJ,IAAI,EAAE,GAAG,EAAH,GAAG,EAAE,CAAC,CAAC;GACvD;AAED,YAAU,sBAAC,IAAI,EAAE,GAAG,EAAE;AACpB,0BAAY,UAAU,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;AAClC,sCAAS,+BAAY,mBAAmB,EAAE,EAAE,IAAI,EAAJ,IAAI,EAAE,GAAG,EAAH,GAAG,EAAE,CAAC,CAAC;GAC1D;AAED,aAAW,uBAAC,QAAQ,EAAE,OAAO,EAAE;AAC7B,sCAAS,+BAAY,gBAAgB,EAAE,EAAE,QAAQ,EAAR,QAAQ,EAAE,OAAO,EAAP,OAAO,EAAE,CAAC,CAAC;GAC/D;AAED,aAAW,uBAAC,eAAe,EAAE;AAC3B,sCAAS,+BAAY,qBAAqB,EAAE,EAAE,eAAe,EAAf,eAAe,EAAE,CAAC,CAAC;GAClE;CACF","file":"MessageActionCreators.js","sourcesContent":["/*\n * Copyright (C) 2015 Actor LLC. <https://actor.im>\n */\n\nimport { dispatch } from '../dispatcher/ActorAppDispatcher';\nimport { ActionTypes } from '../constants/ActorAppConstants';\n\nimport ActorClient from '../utils/ActorClient';\nimport { emoji } from '../utils/EmojiUtils';\n\nconst replaceColons = (text) => {\n  emoji.change_replace_mode('unified');\n  return emoji.replace_colons(text);\n};\n\nexport default {\n  setMessageShown(peer, message) {\n    ActorClient.onMessageShown(peer, message);\n  },\n\n  sendTextMessage(peer, text) {\n    ActorClient.sendTextMessage(peer, replaceColons(text));\n    dispatch(ActionTypes.MESSAGE_SEND_TEXT, { peer, text });\n  },\n\n  sendFileMessage(peer, file) {\n    ActorClient.sendFileMessage(peer, file);\n    dispatch(ActionTypes.MESSAGE_SEND_FILE, { peer, file });\n  },\n\n  sendPhotoMessage(peer, photo) {\n    ActorClient.sendPhotoMessage(peer, photo);\n    dispatch(ActionTypes.MESSAGE_SEND_PHOTO, { peer, photo });\n  },\n\n  sendClipboardPhotoMessage(peer, photo) {\n    ActorClient.sendClipboardPhotoMessage(peer, photo);\n  },\n\n  sendVoiceMessage(peer, duration, voice) {\n    ActorClient.sendVoiceMessage(peer, duration, voice);\n  },\n\n  deleteMessage(peer, rid) {\n    ActorClient.deleteMessage(peer, rid);\n    dispatch(ActionTypes.MESSAGE_DELETE, { peer, rid });\n  },\n\n  addLike(peer, rid) {\n    ActorClient.addLike(peer, rid);\n    dispatch(ActionTypes.MESSAGE_LIKE_ADD, { peer, rid });\n  },\n\n  removeLike(peer, rid) {\n    ActorClient.removeLike(peer, rid);\n    dispatch(ActionTypes.MESSAGE_LIKE_REMOVE, { peer, rid });\n  },\n\n  setMessages(messages, overlay) {\n    dispatch(ActionTypes.MESSAGES_CHANGED, { messages, overlay });\n  },\n\n  setSelected(selectedMesages) {\n    dispatch(ActionTypes.MESSAGES_SET_SELECTED, { selectedMesages });\n  }\n};\n"]}