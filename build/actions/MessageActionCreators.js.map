{"version":3,"sources":["../../src/actions/MessageActionCreators.js"],"names":[],"mappings":"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","file":"MessageActionCreators.js","sourcesContent":["/*\n * Copyright (C) 2015 Actor LLC. <https://actor.im>\n */\n\nimport { throttle } from 'lodash';\nimport { dispatch } from '../dispatcher/ActorAppDispatcher';\nimport { ActionTypes } from '../constants/ActorAppConstants';\n\nimport ComposeActionCreators from './ComposeActionCreators';\n\nimport ActorClient from '../utils/ActorClient';\nimport { prepareTextMessage, findLastEditableMessage } from '../utils/MessageUtils';\n\nimport MessageStore from '../stores/MessageStore';\n\nclass MessageActionCreators {\n  constructor() {\n    this.setMessages = throttle(this.setMessages, 10);\n  }\n\n  setMessageShown(peer, message) {\n    ActorClient.onMessageShown(peer, message);\n  }\n\n  sendTextMessage(peer, text) {\n    ActorClient.sendTextMessage(peer, prepareTextMessage(text));\n    dispatch(ActionTypes.MESSAGE_SEND_TEXT, { peer, text });\n  }\n\n  sendFileMessage(peer, file) {\n    ActorClient.sendFileMessage(peer, file);\n    dispatch(ActionTypes.MESSAGE_SEND_FILE, { peer, file });\n  }\n\n  sendPhotoMessage(peer, photo) {\n    ActorClient.sendPhotoMessage(peer, photo);\n    dispatch(ActionTypes.MESSAGE_SEND_PHOTO, { peer, photo });\n  }\n\n  // Deprecated\n  sendClipboardPhotoMessage(peer, photo) {\n    ActorClient.sendClipboardPhotoMessage(peer, photo);\n  }\n\n  sendVoiceMessage(peer, duration, voice) {\n    ActorClient.sendVoiceMessage(peer, duration, voice);\n    dispatch(ActionTypes.MESSAGE_SEND_VOICE, { peer, duration, voice });\n  }\n\n  deleteMessage(peer, rid) {\n    ActorClient.deleteMessage(peer, rid);\n    dispatch(ActionTypes.MESSAGE_DELETE, { peer, rid });\n  }\n\n  addLike(peer, rid) {\n    ActorClient.addLike(peer, rid);\n    dispatch(ActionTypes.MESSAGE_LIKE_ADD, { peer, rid });\n  }\n\n  removeLike(peer, rid) {\n    ActorClient.removeLike(peer, rid);\n    dispatch(ActionTypes.MESSAGE_LIKE_REMOVE, { peer, rid });\n  }\n\n  setMessages(messages, overlay, isLoaded, receiveDate, readDate, readByMeDate) {\n    dispatch(ActionTypes.MESSAGES_CHANGED, {\n      messages,\n      overlay,\n      isLoaded,\n      receiveDate,\n      readDate,\n      readByMeDate\n    });\n  }\n\n  toggleSelected(id) {\n    dispatch(ActionTypes.MESSAGES_TOGGLE_SELECTED, { id });\n  }\n\n  editLastMessage() {\n    const uid = ActorClient.getUid();\n    const { messages } = MessageStore.getState();\n    const message = findLastEditableMessage(messages, uid);\n\n    if (message) {\n      ComposeActionCreators.toggleAutoFocus(false);\n      dispatch(ActionTypes.MESSAGES_EDIT_START, { message });\n    }\n  }\n\n  endEdit(peer, message, text) {\n    if (!text) {\n      this.deleteMessage(peer, message.rid);\n    } else if (text !== message.content.text) {\n      ActorClient.editMessage(peer, message.rid, text).catch((e) => {\n        console.error(e);\n      });\n    }\n\n    dispatch(ActionTypes.MESSAGES_EDIT_END);\n    ComposeActionCreators.toggleAutoFocus(true);\n  }\n}\n\nexport default new MessageActionCreators();\n"]}