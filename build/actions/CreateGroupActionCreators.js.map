{"version":3,"sources":["../../src/actions/CreateGroupActionCreators.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAUA,IAAM,yBAAyB,GAAG;AAChC,MAAI,kBAAG;AACL,4BARK,QAAQ,EAQJ,mBALJ,WAAW,CAKK,uBAAuB,CAAC,CAAA;GAC9C;AAED,OAAK,mBAAG;AACN,4BAZK,QAAQ,EAYJ,mBATJ,WAAW,CASK,wBAAwB,CAAC,CAAC;GAChD;AAED,cAAY,wBAAC,IAAI,EAAE;AACjB,4BAhBK,QAAQ,EAgBJ,mBAbJ,WAAW,CAaK,qBAAqB,EAAE,EAAE,IAAI,EAAJ,IAAI,EAAE,CAAC,CAAC;GACvD;;;;;;AAMD,oBAAkB,8BAAC,eAAe,EAAE;AAClC,4BAxBK,QAAQ,EAwBJ,mBArBJ,WAAW,CAqBK,wBAAwB,EAAE,EAAE,eAAe,EAAf,eAAe,EAAE,CAAC,CAAC;GACrE;AAED,aAAW,uBAAC,KAAK,EAAE,MAAM,EAAE,SAAS,EAAE;AACpC,QAAM,WAAW,GAAG,SAAd,WAAW;aAAS,wBA5BX,aAAa,EA4BY,sBAAY,WAAW,CAAC,KAAK,EAAE,MAAM,EAAE,SAAS,CAAC,EAAE;AACzF,eAAO,EAAE,mBA1BN,WAAW,CA0BO,YAAY;AACjC,eAAO,EAAE,mBA3BN,WAAW,CA2BO,oBAAoB;AACzC,eAAO,EAAE,mBA5BN,WAAW,CA4BO,kBAAkB;OACxC,EAAE,EAAE,KAAK,EAAL,KAAK,EAAE,MAAM,EAAN,MAAM,EAAE,SAAS,EAAT,SAAS,EAAE,CAAC;KAAA,CAAC;;AAEjC,QAAM,gBAAgB,GAAG,SAAnB,gBAAgB,CAAI,IAAI;aAAK,+BAAqB,gBAAgB,CAAC,IAAI,CAAC;KAAA,CAAC;;AAE/E,eAAW,EAAE,CACV,IAAI,CAAC,gBAAgB,CAAC,CACtB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;GACpB;CACF,CAAC;;kBAEa,yBAAyB","file":"CreateGroupActionCreators.js","sourcesContent":["/*\n * Copyright (C) 2015 Actor LLC. <https://actor.im>\n */\n\nimport { dispatch, dispatchAsync } from '../dispatcher/ActorAppDispatcher';\nimport ActorClient from '../utils/ActorClient';\n\nimport { ActionTypes } from '../constants/ActorAppConstants';\nimport DialogActionCreators from './DialogActionCreators';\n\nconst CreateGroupActionCreators = {\n  open() {\n    dispatch(ActionTypes.GROUP_CREATE_MODAL_OPEN)\n  },\n\n  close() {\n    dispatch(ActionTypes.GROUP_CREATE_MODAL_CLOSE);\n  },\n\n  setGroupName(name) {\n    dispatch(ActionTypes.GROUP_CREATE_SET_NAME, { name });\n  },\n\n  //setGroupAvatar(avatar) {\n  //  dispatch(ActionTypes.GROUP_CREATE_SET_AVATAR, { avatar });\n  //},\n\n  setSelectedUserIds(selectedUserIds) {\n    dispatch(ActionTypes.GROUP_CREATE_SET_MEMBERS, { selectedUserIds });\n  },\n\n  createGroup(title, avatar, memberIds) {\n    const createGroup = () => dispatchAsync(ActorClient.createGroup(title, avatar, memberIds), {\n      request: ActionTypes.GROUP_CREATE,\n      success: ActionTypes.GROUP_CREATE_SUCCESS,\n      failure: ActionTypes.GROUP_CREATE_ERROR\n    }, { title, avatar, memberIds });\n\n    const openCreatedGroup = (peer) => DialogActionCreators.selectDialogPeer(peer);\n\n    createGroup()\n      .then(openCreatedGroup)\n      .then(this.close)\n  }\n};\n\nexport default CreateGroupActionCreators;\n"]}