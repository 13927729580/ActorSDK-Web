{"version":3,"sources":["../../src/actions/AttachmentsActionCreators.js"],"names":[],"mappings":";;;;AAIA;;AACA;;AACA;;;;AAEA;;;;AACA;;;;AAEA;;;;AACA;;;;;;AAEA,SAAS,eAAT,CAAwB,WAAxB,EAAqC,UAArC,EAAiD;AAC/C,MAAI,WAAW,WAAX,IAA0B,WAAW,aAAzC,EAAwD;AACtD,oCAAsB,oBAAtB,CAA2C,WAA3C,EAAwD,WAAW,IAAnE;AACD,GAFD,MAEO,IAAI,WAAW,OAAX,IAAsB,WAAW,aAArC,EAAoD;AACzD,oCAAsB,gBAAtB,CAAuC,WAAvC,EAAoD,WAAW,IAA/D;AACD,GAFM,MAEA;AACL,oCAAsB,eAAtB,CAAsC,WAAtC,EAAmD,WAAW,IAA9D;AACD;AACF,C;;;;kBAEc;AACb,MADa,gBACR,WADQ,EACK;AAChB,QAAM,wBAAwB,YAAY,GAAZ,CAAgB,UAAC,IAAD,EAAU;AACtD,UAAI,gBAAgB,IAAhB,IAAwB,KAA5B,EAAmC;AACjC,eAAO,0BAAW,IAAX,CAAP;AACD;;AAED,aAAO;AACL,iBAAS,KAAK,IAAL,CAAU,QAAV,CAAmB,OAAnB,CADJ;AAEL,qBAAa,KAAK,IAAL,KAAc,WAFtB;AAGL,uBAAe,IAHV;AAIL;AAJK,OAAP;AAMD,KAX6B,CAA9B;;AAaA,sCAAS,+BAAY,qBAArB,EAA4C,EAAE,aAAa,qBAAf,EAA5C;AACA,oCAAsB,eAAtB,CAAsC,KAAtC;AACD,GAjBY;AAmBb,MAnBa,kBAmBN;AACL,sCAAS,+BAAY,qBAArB;AACA,oCAAsB,eAAtB,CAAsC,IAAtC;AACD,GAtBY;AAwBb,kBAxBa,4BAwBI,KAxBJ,EAwBW;AACtB,sCAAS,+BAAY,iBAArB,EAAwC,EAAE,YAAF,EAAxC;AACD,GA1BY;AA4Bb,kBA5Ba,4BA4BI,aA5BJ,EA4BmB;AAC9B,sCAAS,+BAAY,iBAArB,EAAwC,EAAE,4BAAF,EAAxC;AACD,GA9BY;AAgCb,kBAhCa,8BAgCM;AACjB,sCAAS,+BAAY,iBAArB;AACA,QAAI,2BAAiB,iBAAjB,GAAqC,MAArC,KAAgD,CAApD,EAAuD;AACrD,WAAK,IAAL;AACD;AACF,GArCY;AAuCb,gBAvCa,4BAuCI;AACf,QAAM,cAAc,sBAAY,cAAZ,EAApB;AACA,QAAM,aAAa,2BAAiB,aAAjB,EAAnB;;AAEA,oBAAe,WAAf,EAA4B,UAA5B;;AAEA,sCAAS,+BAAY,eAArB;;AAEA,QAAI,2BAAiB,iBAAjB,GAAqC,MAArC,KAAgD,CAApD,EAAuD;AACrD,WAAK,IAAL;AACD;;AAED,oCAAsB,eAAtB,CAAsC,IAAtC;AACD,GApDY;AAsDb,SAtDa,mBAsDL,WAtDK,EAsDQ;AACnB,QAAM,cAAc,sBAAY,cAAZ,EAApB;;AAEA,gBAAY,OAAZ,CAAoB,UAAC,UAAD,EAAgB;AAClC,sBAAe,WAAf,EAA4B,UAA5B;AACD,KAFD;;AAIA,sCAAS,+BAAY,mBAArB,EAA0C,EAAE,wBAAF,EAA1C;AACA,SAAK,IAAL;AACA,oCAAsB,eAAtB,CAAsC,IAAtC;AACD;AAhEY,C","file":"AttachmentsActionCreators.js","sourcesContent":["/*\n * Copyright (C) 2015 Actor LLC. <https://actor.im>\n */\n\nimport { dispatch } from '../dispatcher/ActorAppDispatcher';\nimport { ActionTypes } from '../constants/ActorAppConstants';\nimport blobToFile from '../utils/blobToFile';\n\nimport MessageActionCreators from './MessageActionCreators';\nimport ComposeActionCreators from '../actions/ComposeActionCreators';\n\nimport DialogStore from '../stores/DialogStore';\nimport AttachmentsStore from '../stores/AttachmentsStore';\n\nfunction sendAttachment(currentPeer, attachment) {\n  if (attachment.isAnimation && attachment.sendAsPicture) {\n    MessageActionCreators.sendAnimationMessage(currentPeer, attachment.file);\n  } else if (attachment.isImage && attachment.sendAsPicture) {\n    MessageActionCreators.sendPhotoMessage(currentPeer, attachment.file);\n  } else {\n    MessageActionCreators.sendFileMessage(currentPeer, attachment.file);\n  }\n}\n\nexport default {\n  show(attachments) {\n    const normalizedAttachments = attachments.map((file) => {\n      if (file instanceof File == false) {\n        file = blobToFile(file);\n      }\n\n      return {\n        isImage: file.type.includes('image'),\n        isAnimation: file.type === 'image/gif',\n        sendAsPicture: true,\n        file\n      }\n    });\n\n    dispatch(ActionTypes.ATTACHMENT_MODAL_SHOW, { attachments: normalizedAttachments });\n    ComposeActionCreators.toggleAutoFocus(false);\n  },\n\n  hide() {\n    dispatch(ActionTypes.ATTACHMENT_MODAL_HIDE);\n    ComposeActionCreators.toggleAutoFocus(true);\n  },\n\n  selectAttachment(index) {\n    dispatch(ActionTypes.ATTACHMENT_SELECT, { index })\n  },\n\n  changeAttachment(sendAsPicture) {\n    dispatch(ActionTypes.ATTACHMENT_CHANGE, { sendAsPicture });\n  },\n\n  deleteAttachment() {\n    dispatch(ActionTypes.ATTACHMENT_DELETE);\n    if (AttachmentsStore.getAllAttachments().length === 0) {\n      this.hide();\n    }\n  },\n\n  sendAttachment() {\n    const currentPeer = DialogStore.getCurrentPeer();\n    const attachment = AttachmentsStore.getAttachment();\n\n    sendAttachment(currentPeer, attachment);\n\n    dispatch(ActionTypes.ATTACHMENT_SEND);\n\n    if (AttachmentsStore.getAllAttachments().length === 0) {\n      this.hide();\n    }\n\n    ComposeActionCreators.toggleAutoFocus(true);\n  },\n\n  sendAll(attachments) {\n    const currentPeer = DialogStore.getCurrentPeer();\n\n    attachments.forEach((attachment) => {\n      sendAttachment(currentPeer, attachment);\n    });\n\n    dispatch(ActionTypes.ATTACHMENT_SEND_ALL, { attachments });\n    this.hide();\n    ComposeActionCreators.toggleAutoFocus(true);\n  }\n}\n"]}