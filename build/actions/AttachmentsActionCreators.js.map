{"version":3,"sources":["../../src/actions/AttachmentsActionCreators.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;kBAee;AACb,MAAI,gBAAC,WAAW,EAAE;AAChB,sCAAS,+BAAY,qBAAqB,EAAE,EAAE,WAAW,EAAX,WAAW,EAAE,CAAC,CAAC;AAC7D,oCAAsB,eAAe,CAAC,KAAK,CAAC,CAAC;GAC9C;AAED,MAAI,kBAAG;AACL,sCAAS,+BAAY,qBAAqB,CAAC,CAAC;AAC5C,oCAAsB,eAAe,CAAC,IAAI,CAAC,CAAC;GAC7C;AAED,kBAAgB,4BAAC,KAAK,EAAE;AACtB,sCAAS,+BAAY,iBAAiB,EAAE,EAAE,KAAK,EAAL,KAAK,EAAE,CAAC,CAAA;GACnD;AAED,kBAAgB,4BAAC,aAAa,EAAE;AAC9B,sCAAS,+BAAY,iBAAiB,EAAE,EAAE,aAAa,EAAb,aAAa,EAAE,CAAC,CAAC;GAC5D;AAED,kBAAgB,8BAAG;AACjB,sCAAS,+BAAY,iBAAiB,CAAC,CAAC;GACzC;AAED,gBAAc,4BAAG;AACf,QAAM,WAAW,GAAG,sBAAY,cAAc,EAAE,CAAC;AACjD,QAAM,UAAU,GAAG,0BAAgB,aAAa,EAAE,CAAC;;AAEnD,QAAI,UAAU,CAAC,OAAO,IAAI,UAAU,CAAC,aAAa,EAAE;AAClD,sCAAsB,gBAAgB,CAAC,WAAW,EAAE,UAAU,CAAC,IAAI,CAAC,CAAC;KACtE,MAAM;AACL,sCAAsB,eAAe,CAAC,WAAW,EAAE,UAAU,CAAC,IAAI,CAAC,CAAC;KACrE;;AAED,sCAAS,+BAAY,eAAe,CAAC,CAAC;AACtC,oCAAsB,eAAe,CAAC,IAAI,CAAC,CAAC;GAC7C;;AAED,SAAO,EAAE,iBAAC,WAAW,EAAK;AACxB,QAAM,WAAW,GAAG,sBAAY,cAAc,EAAE,CAAC;;AAEjD,yBAAQ,WAAW,EAAE,UAAC,UAAU,EAAK;AACnC,UAAI,UAAU,CAAC,OAAO,IAAI,UAAU,CAAC,aAAa,EAAE;AAClD,wCAAsB,gBAAgB,CAAC,WAAW,EAAE,UAAU,CAAC,IAAI,CAAC,CAAC;OACtE,MAAM;AACL,wCAAsB,eAAe,CAAC,WAAW,EAAE,UAAU,CAAC,IAAI,CAAC,CAAC;OACrE;KACF,CAAC,CAAC;;AAEH,sCAAS,+BAAY,mBAAmB,EAAE,EAAE,WAAW,EAAX,WAAW,EAAE,CAAC,CAAC;AAC3D,oCAAsB,eAAe,CAAC,IAAI,CAAC,CAAC;GAC7C;CACF","file":"AttachmentsActionCreators.js","sourcesContent":["/*\n * Copyright (C) 2015 Actor LLC. <https://actor.im>\n */\n\nimport { forEach } from 'lodash';\n\nimport { dispatch } from '../dispatcher/ActorAppDispatcher';\nimport { ActionTypes } from '../constants/ActorAppConstants';\n\nimport MessageActionCreators from './MessageActionCreators';\nimport ComposeActionCreators from '../actions/ComposeActionCreators';\n\nimport DialogStore from '../stores/DialogStore';\nimport AttachmentStore from '../stores/AttachmentStore';\n\nexport default {\n  show(attachments) {\n    dispatch(ActionTypes.ATTACHMENT_MODAL_SHOW, { attachments });\n    ComposeActionCreators.toggleAutoFocus(false);\n  },\n\n  hide() {\n    dispatch(ActionTypes.ATTACHMENT_MODAL_HIDE);\n    ComposeActionCreators.toggleAutoFocus(true);\n  },\n\n  selectAttachment(index) {\n    dispatch(ActionTypes.ATTACHMENT_SELECT, { index })\n  },\n\n  changeAttachment(sendAsPicture) {\n    dispatch(ActionTypes.ATTACHMENT_CHANGE, { sendAsPicture });\n  },\n\n  deleteAttachment() {\n    dispatch(ActionTypes.ATTACHMENT_DELETE);\n  },\n\n  sendAttachment() {\n    const currentPeer = DialogStore.getCurrentPeer();\n    const attachment = AttachmentStore.getAttachment();\n\n    if (attachment.isImage && attachment.sendAsPicture) {\n      MessageActionCreators.sendPhotoMessage(currentPeer, attachment.file);\n    } else {\n      MessageActionCreators.sendFileMessage(currentPeer, attachment.file);\n    }\n\n    dispatch(ActionTypes.ATTACHMENT_SEND);\n    ComposeActionCreators.toggleAutoFocus(true);\n  },\n\n  sendAll: (attachments) => {\n    const currentPeer = DialogStore.getCurrentPeer();\n\n    forEach(attachments, (attachment) => {\n      if (attachment.isImage && attachment.sendAsPicture) {\n        MessageActionCreators.sendPhotoMessage(currentPeer, attachment.file);\n      } else {\n        MessageActionCreators.sendFileMessage(currentPeer, attachment.file);\n      }\n    });\n\n    dispatch(ActionTypes.ATTACHMENT_SEND_ALL, { attachments });\n    ComposeActionCreators.toggleAutoFocus(true);\n  }\n}\n"]}