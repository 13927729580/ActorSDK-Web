{"version":3,"sources":["../../src/actions/AttachmentsActionCreators.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kBAce;AACb,MAAI,EAAE,cAAC,WAAW;WAAK,wBAThB,QAAQ,EASiB,mBARzB,WAAW,CAQ0B,qBAAqB,EAAE,EAAE,WAAW,EAAX,WAAW,EAAE,CAAC;GAAA;AACnF,MAAI,EAAE;WAAM,wBAVL,QAAQ,EAUM,mBATd,WAAW,CASe,qBAAqB,CAAC;GAAA;;AAEvD,kBAAgB,EAAE,0BAAC,KAAK;WAAK,wBAZtB,QAAQ,EAYuB,mBAX/B,WAAW,CAWgC,iBAAiB,EAAE,EAAE,KAAK,EAAL,KAAK,EAAE,CAAC;GAAA;AAC/E,kBAAgB,EAAE,0BAAC,aAAa;WAAK,wBAb9B,QAAQ,EAa+B,mBAZvC,WAAW,CAYwC,iBAAiB,EAAE,EAAE,aAAa,EAAb,aAAa,EAAE,CAAC;GAAA;AAC/F,kBAAgB,EAAE;WAAM,wBAdjB,QAAQ,EAckB,mBAb1B,WAAW,CAa2B,iBAAiB,CAAC;GAAA;;AAE/D,gBAAc,EAAE,0BAAM;AACpB,QAAM,WAAW,GAAG,sBAAY,qBAAqB,EAAE,CAAC;AACxD,QAAM,UAAU,GAAG,0BAAgB,aAAa,EAAE,CAAC;;AAEnD,QAAI,UAAU,CAAC,OAAO,IAAI,UAAU,CAAC,aAAa,EAAE;AAClD,sCAAsB,gBAAgB,CAAC,WAAW,EAAE,UAAU,CAAC,IAAI,CAAC,CAAC;KACtE,MAAM;AACL,sCAAsB,eAAe,CAAC,WAAW,EAAE,UAAU,CAAC,IAAI,CAAC,CAAC;KACrE;;AAED,4BA1BK,QAAQ,EA0BJ,mBAzBJ,WAAW,CAyBK,eAAe,CAAC,CAAC;GACvC;;AAED,SAAO,EAAE,iBAAC,WAAW,EAAK;AACxB,QAAM,WAAW,GAAG,sBAAY,qBAAqB,EAAE,CAAC;;AAExD,gBAlCK,OAAO,EAkCJ,WAAW,EAAE,UAAC,UAAU,EAAK;AACnC,UAAI,UAAU,CAAC,OAAO,IAAI,UAAU,CAAC,aAAa,EAAE;AAClD,wCAAsB,gBAAgB,CAAC,WAAW,EAAE,UAAU,CAAC,IAAI,CAAC,CAAC;OACtE,MAAM;AACL,wCAAsB,eAAe,CAAC,WAAW,EAAE,UAAU,CAAC,IAAI,CAAC,CAAC;OACrE;KACF,CAAC,CAAC;AACH,4BAvCK,QAAQ,EAuCJ,mBAtCJ,WAAW,CAsCK,mBAAmB,EAAE,EAAE,WAAW,EAAX,WAAW,EAAE,CAAC,CAAC;GAC5D;CACF","file":"AttachmentsActionCreators.js","sourcesContent":["/*\n * Copyright (C) 2015 Actor LLC. <https://actor.im>\n */\n\nimport { forEach } from 'lodash';\n\nimport { dispatch } from '../dispatcher/ActorAppDispatcher';\nimport { ActionTypes } from '../constants/ActorAppConstants';\n\nimport MessageActionCreators from './MessageActionCreators';\n\nimport DialogStore from '../stores/DialogStore';\nimport AttachmentStore from '../stores/AttachmentStore';\n\nexport default {\n  show: (attachments) => dispatch(ActionTypes.ATTACHMENT_MODAL_SHOW, { attachments }),\n  hide: () => dispatch(ActionTypes.ATTACHMENT_MODAL_HIDE),\n\n  selectAttachment: (index) => dispatch(ActionTypes.ATTACHMENT_SELECT, { index }),\n  changeAttachment: (sendAsPicture) => dispatch(ActionTypes.ATTACHMENT_CHANGE, { sendAsPicture }),\n  deleteAttachment: () => dispatch(ActionTypes.ATTACHMENT_DELETE),\n\n  sendAttachment: () => {\n    const currentPeer = DialogStore.getSelectedDialogPeer();\n    const attachment = AttachmentStore.getAttachment();\n\n    if (attachment.isImage && attachment.sendAsPicture) {\n      MessageActionCreators.sendPhotoMessage(currentPeer, attachment.file);\n    } else {\n      MessageActionCreators.sendFileMessage(currentPeer, attachment.file);\n    }\n\n    dispatch(ActionTypes.ATTACHMENT_SEND);\n  },\n\n  sendAll: (attachments) => {\n    const currentPeer = DialogStore.getSelectedDialogPeer();\n\n    forEach(attachments, (attachment) => {\n      if (attachment.isImage && attachment.sendAsPicture) {\n        MessageActionCreators.sendPhotoMessage(currentPeer, attachment.file);\n      } else {\n        MessageActionCreators.sendFileMessage(currentPeer, attachment.file);\n      }\n    });\n    dispatch(ActionTypes.ATTACHMENT_SEND_ALL, { attachments });\n  }\n}\n"]}