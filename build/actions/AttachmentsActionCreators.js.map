{"version":3,"sources":["../../src/actions/AttachmentsActionCreators.js"],"names":[],"mappings":";;;;AAIA;;AAEA;;AACA;;AAEA;;;;AACA;;;;AAEA;;;;AACA;;;;;;kBAEe;AACb,MADa,gBACR,WADQ,EACK;AAChB,sCAAS,+BAAY,qBAArB,EAA4C,EAAE,wBAAF,EAA5C;AACA,oCAAsB,eAAtB,CAAsC,KAAtC;AACD,GAJY;AAMb,MANa,kBAMN;AACL,sCAAS,+BAAY,qBAArB;AACA,oCAAsB,eAAtB,CAAsC,IAAtC;AACD,GATY;AAWb,kBAXa,4BAWI,KAXJ,EAWW;AACtB,sCAAS,+BAAY,iBAArB,EAAwC,EAAE,YAAF,EAAxC;AACD,GAbY;AAeb,kBAfa,4BAeI,aAfJ,EAemB;AAC9B,sCAAS,+BAAY,iBAArB,EAAwC,EAAE,4BAAF,EAAxC;AACD,GAjBY;AAmBb,kBAnBa,8BAmBM;AACjB,sCAAS,+BAAY,iBAArB;AACD,GArBY;AAuBb,gBAvBa,4BAuBI;AACf,QAAM,cAAc,sBAAY,cAAZ,EAApB;AACA,QAAM,aAAa,0BAAgB,aAAhB,EAAnB;;AAEA,QAAI,WAAW,OAAX,IAAsB,WAAW,aAArC,EAAoD;AAClD,sCAAsB,gBAAtB,CAAuC,WAAvC,EAAoD,WAAW,IAA/D;AACD,KAFD,MAEO;AACL,sCAAsB,eAAtB,CAAsC,WAAtC,EAAmD,WAAW,IAA9D;AACD;;AAED,sCAAS,+BAAY,eAArB;AACA,oCAAsB,eAAtB,CAAsC,IAAtC;AACD,GAnCY;;;AAqCb,WAAS,iBAAC,WAAD,EAAiB;AACxB,QAAM,cAAc,sBAAY,cAAZ,EAApB;;AAEA,yBAAQ,WAAR,EAAqB,UAAC,UAAD,EAAgB;AACnC,UAAI,WAAW,OAAX,IAAsB,WAAW,aAArC,EAAoD;AAClD,wCAAsB,gBAAtB,CAAuC,WAAvC,EAAoD,WAAW,IAA/D;AACD,OAFD,MAEO;AACL,wCAAsB,eAAtB,CAAsC,WAAtC,EAAmD,WAAW,IAA9D;AACD;AACF,KAND;;AAQA,sCAAS,+BAAY,mBAArB,EAA0C,EAAE,wBAAF,EAA1C;AACA,oCAAsB,eAAtB,CAAsC,IAAtC;AACD;AAlDY,C","file":"AttachmentsActionCreators.js","sourcesContent":["/*\n * Copyright (C) 2015 Actor LLC. <https://actor.im>\n */\n\nimport { forEach } from 'lodash';\n\nimport { dispatch } from '../dispatcher/ActorAppDispatcher';\nimport { ActionTypes } from '../constants/ActorAppConstants';\n\nimport MessageActionCreators from './MessageActionCreators';\nimport ComposeActionCreators from '../actions/ComposeActionCreators';\n\nimport DialogStore from '../stores/DialogStore';\nimport AttachmentStore from '../stores/AttachmentStore';\n\nexport default {\n  show(attachments) {\n    dispatch(ActionTypes.ATTACHMENT_MODAL_SHOW, { attachments });\n    ComposeActionCreators.toggleAutoFocus(false);\n  },\n\n  hide() {\n    dispatch(ActionTypes.ATTACHMENT_MODAL_HIDE);\n    ComposeActionCreators.toggleAutoFocus(true);\n  },\n\n  selectAttachment(index) {\n    dispatch(ActionTypes.ATTACHMENT_SELECT, { index })\n  },\n\n  changeAttachment(sendAsPicture) {\n    dispatch(ActionTypes.ATTACHMENT_CHANGE, { sendAsPicture });\n  },\n\n  deleteAttachment() {\n    dispatch(ActionTypes.ATTACHMENT_DELETE);\n  },\n\n  sendAttachment() {\n    const currentPeer = DialogStore.getCurrentPeer();\n    const attachment = AttachmentStore.getAttachment();\n\n    if (attachment.isImage && attachment.sendAsPicture) {\n      MessageActionCreators.sendPhotoMessage(currentPeer, attachment.file);\n    } else {\n      MessageActionCreators.sendFileMessage(currentPeer, attachment.file);\n    }\n\n    dispatch(ActionTypes.ATTACHMENT_SEND);\n    ComposeActionCreators.toggleAutoFocus(true);\n  },\n\n  sendAll: (attachments) => {\n    const currentPeer = DialogStore.getCurrentPeer();\n\n    forEach(attachments, (attachment) => {\n      if (attachment.isImage && attachment.sendAsPicture) {\n        MessageActionCreators.sendPhotoMessage(currentPeer, attachment.file);\n      } else {\n        MessageActionCreators.sendFileMessage(currentPeer, attachment.file);\n      }\n    });\n\n    dispatch(ActionTypes.ATTACHMENT_SEND_ALL, { attachments });\n    ComposeActionCreators.toggleAutoFocus(true);\n  }\n}\n"]}