{"version":3,"sources":["../../src/actions/AttachmentsActionCreators.js"],"names":[],"mappings":";;;;AAIA;;AACA;;AACA;;;;AAEA;;;;AACA;;;;AAEA;;;;AACA;;;;;;kBAEe;AACb,MADa,gBACR,WADQ,EACK;AAChB,QAAM,wBAAwB,YAAY,GAAZ,CAAgB,UAAC,IAAD,EAAU;AACtD,UAAI,gBAAgB,IAAhB,IAAwB,KAA5B,EAAmC;AACjC,eAAO,0BAAW,IAAX,CAAP;AACD;;AAED,aAAO;AACL,iBAAS,KAAK,IAAL,CAAU,QAAV,CAAmB,OAAnB,KAA+B,KAAK,IAAL,KAAc,WADjD;AAEL,uBAAe,IAFV;AAGL;AAHK,OAAP;AAKD,KAV6B,CAA9B;;AAYA,sCAAS,+BAAY,qBAArB,EAA4C,EAAE,aAAa,qBAAf,EAA5C;AACA,oCAAsB,eAAtB,CAAsC,KAAtC;AACD,GAhBY;AAkBb,MAlBa,kBAkBN;AACL,sCAAS,+BAAY,qBAArB;AACA,oCAAsB,eAAtB,CAAsC,IAAtC;AACD,GArBY;AAuBb,kBAvBa,4BAuBI,KAvBJ,EAuBW;AACtB,sCAAS,+BAAY,iBAArB,EAAwC,EAAE,YAAF,EAAxC;AACD,GAzBY;AA2Bb,kBA3Ba,4BA2BI,aA3BJ,EA2BmB;AAC9B,sCAAS,+BAAY,iBAArB,EAAwC,EAAE,4BAAF,EAAxC;AACD,GA7BY;AA+Bb,kBA/Ba,8BA+BM;AACjB,sCAAS,+BAAY,iBAArB;AACA,QAAI,2BAAiB,iBAAjB,GAAqC,MAArC,KAAgD,CAApD,EAAuD;AACrD,WAAK,IAAL;AACD;AACF,GApCY;AAsCb,gBAtCa,4BAsCI;AACf,QAAM,cAAc,sBAAY,cAAZ,EAApB;AACA,QAAM,aAAa,2BAAiB,aAAjB,EAAnB;;AAEA,QAAI,WAAW,OAAX,IAAsB,WAAW,aAArC,EAAoD;AAClD,sCAAsB,gBAAtB,CAAuC,WAAvC,EAAoD,WAAW,IAA/D;AACD,KAFD,MAEO;AACL,sCAAsB,eAAtB,CAAsC,WAAtC,EAAmD,WAAW,IAA9D;AACD;;AAED,sCAAS,+BAAY,eAArB;;AAEA,QAAI,2BAAiB,iBAAjB,GAAqC,MAArC,KAAgD,CAApD,EAAuD;AACrD,WAAK,IAAL;AACD;;AAED,oCAAsB,eAAtB,CAAsC,IAAtC;AACD,GAvDY;AAyDb,SAzDa,mBAyDL,WAzDK,EAyDQ;AACnB,QAAM,cAAc,sBAAY,cAAZ,EAApB;;AAEA,gBAAY,OAAZ,CAAoB,UAAC,UAAD,EAAgB;AAClC,UAAI,WAAW,OAAX,IAAsB,WAAW,aAArC,EAAoD;AAClD,wCAAsB,gBAAtB,CAAuC,WAAvC,EAAoD,WAAW,IAA/D;AACD,OAFD,MAEO;AACL,wCAAsB,eAAtB,CAAsC,WAAtC,EAAmD,WAAW,IAA9D;AACD;AACF,KAND;;AAQA,sCAAS,+BAAY,mBAArB,EAA0C,EAAE,wBAAF,EAA1C;AACA,SAAK,IAAL;AACA,oCAAsB,eAAtB,CAAsC,IAAtC;AACD;AAvEY,C","file":"AttachmentsActionCreators.js","sourcesContent":["/*\n * Copyright (C) 2015 Actor LLC. <https://actor.im>\n */\n\nimport { dispatch } from '../dispatcher/ActorAppDispatcher';\nimport { ActionTypes } from '../constants/ActorAppConstants';\nimport blobToFile from '../utils/blobToFile';\n\nimport MessageActionCreators from './MessageActionCreators';\nimport ComposeActionCreators from '../actions/ComposeActionCreators';\n\nimport DialogStore from '../stores/DialogStore';\nimport AttachmentsStore from '../stores/AttachmentsStore';\n\nexport default {\n  show(attachments) {\n    const normalizedAttachments = attachments.map((file) => {\n      if (file instanceof File == false) {\n        file = blobToFile(file);\n      }\n\n      return {\n        isImage: file.type.includes('image') && file.type !== 'image/gif',\n        sendAsPicture: true,\n        file\n      }\n    });\n\n    dispatch(ActionTypes.ATTACHMENT_MODAL_SHOW, { attachments: normalizedAttachments });\n    ComposeActionCreators.toggleAutoFocus(false);\n  },\n\n  hide() {\n    dispatch(ActionTypes.ATTACHMENT_MODAL_HIDE);\n    ComposeActionCreators.toggleAutoFocus(true);\n  },\n\n  selectAttachment(index) {\n    dispatch(ActionTypes.ATTACHMENT_SELECT, { index })\n  },\n\n  changeAttachment(sendAsPicture) {\n    dispatch(ActionTypes.ATTACHMENT_CHANGE, { sendAsPicture });\n  },\n\n  deleteAttachment() {\n    dispatch(ActionTypes.ATTACHMENT_DELETE);\n    if (AttachmentsStore.getAllAttachments().length === 0) {\n      this.hide();\n    }\n  },\n\n  sendAttachment() {\n    const currentPeer = DialogStore.getCurrentPeer();\n    const attachment = AttachmentsStore.getAttachment();\n\n    if (attachment.isImage && attachment.sendAsPicture) {\n      MessageActionCreators.sendPhotoMessage(currentPeer, attachment.file);\n    } else {\n      MessageActionCreators.sendFileMessage(currentPeer, attachment.file);\n    }\n\n    dispatch(ActionTypes.ATTACHMENT_SEND);\n\n    if (AttachmentsStore.getAllAttachments().length === 0) {\n      this.hide();\n    }\n\n    ComposeActionCreators.toggleAutoFocus(true);\n  },\n\n  sendAll(attachments) {\n    const currentPeer = DialogStore.getCurrentPeer();\n\n    attachments.forEach((attachment) => {\n      if (attachment.isImage && attachment.sendAsPicture) {\n        MessageActionCreators.sendPhotoMessage(currentPeer, attachment.file);\n      } else {\n        MessageActionCreators.sendFileMessage(currentPeer, attachment.file);\n      }\n    });\n\n    dispatch(ActionTypes.ATTACHMENT_SEND_ALL, { attachments });\n    this.hide();\n    ComposeActionCreators.toggleAutoFocus(true);\n  }\n}\n"]}