{"version":3,"sources":["../../src/actions/DialogActionCreators.js"],"names":[],"mappings":"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","file":"DialogActionCreators.js","sourcesContent":["/*\n * Copyright (C) 2015 Actor LLC. <https://actor.im>\n */\n\nimport { dispatch, dispatchAsync } from '../dispatcher/ActorAppDispatcher';\nimport { ActionTypes, PeerTypes } from '../constants/ActorAppConstants';\nimport history from '../utils/history';\nimport ActorClient from '../utils/ActorClient';\nimport PeerUtils from '../utils/PeerUtils';\n\nimport ActionCreators from './ActionCreators';\nimport MessageActionCreators from './MessageActionCreators';\nimport TypingActionCreators from './TypingActionCreators';\nimport DialogInfoActionCreators from './DialogInfoActionCreators';\nimport OnlineActionCreators from './OnlineActionCreators';\nimport GroupProfileActionCreators from './GroupProfileActionCreators';\nimport DraftActionCreators from './DraftActionCreators';\n\nimport DialogStore from '../stores/DialogStore';\nimport MessageStore from '../stores/MessageStore';\n\nclass DialogActionCreators extends ActionCreators {\n  setDialogs(dialogs) {\n    dispatch(ActionTypes.DIALOGS_CHANGED, { dialogs });\n  }\n\n  selectDialogPeerUser(uid) {\n    if (uid === ActorClient.getUid()) {\n      console.warn('You can\\'t chat with yourself');\n    } else {\n      history.push(`/im/${PeerUtils.peerToString(ActorClient.getUserPeer(uid))}`);\n    }\n  }\n\n  selectDialogPeer(peer) {\n    const currentPeer = DialogStore.getCurrentPeer();\n\n    if (currentPeer) {\n      DraftActionCreators.saveDraft(currentPeer);\n      dispatch(ActionTypes.UNBIND_DIALOG_PEER, { peer: currentPeer });\n      ActorClient.onConversationClosed(currentPeer);\n\n      this.removeBindings('peer');\n    }\n\n    if (!peer) {\n      return;\n    }\n\n    DraftActionCreators.loadDraft(peer);\n    dispatch(ActionTypes.BIND_DIALOG_PEER, { peer });\n    ActorClient.onConversationOpen(peer);\n\n    const bindings = [\n      ActorClient.bindMessages(peer, MessageActionCreators.setMessages),\n      ActorClient.bindTyping(peer, TypingActionCreators.setTyping)\n    ];\n\n    switch (peer.type) {\n      case PeerTypes.USER:\n        bindings.push(\n          ActorClient.bindUser(peer.id, DialogInfoActionCreators.setDialogInfo),\n          ActorClient.bindUserOnline(peer.id, OnlineActionCreators.setUserOnline)\n        );\n        break;\n      case PeerTypes.GROUP:\n        bindings.push(\n          ActorClient.bindGroup(peer.id, DialogInfoActionCreators.setDialogInfo),\n          ActorClient.bindGroupOnline(peer.id, OnlineActionCreators.setGroupOnline)\n        );\n        GroupProfileActionCreators.getIntegrationToken(peer.id);\n        break;\n    }\n\n    this.setBindings('peer', bindings);\n  }\n\n  onDialogsEnd() {\n    ActorClient.onDialogsEnd();\n  }\n\n  onChatEnd(peer) {\n    ActorClient.onChatEnd(peer);\n  }\n\n  leaveGroup(gid) {\n    dispatchAsync(ActorClient.leaveGroup(gid), {\n      request: ActionTypes.GROUP_LEAVE,\n      success: ActionTypes.GROUP_LEAVE_SUCCESS,\n      failure: ActionTypes.GROUP_LEAVE_ERROR\n    }, { gid });\n  }\n\n  deleteChat(peer) {\n    const gid = peer.id;\n    const leaveGroup = () => dispatchAsync(ActorClient.leaveGroup(gid), {\n      request: ActionTypes.GROUP_LEAVE,\n      success: ActionTypes.GROUP_LEAVE_SUCCESS,\n      failure: ActionTypes.GROUP_LEAVE_ERROR\n    }, { gid });\n    const deleteChat = () => dispatchAsync(ActorClient.deleteChat(peer), {\n      request: ActionTypes.GROUP_DELETE,\n      success: ActionTypes.GROUP_DELETE_SUCCESS,\n      failure: ActionTypes.GROUP_DELETE_ERROR\n    }, { peer });\n\n    switch (peer.type) {\n      case PeerTypes.USER:\n        deleteChat();\n        break;\n      case PeerTypes.GROUP:\n        leaveGroup()\n          .then(deleteChat);\n        break;\n      default:\n    }\n  }\n\n  clearChat(peer) {\n    dispatchAsync(ActorClient.clearChat(peer), {\n      request: ActionTypes.GROUP_CLEAR,\n      success: ActionTypes.GROUP_CLEAR_SUCCESS,\n      failure: ActionTypes.GROUP_CLEAR_ERROR\n    }, { peer });\n  }\n\n  hideChat(peer) {\n    dispatchAsync(ActorClient.hideChat(peer), {\n      request: ActionTypes.GROUP_HIDE,\n      success: ActionTypes.GROUP_HIDE_SUCCESS,\n      failure: ActionTypes.GROUP_HIDE_ERROR\n    }, { peer });\n  }\n\n  loadMoreMessages(peer) {\n    dispatch(ActionTypes.MESSAGES_LOADING_MORE);\n    if (MessageStore.isAllRendered()) {\n      this.onChatEnd(peer);\n    } else {\n      dispatch(ActionTypes.MESSAGES_LOAD_MORE);\n    }\n  }\n}\n\nexport default new DialogActionCreators();\n"]}