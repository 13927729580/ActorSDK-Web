{"version":3,"sources":["../../src/actions/DialogActionCreators.js"],"names":[],"mappings":"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","file":"DialogActionCreators.js","sourcesContent":["/*\n * Copyright (C) 2015 Actor LLC. <https://actor.im>\n */\n\nimport { dispatch, dispatchAsync } from '../dispatcher/ActorAppDispatcher';\nimport { ActionTypes, PeerTypes } from '../constants/ActorAppConstants';\nimport ActorClient from '../utils/ActorClient';\nimport PeerUtils from '../utils/PeerUtils';\nimport RouterContainer from '../utils/RouterContainer';\n\nimport MessageActionCreators from './MessageActionCreators';\nimport GroupProfileActionCreators from './GroupProfileActionCreators';\nimport TypingActionCreators from './TypingActionCreators';\nimport DialogInfoActionCreators from './DialogInfoActionCreators';\n\nimport DialogStore from '../stores/DialogStore';\n\nconst DialogActionCreators = {\n  setDialogs(dialogs) {\n    dispatch(ActionTypes.DIALOGS_CHANGED, { dialogs });\n  },\n\n  selectDialogPeer(peer) {\n    const router = RouterContainer.get();\n    const currentPeer = DialogStore.getCurrentPeer();\n\n    // Unbind from previous peer\n    if (currentPeer !== null) {\n      this.onConversationClosed(currentPeer);\n      ActorClient.unbindChat(currentPeer, MessageActionCreators.setMessages);\n      ActorClient.unbindTyping(currentPeer, TypingActionCreators.setTyping);\n\n      switch (currentPeer.type) {\n        case PeerTypes.USER:\n          ActorClient.unbindUser(currentPeer.id, DialogInfoActionCreators.setDialogInfo);\n          break;\n        case PeerTypes.GROUP:\n          ActorClient.unbindGroup(currentPeer.id, DialogInfoActionCreators.setDialogInfo);\n          break;\n        default:\n      }\n    }\n\n    dispatch(ActionTypes.SELECT_DIALOG_PEER, { peer });\n\n    this.onConversationOpen(peer);\n    ActorClient.bindChat(peer, MessageActionCreators.setMessages);\n    ActorClient.bindTyping(peer, TypingActionCreators.setTyping);\n    switch(peer.type) {\n      case PeerTypes.USER:\n        ActorClient.bindUser(peer.id, DialogInfoActionCreators.setDialogInfo);\n        break;\n      case PeerTypes.GROUP:\n        ActorClient.bindGroup(peer.id, DialogInfoActionCreators.setDialogInfo);\n        GroupProfileActionCreators.getIntegrationToken(peer.id);\n        break;\n      default:\n    }\n\n    router.transitionTo('main', {id: PeerUtils.peerToString(peer)});\n  },\n\n  selectDialogPeerUser(uid) {\n    if (uid === ActorClient.getUid()) {\n      console.warn('You can\\'t chat with yourself');\n    } else {\n      this.selectDialogPeer(ActorClient.getUserPeer(uid));\n    }\n  },\n\n  onConversationOpen(peer) {\n    ActorClient.onConversationOpen(peer);\n  },\n\n  onConversationClosed(peer) {\n    ActorClient.onConversationClosed(peer);\n  },\n\n  onDialogsEnd() {\n    ActorClient.onDialogsEnd();\n  },\n\n  onChatEnd(peer) {\n    ActorClient.onChatEnd(peer);\n  },\n\n  leaveGroup(gid) {\n    dispatchAsync(ActorClient.leaveGroup(gid), {\n      request: ActionTypes.GROUP_LEAVE,\n      success: ActionTypes.GROUP_LEAVE_SUCCESS,\n      failure: ActionTypes.GROUP_LEAVE_ERROR\n    }, { gid });\n  },\n\n  deleteChat(peer) {\n    const gid = peer.id;\n    const leaveGroup = () => dispatchAsync(ActorClient.leaveGroup(gid), {\n      request: ActionTypes.GROUP_LEAVE,\n      success: ActionTypes.GROUP_LEAVE_SUCCESS,\n      failure: ActionTypes.GROUP_LEAVE_ERROR\n    }, { gid });\n    const deleteChat = () => dispatchAsync(ActorClient.deleteChat(peer), {\n      request: ActionTypes.GROUP_DELETE,\n      success: ActionTypes.GROUP_DELETE_SUCCESS,\n      failure: ActionTypes.GROUP_DELETE_ERROR\n    }, { peer });\n\n    switch (peer.type) {\n      case PeerTypes.USER:\n        deleteChat();\n        break;\n      case PeerTypes.GROUP:\n        leaveGroup()\n          .then(deleteChat);\n        break;\n      default:\n    }\n  },\n\n  clearChat(peer) {\n    dispatchAsync(ActorClient.clearChat(peer), {\n      request: ActionTypes.GROUP_CLEAR,\n      success: ActionTypes.GROUP_CLEAR_SUCCESS,\n      failure: ActionTypes.GROUP_CLEAR_ERROR\n    }, { peer });\n  },\n\n  hideChat(peer) {\n    dispatchAsync(ActorClient.hideChat(peer), {\n      request: ActionTypes.GROUP_HIDE,\n      success: ActionTypes.GROUP_HIDE_SUCCESS,\n      failure: ActionTypes.GROUP_HIDE_ERROR\n    }, { peer });\n  }\n};\n\nexport default DialogActionCreators;\n"]}