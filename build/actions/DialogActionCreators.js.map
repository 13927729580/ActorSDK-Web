{"version":3,"sources":["../../src/actions/DialogActionCreators.js"],"names":[],"mappings":"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","file":"DialogActionCreators.js","sourcesContent":["/*\n * Copyright (C) 2015 Actor LLC. <https://actor.im>\n */\n\nimport { dispatch, dispatchAsync } from '../dispatcher/ActorAppDispatcher';\nimport { ActionTypes, PeerTypes } from '../constants/ActorAppConstants';\nimport history from '../utils/history';\nimport ActorClient from '../utils/ActorClient';\nimport PeerUtils from '../utils/PeerUtils';\n\nimport ActionCreators from './ActionCreators';\nimport MessageActionCreators from './MessageActionCreators';\nimport TypingActionCreators from './TypingActionCreators';\nimport DialogInfoActionCreators from './DialogInfoActionCreators';\nimport OnlineActionCreators from './OnlineActionCreators';\nimport GroupProfileActionCreators from './GroupProfileActionCreators';\nimport DraftActionCreators from './DraftActionCreators';\n\nimport DialogStore from '../stores/DialogStore';\nimport MessageStore from '../stores/MessageStore';\n\nclass DialogActionCreators extends ActionCreators {\n  setDialogs(dialogs) {\n    dispatch(ActionTypes.DIALOGS_CHANGED, { dialogs });\n  }\n\n  selectDialogPeerUser(uid) {\n    if (uid === ActorClient.getUid()) {\n      console.warn('You can\\'t chat with yourself');\n    } else {\n      history.push(`/im/${PeerUtils.peerToString(ActorClient.getUserPeer(uid))}`);\n    }\n  }\n\n  selectDialogPeer(peer) {\n    const currentPeer = DialogStore.getCurrentPeer();\n\n    if (currentPeer) {\n      DraftActionCreators.saveDraft(currentPeer);\n      dispatch(ActionTypes.UNBIND_DIALOG_PEER, { peer: currentPeer });\n      ActorClient.onConversationClosed(currentPeer);\n\n      this.removeBindings('peer');\n    }\n\n    if (!peer) {\n      return;\n    }\n\n    DraftActionCreators.loadDraft(peer);\n    dispatch(ActionTypes.BIND_DIALOG_PEER, { peer });\n    ActorClient.onConversationOpen(peer);\n\n    const bindings = [\n      ActorClient.bindMessages(peer, MessageActionCreators.setMessages),\n      ActorClient.bindTyping(peer, TypingActionCreators.setTyping)\n    ];\n\n    switch (peer.type) {\n      case PeerTypes.USER:\n        bindings.push(\n          ActorClient.bindUser(peer.id, DialogInfoActionCreators.setDialogInfo),\n          ActorClient.bindUserOnline(peer.id, OnlineActionCreators.setUserOnline)\n        );\n        break;\n      case PeerTypes.GROUP:\n        bindings.push(\n          ActorClient.bindGroup(peer.id, DialogInfoActionCreators.setDialogInfo),\n          ActorClient.bindGroupOnline(peer.id, OnlineActionCreators.setGroupOnline)\n        );\n        GroupProfileActionCreators.getIntegrationToken(peer.id);\n        break;\n    }\n\n    this.setBindings('peer', bindings);\n  }\n\n  onDialogsEnd() {\n    ActorClient.onDialogsEnd();\n  }\n\n  onChatEnd(peer) {\n    ActorClient.onChatEnd(peer);\n  }\n\n  leaveGroup(gid) {\n    dispatchAsync(ActorClient.leaveGroup(gid), {\n      request: ActionTypes.GROUP_LEAVE,\n      success: ActionTypes.GROUP_LEAVE_SUCCESS,\n      failure: ActionTypes.GROUP_LEAVE_ERROR\n    }, { gid });\n  }\n\n  deleteChat(peer) {\n    const gid = peer.id;\n    const leaveGroup = () => dispatchAsync(ActorClient.leaveGroup(gid), {\n      request: ActionTypes.GROUP_LEAVE,\n      success: ActionTypes.GROUP_LEAVE_SUCCESS,\n      failure: ActionTypes.GROUP_LEAVE_ERROR\n    }, { gid });\n    const deleteChat = () => dispatchAsync(ActorClient.deleteChat(peer), {\n      request: ActionTypes.GROUP_DELETE,\n      success: ActionTypes.GROUP_DELETE_SUCCESS,\n      failure: ActionTypes.GROUP_DELETE_ERROR\n    }, { peer });\n\n    switch (peer.type) {\n      case PeerTypes.USER:\n        deleteChat();\n        break;\n      case PeerTypes.GROUP:\n        leaveGroup()\n          .then(deleteChat);\n        break;\n      default:\n    }\n  }\n\n  clearChat(peer) {\n    dispatchAsync(ActorClient.clearChat(peer), {\n      request: ActionTypes.GROUP_CLEAR,\n      success: ActionTypes.GROUP_CLEAR_SUCCESS,\n      failure: ActionTypes.GROUP_CLEAR_ERROR\n    }, { peer });\n  }\n\n  hideChat(peer) {\n    dispatchAsync(ActorClient.hideChat(peer), {\n      request: ActionTypes.GROUP_HIDE,\n      success: ActionTypes.GROUP_HIDE_SUCCESS,\n      failure: ActionTypes.GROUP_HIDE_ERROR\n    }, { peer });\n  }\n\n  blockUser(id) {\n    console.debug('Block user %s', id);\n  }\n\n  loadMoreMessages(peer) {\n    if (MessageStore.isAllRendered()) {\n      this.onChatEnd(peer);\n    } else {\n      dispatch(ActionTypes.MESSAGES_LOAD_MORE);\n    }\n  }\n}\n\nexport default new DialogActionCreators();\n"]}