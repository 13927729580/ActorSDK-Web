{"version":3,"sources":["../../src/actions/DialogActionCreators.js"],"names":[],"mappings":"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","file":"DialogActionCreators.js","sourcesContent":["/*\n * Copyright (C) 2015 Actor LLC. <https://actor.im>\n */\n\nimport { dispatch, dispatchAsync } from '../dispatcher/ActorAppDispatcher';\nimport { ActionTypes, PeerTypes } from '../constants/ActorAppConstants';\nimport ActorClient from '../utils/ActorClient';\nimport PeerUtils from '../utils/PeerUtils';\nimport RouterContainer from '../utils/RouterContainer';\n\nimport MessageActionCreators from './MessageActionCreators';\nimport GroupProfileActionCreators from './GroupProfileActionCreators';\nimport TypingActionCreators from './TypingActionCreators';\nimport DialogInfoActionCreators from './DialogInfoActionCreators';\nimport OnlineActionCreators from './OnlineActionCreators';\n\nimport DialogStore from '../stores/DialogStore';\n\nlet messagesBinding = null;\n\nconst DialogActionCreators = {\n  setDialogs(dialogs) {\n    dispatch(ActionTypes.DIALOGS_CHANGED, { dialogs });\n  },\n\n  selectDialogPeer(peer) {\n    const router = RouterContainer.get();\n    const currentPeer = DialogStore.getCurrentPeer();\n\n    // Unbind from previous peer\n    if (currentPeer !== null) {\n      this.onConversationClosed(currentPeer);\n      messagesBinding && messagesBinding.unbind();\n      ActorClient.unbindTyping(currentPeer, TypingActionCreators.setTyping);\n\n      switch (currentPeer.type) {\n        case PeerTypes.USER:\n          ActorClient.unbindUser(currentPeer.id, DialogInfoActionCreators.setDialogInfo);\n          ActorClient.unbindUserOnline(currentPeer.id, OnlineActionCreators.setUserOnline);\n          break;\n        case PeerTypes.GROUP:\n          ActorClient.unbindGroup(currentPeer.id, DialogInfoActionCreators.setDialogInfo);\n          ActorClient.unbindGroupOnline(currentPeer.id, OnlineActionCreators.setGroupOnline);\n          break;\n        default:\n      }\n    }\n\n    dispatch(ActionTypes.SELECT_DIALOG_PEER, { peer });\n\n    this.onConversationOpen(peer);\n    messagesBinding = ActorClient.bindMessages(peer, MessageActionCreators.setMessages);\n    ActorClient.bindTyping(peer, TypingActionCreators.setTyping);\n    switch(peer.type) {\n      case PeerTypes.USER:\n        ActorClient.bindUser(peer.id, DialogInfoActionCreators.setDialogInfo);\n        ActorClient.bindUserOnline(peer.id, OnlineActionCreators.setUserOnline);\n        break;\n      case PeerTypes.GROUP:\n        ActorClient.bindGroup(peer.id, DialogInfoActionCreators.setDialogInfo);\n        ActorClient.bindGroupOnline(peer.id, OnlineActionCreators.setGroupOnline);\n        GroupProfileActionCreators.getIntegrationToken(peer.id);\n        break;\n      default:\n    }\n\n    router.transitionTo('main', {id: PeerUtils.peerToString(peer)});\n  },\n\n  selectDialogPeerUser(uid) {\n    if (uid === ActorClient.getUid()) {\n      console.warn('You can\\'t chat with yourself');\n    } else {\n      this.selectDialogPeer(ActorClient.getUserPeer(uid));\n    }\n  },\n\n  onConversationOpen(peer) {\n    ActorClient.onConversationOpen(peer);\n  },\n\n  onConversationClosed(peer) {\n    ActorClient.onConversationClosed(peer);\n  },\n\n  onDialogsEnd() {\n    ActorClient.onDialogsEnd();\n  },\n\n  onChatEnd(peer) {\n    ActorClient.onChatEnd(peer);\n  },\n\n  leaveGroup(gid) {\n    dispatchAsync(ActorClient.leaveGroup(gid), {\n      request: ActionTypes.GROUP_LEAVE,\n      success: ActionTypes.GROUP_LEAVE_SUCCESS,\n      failure: ActionTypes.GROUP_LEAVE_ERROR\n    }, { gid });\n  },\n\n  deleteChat(peer) {\n    const gid = peer.id;\n    const leaveGroup = () => dispatchAsync(ActorClient.leaveGroup(gid), {\n      request: ActionTypes.GROUP_LEAVE,\n      success: ActionTypes.GROUP_LEAVE_SUCCESS,\n      failure: ActionTypes.GROUP_LEAVE_ERROR\n    }, { gid });\n    const deleteChat = () => dispatchAsync(ActorClient.deleteChat(peer), {\n      request: ActionTypes.GROUP_DELETE,\n      success: ActionTypes.GROUP_DELETE_SUCCESS,\n      failure: ActionTypes.GROUP_DELETE_ERROR\n    }, { peer });\n\n    switch (peer.type) {\n      case PeerTypes.USER:\n        deleteChat();\n        break;\n      case PeerTypes.GROUP:\n        leaveGroup()\n          .then(deleteChat);\n        break;\n      default:\n    }\n  },\n\n  clearChat(peer) {\n    dispatchAsync(ActorClient.clearChat(peer), {\n      request: ActionTypes.GROUP_CLEAR,\n      success: ActionTypes.GROUP_CLEAR_SUCCESS,\n      failure: ActionTypes.GROUP_CLEAR_ERROR\n    }, { peer });\n  },\n\n  hideChat(peer) {\n    dispatchAsync(ActorClient.hideChat(peer), {\n      request: ActionTypes.GROUP_HIDE,\n      success: ActionTypes.GROUP_HIDE_SUCCESS,\n      failure: ActionTypes.GROUP_HIDE_ERROR\n    }, { peer });\n  }\n};\n\nexport default DialogActionCreators;\n"]}