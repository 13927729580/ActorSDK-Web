{"version":3,"sources":["../../src/actions/LoginActionCreators.js"],"names":[],"mappings":"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","file":"LoginActionCreators.js","sourcesContent":["/*\n * Copyright (C) 2015 Actor LLC. <https://actor.im>\n */\n\nimport { dispatch, dispatchAsync } from '../dispatcher/ActorAppDispatcher';\nimport { ActionTypes } from '../constants/ActorAppConstants';\n\nimport ActorClient from '../utils/ActorClient';\nimport RouterContainer from '../utils/RouterContainer';\n\nimport MyProfileActionCreators from './MyProfileActionCreators';\nimport DialogActionCreators from './DialogActionCreators';\nimport ContactActionCreators from './ContactActionCreators';\nimport QuickSearchActionCreators from './QuickSearchActionCreators';\nimport FaviconActionCreators from './FaviconActionCreators';\n\nconst LoginActionCreators = {\n  changeLogin(login) {\n    dispatch(ActionTypes.AUTH_CHANGE_LOGIN, { login })\n  },\n  changeCode(code) {\n    dispatch(ActionTypes.AUTH_CHANGE_CODE, { code })\n  },\n  changeName(name) {\n    dispatch(ActionTypes.AUTH_CHANGE_NAME, { name })\n  },\n\n  requestSms(phone) {\n    dispatchAsync(ActorClient.requestSms(phone), {\n      request: ActionTypes.AUTH_CODE_REQUEST,\n      success: ActionTypes.AUTH_CODE_REQUEST_SUCCESS,\n      failure: ActionTypes.AUTH_CODE_REQUEST_FAILURE\n    }, { phone });\n  },\n  sendCode(code) {\n    const sendCodePromise = () => dispatchAsync(ActorClient.sendCode(code), {\n      request: ActionTypes.AUTH_CODE_SEND,\n      success: ActionTypes.AUTH_CODE_SEND_SUCCESS,\n      failure: ActionTypes.AUTH_CODE_SEND_FAILURE\n    }, { code });\n\n    const handleState = (state) => {\n      switch (state) {\n        case 'signup':\n          this.startSignup();\n          break;\n        case 'logged_in':\n          this.setLoggedIn({redirect: true});\n          break;\n        default:\n          console.error('Unsupported state', state);\n      }\n    };\n\n    sendCodePromise()\n      .then(handleState);\n  },\n\n  startSignup() {\n    dispatch(ActionTypes.AUTH_SIGNUP_START);\n  },\n  sendSignup(name) {\n    const signUpPromise = () => dispatchAsync(ActorClient.signUp(name), {\n      request: ActionTypes.AUTH_SIGNUP,\n      success: ActionTypes.AUTH_SIGNUP_SUCCESS,\n      failure: ActionTypes.AUTH_SIGNUP_FAILURE\n    }, { name });\n\n    const setLoggedIn = () => this.setLoggedIn({redirect: true});\n\n    signUpPromise()\n      .then(setLoggedIn)\n  },\n\n  setLoggedIn: (opts) => {\n    opts = opts || {};\n\n    if (opts.redirect) {\n      const router = RouterContainer.get();\n      const nextPath = router.getCurrentQuery().nextPath;\n\n      if (nextPath) {\n        router.replaceWith(nextPath);\n      } else {\n        router.replaceWith('/');\n      }\n    }\n\n    dispatch(ActionTypes.AUTH_SET_LOGGED_IN);\n\n    ActorClient.bindUser(ActorClient.getUid(), MyProfileActionCreators.onProfileChanged);\n\n    ActorClient.bindDialogs(DialogActionCreators.setDialogs);\n\n    ActorClient.bindContacts(ContactActionCreators.setContacts);\n    ActorClient.bindSearch(QuickSearchActionCreators.setQuickSearchList);\n    ActorClient.bindTempGlobalCounter(FaviconActionCreators.setFavicon);\n  },\n  setLoggedOut: () => {\n    dispatch(ActionTypes.AUTH_SET_LOGGED_OUT);\n    ActorClient.unbindUser(ActorClient.getUid(), MyProfileActionCreators.onProfileChanged);\n\n    ActorClient.unbindDialogs(DialogActionCreators.setDialogs);\n\n    ActorClient.unbindContacts(ContactActionCreators.setContacts);\n    ActorClient.unbindSearch(QuickSearchActionCreators.setQuickSearchList);\n    ActorClient.unbindTempGlobalCounter(FaviconActionCreators.setFavicon);\n  },\n\n  restartAuth: () => dispatch(ActionTypes.AUTH_RESTART)\n};\n\nexport default LoginActionCreators;\n"]}