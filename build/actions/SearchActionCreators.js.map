{"version":3,"sources":["../../src/actions/SearchActionCreators.js"],"names":[],"mappings":";;;;AAAA;;AACA;;;;AACA;;AACA;;AACA;;;;AACA;;;;AACA;;;;;;;;IAEM,oB;;;;;iCACJ,K,oBAAQ;AACN,oCAAsB,eAAtB,CAAsC,KAAtC;AACA,sCAAS,+BAAY,YAArB;AACD,G;;iCAED,I,mBAAO;AACL,oCAAsB,eAAtB,CAAsC,IAAtC;AACA,sCAAS,+BAAY,WAArB;AACD,G;;iCAED,K,oBAAQ;AACN,sCAAS,+BAAY,YAArB;AACA,oCAAsB,eAAtB,CAAsC,IAAtC;AACD,G;;iCAED,kB,+BAAmB,K,EAAO;AACxB,2CAA6B,IAA7B;AACA,2CAA6B,QAA7B,CAAsC,KAAtC;AACA,sCAAS,+BAAY,YAArB;AACD,G;;iCAED,W,wBAAY,O,EAAS;AACnB,sCAAS,+BAAY,YAArB;AACA,sBAAQ,IAAR,UAAoB,QAAQ,QAAR,CAAiB,IAAjB,CAAsB,GAA1C;AACD,G;;iCAED,Y,yBAAa,K,EAAO;AAClB,sCAAS,+BAAY,gBAArB,EAAuC,EAAE,YAAF,EAAvC;AACA,SAAK,aAAL,CAAmB,KAAnB;AACD,G;;iCAED,a,0BAAc,K,EAAO;AACnB,QAAM,WAAW,2BAAiB,QAAjB,EAAjB;AACA,QAAM,UAAU,yBAAO,KAAP,EAAc,QAAd,EAAwB,UAAC,OAAD,EAAa;AACnD,aAAO,CACL,QAAQ,QAAR,CAAiB,KADZ,EAEL,QAAQ,QAAR,CAAiB,QAFZ,CAAP;AAID,KALe,CAAhB;;AAOA,sCAAS,+BAAY,kBAArB,EAAyC,EAAE,gBAAF,EAAzC;AACD,G;;;;;kBAGY,IAAI,oBAAJ,E","file":"SearchActionCreators.js","sourcesContent":["import { dispatch } from '../dispatcher/ActorAppDispatcher';\nimport history from '../utils/history';\nimport { search } from '../utils/SearchUtils';\nimport { ActionTypes } from '../constants/ActorAppConstants';\nimport QuickSearchStore from '../stores/QuickSearchStore';\nimport ComposeActionCreators from './ComposeActionCreators';\nimport SearchMessagesActionCreators from './SearchMessagesActionCreators';\n\nclass SearchActionCreators {\n  focus() {\n    ComposeActionCreators.toggleAutoFocus(false);\n    dispatch(ActionTypes.SEARCH_FOCUS);\n  }\n\n  blur() {\n    ComposeActionCreators.toggleAutoFocus(true);\n    dispatch(ActionTypes.SEARCH_BLUR);\n  }\n\n  clear() {\n    dispatch(ActionTypes.SEARCH_CLEAR);\n    ComposeActionCreators.toggleAutoFocus(true);\n  }\n\n  goToMessagesSearch(query) {\n    SearchMessagesActionCreators.open();\n    SearchMessagesActionCreators.setQuery(query);\n    dispatch(ActionTypes.SEARCH_CLEAR);\n  }\n\n  goToContact(contact) {\n    dispatch(ActionTypes.SEARCH_CLEAR);\n    history.push(`/im/${contact.peerInfo.peer.key}`);\n  }\n\n  handleSearch(query) {\n    dispatch(ActionTypes.SEARCH_SET_QUERY, { query });\n    this.updateResults(query);\n  }\n\n  updateResults(query) {\n    const elements = QuickSearchStore.getState();\n    const results = search(query, elements, (element) => {\n      return [\n        element.peerInfo.title,\n        element.peerInfo.userName\n      ];\n    });\n\n    dispatch(ActionTypes.SEARCH_SET_RESULTS, { results });\n  }\n}\n\nexport default new SearchActionCreators();\n"]}