{"version":3,"sources":["../../src/actions/BlockedUsersActionCreators.js"],"names":[],"mappings":";;;;;;;;AAIA;;AACA;;AACA;;;;;;IAEM;;;;;uCACJ,uBAAO;AACL,sCAAS,+BAAY,kBAAZ,CAAT,CADK;AAEL,SAAK,SAAL,GAFK;;;AADH,uCAMJ,uBAAO;AACL,sCAAS,+BAAY,kBAAZ,CAAT,CADK;;;AANH,uCAUJ,6BAAS,OAAO;AACd,sCAAS,+BAAY,uBAAZ,EAAqC,EAAE,YAAF,EAA9C,EADc;;;AAVZ,uCAcJ,iCAAY;AACV,sCAAS,+BAAY,kBAAZ,CAAT,CADU;AAEV,0BAAY,gBAAZ,GAA+B,IAA/B,CAAoC,UAAC,KAAD,EAAW;AAC7C,wCAAS,+BAAY,iBAAZ,EAA+B,EAAE,YAAF,EAAxC,EAD6C;KAAX,CAApC,CAEG,KAFH,CAES,UAAC,KAAD,EAAW;AAClB,wCAAS,+BAAY,yBAAZ,EAAuC,EAAE,YAAF,EAAhD,EADkB;KAAX,CAFT,CAFU;;;AAdR,uCAuBJ,+BAAU,IAAI;AACZ,0BAAY,SAAZ,CAAsB,EAAtB,EAA0B,IAA1B,CAA+B,YAAM;AACnC,cAAQ,KAAR,CAAc,mBAAmB,EAAnB,CAAd,CADmC;KAAN,CAA/B,CAEG,KAFH,CAES,UAAC,CAAD,EAAO;AACd,cAAQ,KAAR,CAAc,CAAd,EADc;KAAP,CAFT,CADY;;;AAvBV,uCA+BJ,mCAAY,IAAoB;;;QAAhB,+DAAS,qBAAO;;AAC9B,0BAAY,WAAZ,CAAwB,EAAxB,EAA4B,IAA5B,CAAiC,YAAM;AACrC,UAAI,MAAJ,EAAY;AACV,cAAK,SAAL,GADU;OAAZ;KAD+B,CAAjC,CAIG,KAJH,CAIS,UAAC,CAAD,EAAO;AACd,cAAQ,KAAR,CAAc,CAAd,EADc;KAAP,CAJT,CAD8B;;;SA/B5B;;;;;kBA2CS,IAAI,0BAAJ","file":"BlockedUsersActionCreators.js","sourcesContent":["/*\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\n */\n\nimport { dispatch } from '../dispatcher/ActorAppDispatcher';\nimport { ActionTypes } from '../constants/ActorAppConstants';\nimport ActorClient from '../utils/ActorClient';\n\nclass BlockedUsersActionCreators {\n  open() {\n    dispatch(ActionTypes.BLOCKED_USERS_OPEN);\n    this.loadUsers();\n  }\n\n  hide() {\n    dispatch(ActionTypes.BLOCKED_USERS_HIDE);\n  }\n\n  setQuery(query) {\n    dispatch(ActionTypes.BLOCKED_USERS_SET_QUERY, { query });\n  }\n\n  loadUsers() {\n    dispatch(ActionTypes.BLOCKED_USERS_LOAD);\n    ActorClient.loadBlockedUsers().then((users) => {\n      dispatch(ActionTypes.BLOCKED_USERS_SET, { users });\n    }).catch((error) => {\n      dispatch(ActionTypes.BLOCKED_USERS_LOAD_FAILED, { error });\n    });\n  }\n\n  blockUser(id) {\n    ActorClient.blockUser(id).then(() => {\n      console.debug('users blocked ' + id);\n    }).catch((e) => {\n      console.error(e);\n    });\n  }\n\n  unblockUser(id, reload = false) {\n    ActorClient.unblockUser(id).then(() => {\n      if (reload) {\n        this.loadUsers();\n      }\n    }).catch((e) => {\n      console.error(e);\n    });\n  }\n\n}\n\nexport default new BlockedUsersActionCreators();\n"]}