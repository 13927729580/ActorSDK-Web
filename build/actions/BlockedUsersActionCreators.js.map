{"version":3,"sources":["../../src/actions/BlockedUsersActionCreators.js"],"names":[],"mappings":";;;;AAIA;;AACA;;AACA;;;;AACA;;;;;;;;;;IAEM,0B;;;;;uCACJ,I,mBAAO;AACL,sCAAS,+BAAY,kBAArB;AACA,oCAAsB,eAAtB,CAAsC,KAAtC;AACA,SAAK,SAAL;AACD,G;;uCAED,I,mBAAO;AACL,sCAAS,+BAAY,kBAArB;AACA,oCAAsB,eAAtB,CAAsC,IAAtC;AACD,G;;uCAED,Q,qBAAS,K,EAAO;AACd,sCAAS,+BAAY,uBAArB,EAA8C,EAAE,YAAF,EAA9C;AACD,G;;uCAED,S,wBAAY;AACV,sCAAS,+BAAY,kBAArB;AACA,0BAAY,gBAAZ,GAA+B,IAA/B,CAAoC,UAAC,KAAD,EAAW;AAC7C,wCAAS,+BAAY,iBAArB,EAAwC,EAAE,YAAF,EAAxC;AACD,KAFD,EAEG,KAFH,CAES,UAAC,KAAD,EAAW;AAClB,wCAAS,+BAAY,yBAArB,EAAgD,EAAE,YAAF,EAAhD;AACD,KAJD;AAKD,G;;uCAED,S,sBAAU,E,EAAI;AACZ,0BAAY,SAAZ,CAAsB,EAAtB,EAA0B,IAA1B,CAA+B,YAAM;AACnC,cAAQ,KAAR,CAAc,mBAAmB,EAAjC;AACD,KAFD,EAEG,KAFH,CAES,UAAC,CAAD,EAAO;AACd,cAAQ,KAAR,CAAc,CAAd;AACD,KAJD;AAKD,G;;uCAED,W,wBAAY,E,EAAoB;AAAA;;AAAA,QAAhB,MAAgB,yDAAP,KAAO;;AAC9B,0BAAY,WAAZ,CAAwB,EAAxB,EAA4B,IAA5B,CAAiC,YAAM;AACrC,UAAI,MAAJ,EAAY;AACV,cAAK,SAAL;AACD;AACF,KAJD,EAIG,KAJH,CAIS,UAAC,CAAD,EAAO;AACd,cAAQ,KAAR,CAAc,CAAd;AACD,KAND;AAOD,G;;;;;kBAIY,IAAI,0BAAJ,E","file":"BlockedUsersActionCreators.js","sourcesContent":["/*\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\n */\n\nimport { dispatch } from '../dispatcher/ActorAppDispatcher';\nimport { ActionTypes } from '../constants/ActorAppConstants';\nimport ActorClient from '../utils/ActorClient';\nimport ComposeActionCreators from './ComposeActionCreators'\n\nclass BlockedUsersActionCreators {\n  open() {\n    dispatch(ActionTypes.BLOCKED_USERS_OPEN);\n    ComposeActionCreators.toggleAutoFocus(false);\n    this.loadUsers();\n  }\n\n  hide() {\n    dispatch(ActionTypes.BLOCKED_USERS_HIDE);\n    ComposeActionCreators.toggleAutoFocus(true);\n  }\n\n  setQuery(query) {\n    dispatch(ActionTypes.BLOCKED_USERS_SET_QUERY, { query });\n  }\n\n  loadUsers() {\n    dispatch(ActionTypes.BLOCKED_USERS_LOAD);\n    ActorClient.loadBlockedUsers().then((users) => {\n      dispatch(ActionTypes.BLOCKED_USERS_SET, { users });\n    }).catch((error) => {\n      dispatch(ActionTypes.BLOCKED_USERS_LOAD_FAILED, { error });\n    });\n  }\n\n  blockUser(id) {\n    ActorClient.blockUser(id).then(() => {\n      console.debug('users blocked ' + id);\n    }).catch((e) => {\n      console.error(e);\n    });\n  }\n\n  unblockUser(id, reload = false) {\n    ActorClient.unblockUser(id).then(() => {\n      if (reload) {\n        this.loadUsers();\n      }\n    }).catch((e) => {\n      console.error(e);\n    });\n  }\n\n}\n\nexport default new BlockedUsersActionCreators();\n"]}