{"version":3,"sources":["../../src/actions/EditGroupActionCreators.js"],"names":[],"mappings":";;;;AAIA;;AACA;;AACA;;;;AAEA;;;;AAEA;;;;AACA;;;;;;;;;;;;;;IAGM,uB;;;;;;;;;oCACJ,I,iBAAK,G,EAAK;AACR,SAAK,WAAL,CAAiB,OAAjB,EAA0B,CACxB,sBAAY,SAAZ,CAAsB,GAAtB,EAA2B,KAAK,oBAAhC,CADwB,CAA1B;;AAIA,QAAM,QAAQ,sBAAY,QAAZ,CAAqB,GAArB,CAAd;AACA,sCAAS,+BAAY,qBAArB,EAA4C,EAAE,YAAF,EAA5C;;AAEA,oCAAsB,eAAtB,CAAsC,KAAtC;AACD,G;;oCAED,I,mBAAO;AACL,SAAK,cAAL,CAAoB,OAApB;;AAEA,sCAAS,+BAAY,qBAArB;;AAEA,oCAAsB,eAAtB,CAAsC,IAAtC;AACD,G;;oCAED,oB,iCAAqB,K,EAAO;AAC1B,sCAAS,+BAAY,kBAArB,EAAyC,EAAE,YAAF,EAAzC;AACD,G;;oCAED,c,2BAAe,G,EAAK,K,EAAO;AACzB,QAAI,UAAU,yBAAe,QAAf,EAAd,EAAyC;AACvC,6CAAc,sBAAY,cAAZ,CAA2B,GAA3B,EAAgC,KAAhC,CAAd,EAAsD;AACpD,iBAAS,+BAAY,gBAD+B;AAEpD,iBAAS,+BAAY,wBAF+B;AAGpD,iBAAS,+BAAY;AAH+B,OAAtD,EAIG,EAAE,QAAF,EAAO,YAAP,EAJH;AAKD;AACF,G;;oCAED,iB,8BAAkB,G,EAAK,M,EAAQ;AAC7B,0BAAY,iBAAZ,CAA8B,GAA9B,EAAmC,MAAnC;AACD,G;;oCAED,c,2BAAe,G,EAAK,K,EAAO;AACzB,YAAQ,UAAU,EAAV,GAAe,IAAf,GAAsB,KAA9B;AACA,QAAI,UAAU,yBAAe,QAAf,EAAd,EAAyC;AACvC,6CAAc,sBAAY,cAAZ,CAA2B,GAA3B,EAAgC,KAAhC,CAAd,EAAsD;AACpD,iBAAS,+BAAY,gBAD+B;AAEpD,iBAAS,+BAAY,wBAF+B;AAGpD,iBAAS,+BAAY;AAH+B,OAAtD,EAIG,EAAE,QAAF,EAAO,YAAP,EAJH;AAKD;AACF,G;;oCAED,iB,8BAAkB,G,EAAK;AACrB,0BAAY,iBAAZ,CAA8B,GAA9B;AACD,G;;;;;kBAGY,IAAI,uBAAJ,E","file":"EditGroupActionCreators.js","sourcesContent":["/*\n * Copyright (C) 2015 Actor LLC. <https://actor.im>\n */\n\nimport { dispatch, dispatchAsync } from '../dispatcher/ActorAppDispatcher';\nimport { ActionTypes } from '../constants/ActorAppConstants';\nimport ActorClient from '../utils/ActorClient';\n\nimport EditGroupStore from '../stores/EditGroupStore'\n\nimport ActionCreators from './ActionCreators';\nimport ComposeActionCreators from './ComposeActionCreators';\n\n\nclass EditGroupActionCreators extends ActionCreators {\n  show(gid) {\n    this.setBindings('group', [\n      ActorClient.bindGroup(gid, this.onCurrentGroupChange)\n    ]);\n\n    const group = ActorClient.getGroup(gid);\n    dispatch(ActionTypes.GROUP_EDIT_MODAL_SHOW, { group });\n\n    ComposeActionCreators.toggleAutoFocus(false);\n  }\n\n  hide() {\n    this.removeBindings('group');\n\n    dispatch(ActionTypes.GROUP_EDIT_MODAL_HIDE);\n\n    ComposeActionCreators.toggleAutoFocus(true);\n  }\n\n  onCurrentGroupChange(group) {\n    dispatch(ActionTypes.GROUP_INFO_CHANGED, { group })\n  }\n\n  editGroupTitle(gid, title) {\n    if (title !== EditGroupStore.getTitle()) {\n      dispatchAsync(ActorClient.editGroupTitle(gid, title), {\n        request: ActionTypes.GROUP_EDIT_TITLE,\n        success: ActionTypes.GROUP_EDIT_TITLE_SUCCESS,\n        failure: ActionTypes.GROUP_EDIT_TITLE_ERROR\n      }, { gid, title });\n    }\n  }\n\n  changeGroupAvatar(gid, avatar) {\n    ActorClient.changeGroupAvatar(gid, avatar)\n  }\n\n  editGroupAbout(gid, about) {\n    about = about === '' ? null : about;\n    if (about !== EditGroupStore.getAbout()) {\n      dispatchAsync(ActorClient.editGroupAbout(gid, about), {\n        request: ActionTypes.GROUP_EDIT_ABOUT,\n        success: ActionTypes.GROUP_EDIT_ABOUT_SUCCESS,\n        failure: ActionTypes.GROUP_EDIT_ABOUT_ERROR\n      }, { gid, about });\n    }\n  }\n\n  removeGroupAvatar(gid) {\n    ActorClient.removeGroupAvatar(gid)\n  }\n}\n\nexport default new EditGroupActionCreators();\n"]}