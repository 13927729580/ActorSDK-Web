{"version":3,"sources":["../../../src/components/dev/LoggerSection.react.js"],"names":[],"mappings":";;;;;;AAIA;;;;AACA;;AACA;;;;AAEA;;;;AACA;;AAEA;;;;AACA;;;;AACA;;;;;;;;;;;;;;IAEM;;;;;;;;;gBAGG,2CAAiB;AACtB,WAAO,sBAAY,QAAZ,EAAP,CADsB;;;AAHpB,0BAOJ,6BAAU;AACR,8CADQ;;;AAPN,0BAWJ,mCAAa;AACX,QAAM,SAAS,EAAT,CADK;;QAGH,OAAS,KAAK,KAAL,CAAT,KAHG;;AAIX,SAAK,IAAI,IAAI,KAAK,MAAL,GAAc,CAAd,EAAiB,KAAK,CAAL,EAAQ,GAAtC,EAA2C;AACzC,aAAO,IAAP,CACE,gEAAe,KAAK,CAAL,KAAS,KAAK,CAAL,GAAxB,CADF,EADyC;KAA3C;;AAMA,WAAO,MAAP,CAVW;;;AAXT,0BAwBJ,mCAAa;AACX,WACE;;QAAK,WAAU,6BAAV,EAAL;MACE;;UAAK,WAAU,kBAAV,EAAL;QACE;;YAAQ,WAAU,qBAAV,EAAgC,MAAK,QAAL,EAAc,SAAS,KAAK,OAAL,EAA/D;UACE;;cAAG,WAAU,gBAAV,EAAH;;WADF;SADF;OADF;MAME,2DANF;MAOE;;;QACE;;YAAK,WAAU,mBAAV,EAAL;UACG,KAAK,UAAL,EADH;SADF;OAPF;KADF,CADW;;;AAxBT,0BA0CJ,2BAAS;AACP,QAAM,YAAY,0BAAW,iBAAX,EAA8B;AAC9C,yBAAmB,KAAK,KAAL,CAAW,MAAX;KADH,CAAZ,CADC;;AAKP,WACE;;QAAS,WAAW,SAAX,EAAT;MACG,KAAK,UAAL,EADH;KADF,CALO;;;SA1CL;;;cACG,YAAY;SAAM;CAAN;;kBAsDN,iBAAU,MAAV,CAAiB,aAAjB","file":"LoggerSection.react.js","sourcesContent":["/*\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\n */\n\nimport React, { Component } from 'react';\nimport { Container } from 'flux/utils';\nimport classNames from 'classnames';\n\nimport LoggerStore from '../../stores/LoggerStore';\nimport {loggerToggle} from '../../actions/LoggerActionCreators';\n\nimport Scrollbar from '../common/Scrollbar.react';\nimport LoggerFilter from './LoggerFilter.react';\nimport LoggerRow from './LoggerRow.react';\n\nclass LoggerSection extends Component {\n  static getStores = () => [LoggerStore];\n\n  static calculateState() {\n    return LoggerStore.getState();\n  }\n\n  onClose() {\n    loggerToggle();\n  }\n\n  renderLogs() {\n    const result = [];\n\n    const { logs } = this.state;\n    for (let i = logs.length - 1; i >= 0; i--) {\n      result.push(\n        <LoggerRow {...logs[i]} key={i} />\n      );\n    }\n\n    return result;\n  }\n\n  renderBody() {\n    return (\n      <div className=\"activity__body logger__body\">\n        <div className=\"logger__controls\">\n          <button className=\"button button--icon\" type=\"button\" onClick={this.onClose}>\n            <i className=\"material-icons\">close</i>\n          </button>\n        </div>\n        <LoggerFilter />\n        <Scrollbar>\n          <div className=\"logger__container\">\n            {this.renderLogs()}\n          </div>\n        </Scrollbar>\n      </div>\n    );\n  }\n\n  render() {\n    const className = classNames('activity logger', {\n      'activity--shown': this.state.isOpen\n    });\n\n    return (\n      <section className={className}>\n        {this.renderBody()}\n      </section>\n    );\n  }\n}\n\nexport default Container.create(LoggerSection);\n"]}