{"version":3,"sources":["../../src/components/Dialog.react.js"],"names":[],"mappings":"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","file":"Dialog.react.js","sourcesContent":["/*\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\n */\n\nimport { isFunction } from 'lodash';\n\nimport React, { Component, PropTypes } from 'react';\nimport { Container } from 'flux/utils';\n\nimport PeerUtils from '../utils/PeerUtils';\nimport history from '../utils/history';\n\nimport DefaultMessages from './dialog/MessagesSection.react';\nimport DialogFooter from './dialog/DialogFooter.react';\nimport DefaultToolbar from './Toolbar.react';\nimport DefaultActivity from './Activity.react';\nimport DefaultSearch from './search/SearchSection.react';\nimport DefaultCall from './Call.react';\nimport ConnectionState from './common/ConnectionState.react';\n\nimport DialogStore from '../stores/DialogStore';\nimport DialogInfoStore from '../stores/DialogInfoStore';\nimport ActivityStore from '../stores/ActivityStore';\n\nimport DialogActionCreators from '../actions/DialogActionCreators';\nimport BlockedUsersActionCreators from '../actions/BlockedUsersActionCreators';\n\nclass DialogSection extends Component {\n  static contextTypes = {\n    delegate: PropTypes.object.isRequired\n  };\n\n  static propTypes = {\n    params: PropTypes.shape({\n      id: PropTypes.string.isRequired\n    }).isRequired\n  };\n\n  static getStores() {\n    return [ActivityStore, DialogStore, DialogInfoStore];\n  }\n\n  static calculateState() {\n    const peer = DialogStore.getCurrentPeer();\n    const dialogInfo = DialogInfoStore.getState();\n\n    return {\n      peer,\n      dialogInfo,\n      isMember: DialogStore.isMember(),\n      isActivityOpen: ActivityStore.isOpen()\n    };\n  }\n\n  constructor(props, context) {\n    super(props, context);\n    this.updatePeer(this.props.params.id);\n\n    this.onUnblock = this.onUnblock.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.params.id !== this.props.params.id) {\n      this.updatePeer(nextProps.params.id);\n    }\n  }\n\n  componentWillUnmount() {\n    DialogActionCreators.selectDialogPeer(null);\n  }\n\n  updatePeer(id) {\n    const peer = PeerUtils.stringToPeer(id);\n    if (PeerUtils.hasPeer(peer)) {\n      DialogActionCreators.selectDialogPeer(peer);\n    } else {\n      history.replace('/im');\n    }\n  }\n\n  onUnblock() {\n    const { dialogInfo } = this.state;\n    BlockedUsersActionCreators.unblockUser(dialogInfo.id);\n  }\n\n  getActivityComponents() {\n    const { features, components: { dialog } } = this.context.delegate;\n    if (dialog && dialog.activity) {\n      return dialog.activity;\n    }\n\n    const activity = [DefaultActivity];\n    if (features.calls) {\n      activity.push(DefaultCall);\n    }\n\n    if (features.search) {\n      activity.push(DefaultSearch);\n    }\n\n    return activity;\n  }\n\n  getComponents() {\n    const { dialog } = this.context.delegate.components;\n    const activity = this.getActivityComponents();\n\n    if (dialog && !isFunction(dialog)) {\n      return {\n        activity,\n        ToolbarSection: dialog.toolbar || DefaultToolbar,\n        MessagesSection: isFunction(dialog.messages) ? dialog.messages : DefaultMessages\n      };\n    }\n\n    return {\n      activity,\n      ToolbarSection: DefaultToolbar,\n      MessagesSection: DefaultMessages\n    };\n  }\n\n  render() {\n    const { peer, isMember, dialogInfo } = this.state;\n    if (!peer) {\n      return <section className=\"main\" />;\n    }\n\n    const {\n      ToolbarSection,\n      MessagesSection,\n      activity\n    } = this.getComponents();\n\n    return (\n      <section className=\"main\">\n        <ToolbarSection />\n        <div className=\"flexrow\">\n          <section className=\"dialog\">\n            <ConnectionState/>\n            <div className=\"chat\">\n              <MessagesSection peer={peer} isMember={isMember} />\n              <DialogFooter\n                isMember={isMember}\n                isBlocked={dialogInfo.isBlocked}\n                onUnblock={this.onUnblock}\n              />\n            </div>\n          </section>\n          {activity.map((Activity, index) => <Activity key={index} />)}\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default Container.create(DialogSection, { withProps: true });\n"]}