{"version":3,"sources":["../../src/components/Activity.react.js"],"names":[],"mappings":";;;;AAIA;;;;AACA;;;;AACA;;AACA;;;;AACA;;AAEA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;;;;;;;;;;;IAEM;;;AACJ,WADI,eACJ,CAAY,KAAZ,EAAmB;0BADf,iBACe;;4CACjB,sBAAM,KAAN,GADiB;GAAnB;;AADI,kBAOG,2CAAiB;AACtB,WAAO;AACL,YAAM,sBAAY,cAAZ,EAAN;AACA,YAAM,0BAAgB,OAAhB,EAAN;AACA,cAAQ,wBAAc,MAAd,EAAR;KAHF,CADsB;;;AAPpB,4BAeJ,uDAAsB,WAAW,WAAW;AAC1C,QAAI,CAAC,UAAU,MAAV,EAAkB;AACrB,aAAO,KAAP,CADqB;KAAvB;;AAIA,WAAO,yCAAe,IAAf,EAAqB,SAArB,EAAgC,SAAhC,CAAP,CAL0C;;;AAfxC,4BAuBJ,mDAAqB;AACnB,iBAAa,YAAM;AACjB,aAAO,aAAP,CAAqB,IAAI,KAAJ,CAAU,QAAV,CAArB,EADiB;KAAN,CAAb,CADmB;;;AAvBjB,4BA6BJ,mCAAa;iBACY,KAAK,KAAL,CADZ;QACH,mBADG;QACG,mBADH;;;AAGX,YAAQ,KAAK,IAAL;AACN,WAAK,6BAAU,IAAV;AACH,eAAO,uDAAa,MAAM,IAAN,EAAb,CAAP,CADF;AADF,WAGO,6BAAU,KAAV;AACH,eAAO,wDAAc,OAAO,IAAP,EAAd,CAAP,CADF;AAHF;AAMI,eAAO,IAAP,CADF;AALF,KAHW;;;AA7BT,4BA0CJ,2BAAS;kBACwB,KAAK,KAAL,CADxB;QACC,oBADD;QACO,oBADP;QACa,wBADb;;AAEP,QAAI,CAAC,MAAD,IAAW,CAAC,IAAD,EAAO;AACpB,aAAO,2CAAS,WAAU,UAAV,EAAT,CAAP,CADoB;KAAtB;;AAIA,WACE;;QAAS,WAAU,0BAAV,EAAT;MACG,KAAK,UAAL,EADH;KADF,CANO;;;SA1CL;;;gBAKG,YAAY;SAAM;CAAN;;kBAmDN,iBAAU,MAAV,CAAiB,eAAjB","file":"Activity.react.js","sourcesContent":["/*\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\n */\n\nimport React, { Component } from 'react';\nimport shallowCompare from 'react-addons-shallow-compare';\nimport { Container } from 'flux/utils';\nimport classnames from 'classnames';\nimport { PeerTypes } from '../constants/ActorAppConstants';\n\nimport ActivityStore from '../stores/ActivityStore';\nimport DialogStore from '../stores/DialogStore';\nimport DialogInfoStore from '../stores/DialogInfoStore';\n\nimport UserProfile from './activity/UserProfile.react';\nimport GroupProfile from './activity/GroupProfile.react';\n\nclass ActivitySection extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  static getStores = () => [DialogStore, DialogInfoStore, ActivityStore];\n\n  static calculateState() {\n    return {\n      peer: DialogStore.getCurrentPeer(),\n      info: DialogInfoStore.getInfo(),\n      isOpen: ActivityStore.isOpen()\n    };\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (!nextState.isOpen) {\n      return false;\n    }\n\n    return shallowCompare(this, nextProps, nextState);\n  }\n\n  componentDidUpdate() {\n    setImmediate(() => {\n      window.dispatchEvent(new Event('resize'));\n    });\n  }\n\n  renderBody() {\n    const { peer, info } = this.state;\n\n    switch (peer.type) {\n      case PeerTypes.USER:\n        return <UserProfile user={info} />;\n      case PeerTypes.GROUP:\n        return <GroupProfile group={info}/>;\n      default:\n        return null;\n    }\n  }\n\n  render() {\n    const { peer, info, isOpen } = this.state;\n    if (!isOpen || !peer) {\n      return <section className=\"activity\" />;\n    }\n\n    return (\n      <section className=\"activity activity--shown\">\n        {this.renderBody()}\n      </section>\n    );\n  }\n}\n\nexport default Container.create(ActivitySection);\n"]}