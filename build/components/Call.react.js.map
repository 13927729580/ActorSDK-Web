{"version":3,"sources":["../../src/components/Call.react.js"],"names":[],"mappings":"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","file":"Call.react.js","sourcesContent":["/*\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\n */\n\nimport React, { Component } from 'react';\nimport { shouldComponentUpdate } from 'react-addons-pure-render-mixin';\nimport { Container } from 'flux/utils';\n\nimport { PeerTypes } from '../constants/ActorAppConstants';\nimport PeerUtils from '../utils/PeerUtils';\n\nimport CallActionCreators from '../actions/CallActionCreators';\n\nimport CallStore from '../stores/CallStore';\nimport DialogStore from '../stores/DialogStore';\nimport UserStore from '../stores/UserStore';\nimport GroupStore from '../stores/GroupStore';\n\nimport CallBody from './call/CallBody.react';\nimport CallControls from './call/CallControls.react';\nimport ContactDetails from './common/ContactDetails.react';\n\nclass Call extends Component {\n  static getStores() {\n    return [CallStore, DialogStore];\n  }\n\n  static calculatePeerInfo(peer) {\n    if (peer) {\n      if (peer.type === PeerTypes.USER) {\n        return UserStore.getUser(peer.id);\n      }\n\n      if (peer.type === PeerTypes.GROUP) {\n        return GroupStore.getGroup(peer.id);\n      }\n    }\n\n    return null;\n  }\n\n  static calculateState() {\n    const call = CallStore.getState();\n    if (!call.isOpen || call.isFloating) {\n      return { isOpen: false };\n    }\n\n    const dialogPeer = DialogStore.getCurrentPeer();\n    const isSameDialog = PeerUtils.equals(dialogPeer, call.peer);\n    if (!isSameDialog) {\n      return { isOpen: false };\n    }\n\n    return {\n      call,\n      isOpen: true,\n      peerInfo: Call.calculatePeerInfo(call.peer)\n    };\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.onAnswer = this.onAnswer.bind(this);\n    this.onEnd = this.onEnd.bind(this);\n    this.onMuteToggle = this.onMuteToggle.bind(this);\n    this.onClose = this.onClose.bind(this);\n    this.onFullscreen = this.onFullscreen.bind(this);\n    this.onUserAdd = this.onUserAdd.bind(this);\n    this.onVideo = this.onVideo.bind(this);\n    this.shouldComponentUpdate = shouldComponentUpdate.bind(this);\n  }\n\n  onAnswer() {\n    CallActionCreators.answerCall(this.state.call.id);\n  }\n\n  onEnd() {\n    CallActionCreators.endCall(this.state.call.id);\n  }\n\n  onMuteToggle() {\n    CallActionCreators.toggleCallMute(this.state.call.id);\n  }\n\n  onClose() {\n    CallActionCreators.hide();\n  }\n\n  onFullscreen() {\n    console.debug('onFullscreen');\n  }\n\n  onUserAdd() {\n    console.debug('onUserAdd');\n  }\n\n  onVideo() {\n    console.debug('onVideo');\n  }\n\n  renderContactInfo() {\n    const { call, peerInfo } = this.state;\n    if (!peerInfo || call.peer.type === PeerTypes.GROUP) return null;\n\n    return (\n      <section className=\"call__info\">\n        <ContactDetails peerInfo={peerInfo}/>\n      </section>\n    )\n  }\n\n  render() {\n    const { isOpen, call, peerInfo } = this.state;\n    if (!isOpen) {\n      return <section className=\"activity\" />;\n    }\n\n    return (\n      <section className=\"activity activity--shown\">\n        <div className=\"activity__body call\">\n          <section className=\"call__container\">\n            <CallBody peerInfo={peerInfo} callState={call.state}/>\n            <CallControls\n              callState={call.state}\n              isOutgoing={call.isOutgoing}\n              isMuted={call.isMuted}\n              onEnd={this.onEnd}\n              onAnswer={this.onAnswer}\n              onMuteToggle={this.onMuteToggle}\n              onFullscreen={this.onFullscreen}\n              onUserAdd={this.onUserAdd}\n              onVideo={this.onVideo}\n              onClose={this.onClose}\n            />\n          </section>\n          {this.renderContactInfo()}\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default Container.create(Call);\n"]}