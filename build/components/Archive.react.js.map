{"version":3,"sources":["../../src/components/Archive.react.js"],"names":[],"mappings":"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","file":"Archive.react.js","sourcesContent":["/*\n * Copyright (C) 2016 Actor LLC. <https://actor.im>\n */\n\nimport { map, debounce } from 'lodash';\nimport React, { Component, PropTypes } from 'react';\nimport { findDOMNode } from 'react-dom';\nimport { Container } from 'flux/utils';\nimport classnames from 'classnames';\nimport { Link } from 'react-router';\n\nimport ArchiveActionCreators from '../actions/ArchiveActionCreators';\n\nimport ArchiveStore from '../stores/ArchiveStore';\n\nimport AvatarItem from './common/AvatarItem.react';\nimport ConnectionState from './common/ConnectionState.react';\nimport Scrollbar from './common/Scrollbar.react';\n\nclass Archive extends Component {\n  constructor(props){\n    super(props);\n  }\n\n  static getStores() {\n    return [ArchiveStore];\n  }\n\n  static calculateState() {\n    return {\n      isLoading: ArchiveStore.isArchiveLoading(),\n      isInitialLoadingComplete: ArchiveStore.isInitialLoadingComplete(),\n      isAllLoaded: ArchiveStore.isAllLoaded(),\n      dialogs: ArchiveStore.getDialogs()\n    }\n  }\n\n  static contextTypes = {\n    intl: PropTypes.object\n  };\n\n  componentWillMount() {\n    ArchiveActionCreators.loadArchivedDialogs();\n  }\n\n  componentDidUpdate() {\n    const { isInitialLoadingComplete, isAllLoaded, isLoading } = this.state;\n    if (isInitialLoadingComplete && !isAllLoaded && !isLoading) {\n      const scrollNode = findDOMNode(this.refs.archiveScroll);\n      const scrollContent = scrollNode.getElementsByClassName('ss-content')[0];\n      if (scrollContent.scrollHeight < scrollNode.scrollHeight) {\n        setImmediate(() => {\n          ArchiveActionCreators.loadMoreArchivedDialogs();\n        });\n      }\n    }\n  }\n\n  loadArchiveByScroll = debounce(() => {\n    const { isAllLoaded, isLoading } = this.state;\n    const threshold = 100;\n    if (!isLoading && !isAllLoaded) {\n      const scrollNode = findDOMNode(this.refs.archiveScroll);\n      const scrollArea = scrollNode.getElementsByClassName('ss-scrollarea')[0];\n\n      if (scrollNode.scrollHeight + scrollArea.scrollTop > scrollArea.scrollHeight - threshold) {\n        ArchiveActionCreators.loadMoreArchivedDialogs();\n      }\n    }\n  }, 5, { maxWait: 30 });\n\n  render() {\n    const { isLoading, dialogs } = this.state;\n    const archiveClassname = classnames('archive-section', {\n      'archive-section--loading': isLoading\n    });\n\n    const dialogsList = map(dialogs, (dialog, index) => {\n      const { counter, peer } = dialog;\n\n      return (\n        <div className=\"archive-section__list__item col-xs-12 col-sm-6 col-md-4 col-lg-3\" key={index}>\n          <Link to={`/im/${peer.peer.key}`} className=\"archive-item row\">\n            <div className=\"archive-item__avatar\">\n              <AvatarItem image={peer.avatar}\n                          placeholder={peer.placeholder}\n                          size=\"medium\"\n                          title={peer.title}/>\n              {\n                counter !== 0\n                  ? <div className=\"archive-item__counter\">{counter}</div>\n                  : null\n              }\n            </div>\n            <div className=\"col-xs\">\n              <h4 className=\"archive-item__title\">{peer.title}</h4>\n            </div>\n          </Link>\n        </div>\n      )\n    });\n\n    return (\n      <section className=\"main\">\n        <header className=\"toolbar row\">\n          <h3>Archive</h3>\n        </header>\n        <ConnectionState/>\n        <div className=\"flexrow\">\n          <section className={archiveClassname}>\n            <Scrollbar ref=\"archiveScroll\" onScroll={this.loadArchiveByScroll}>\n              <div className=\"archive-section__list row\">\n                {\n                  dialogs.length !== 0\n                    ? dialogsList\n                    : !isLoading\n                        ? <div className=\"archive-section__list__item archive-section__list__item--empty col-xs-12\">\n                            <h3>No dialogs in archive</h3>\n                          </div>\n                        : null\n                }\n                {\n                  isLoading\n                    ? <div className=\"archive-section__list__item archive-section__list__item--loading col-xs-12 col-sm-6 col-md-4 col-lg-3\">\n                        <div className=\"preloader\"><div/><div/><div/><div/><div/></div>\n                      </div>\n                    : null\n                }\n              </div>\n            </Scrollbar>\n          </section>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default Container.create(Archive, { pure: false });\n"]}