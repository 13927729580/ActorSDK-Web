{"version":3,"sources":["../../src/components/Archive.react.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAkBM,OAAO;YAAP,OAAO;;AACX,WADI,OAAO,CACC,KAAK,EAAC;0BADd,OAAO;;kEAAP,OAAO,aAEH,KAAK;GACZ;;eAHG,OAAO;;yCAkBU;AACnB,sCAAsB,mBAAmB,EAAE,CAAC;KAC7C;;;6BAEQ;mBACwB,IAAI,CAAC,KAAK;UAAjC,SAAS,UAAT,SAAS;UAAE,OAAO,UAAP,OAAO;;AAE1B,UAAM,gBAAgB,GAAG,0BAAW,iBAAiB,EAAE;AACrD,kCAA0B,EAAE,SAAS;OACtC,CAAC,CAAC;;AAEH,UAAM,WAAW,GAAG,iBAAI,OAAO,EAAE,UAAC,MAAM,EAAE,KAAK,EAAK;YAC1C,OAAO,GAAW,MAAM,CAAxB,OAAO;YAAE,IAAI,GAAK,MAAM,CAAf,IAAI;;AAErB,eACE;;YAAK,SAAS,EAAC,yDAAyD,EAAC,GAAG,EAAE,KAAK,AAAC;UAClF;;cAAM,EAAE,WAAS,IAAI,CAAC,IAAI,CAAC,GAAG,AAAG,EAAC,SAAS,EAAC,kBAAkB;YAC5D;;gBAAK,SAAS,EAAC,sBAAsB;cACnC,sDAAY,KAAK,EAAE,IAAI,CAAC,MAAM,AAAC;AACnB,2BAAW,EAAE,IAAI,CAAC,WAAW,AAAC;AAC9B,oBAAI,EAAC,QAAQ;AACb,qBAAK,EAAE,IAAI,CAAC,KAAK,AAAC,GAAE;cAE9B,OAAO,KAAK,CAAC,GACT;;kBAAK,SAAS,EAAC,uBAAuB;gBAAE,OAAO;eAAO,GACtD,IAAI;aAEN;YACN;;gBAAK,SAAS,EAAC,QAAQ;cACrB;;kBAAI,SAAS,EAAC,qBAAqB;gBAAE,IAAI,CAAC,KAAK;eAAM;aACjD;WACD;SACH,CACP;OACF,CAAC,CAAC;;AAEH,aACE;;UAAS,SAAS,EAAC,MAAM;QACvB;;YAAQ,SAAS,EAAC,aAAa;UAC7B;;;;WAAgB;SACT;QACT,8DAAkB;QAClB;;YAAK,SAAS,EAAC,SAAS;UACtB;;cAAS,SAAS,EAAE,gBAAgB,AAAC;YACnC;;;cACE;;kBAAK,SAAS,EAAC,2BAA2B;gBAEtC,OAAO,CAAC,MAAM,KAAK,CAAC,GAChB,WAAW,GACX,CAAC,SAAS,GACN;;oBAAK,SAAS,EAAC,0EAA0E;kBACvF;;;;mBAA8B;iBAC1B,GACN,IAAI;gBAGZ,SAAS,GACL;;oBAAK,SAAS,EAAC,4EAA4E;kBACzF;;sBAAK,SAAS,EAAC,WAAW;oBAAC,0CAAM;oBAAA,0CAAM;oBAAA,0CAAM;oBAAA,0CAAM;oBAAA,0CAAM;mBAAM;iBAC3D,GACN,IAAI;eAEN;aACI;WACJ;SACN;OACE,CACV;KACH;;;qCA/EuB;AACtB,aAAO;AACL,iBAAS,EAAE,uBAAa,gBAAgB,EAAE;AAC1C,eAAO,EAAE,uBAAa,UAAU,EAAE;OACnC,CAAA;KACF;;;SAZG,OAAO;;;AAAP,OAAO,CAKJ,SAAS,GAAG;SAAM,wBAAc;CAAA;;AALnC,OAAO,CAcJ,YAAY,GAAG;AACpB,MAAI,EAAE,iBAAU,MAAM;CACvB;kBAyEY,iBAAU,MAAM,CAAC,OAAO,EAAE,EAAC,IAAI,EAAE,KAAK,EAAC,CAAC","file":"Archive.react.js","sourcesContent":["/*\n * Copyright (C) 2016 Actor LLC. <https://actor.im>\n */\n\nimport { map } from 'lodash';\nimport React, { Component, PropTypes } from 'react';\nimport { Container } from 'flux/utils';\nimport classnames from 'classnames';\nimport { Link } from 'react-router';\n\nimport ArchiveActionCreators from '../actions/ArchiveActionCreators';\n\nimport ArchiveStore from '../stores/ArchiveStore';\n\nimport AvatarItem from './common/AvatarItem.react';\nimport ConnectionState from './common/ConnectionState.react';\nimport Scrollbar from './common/Scrollbar.react';\n\nclass Archive extends Component {\n  constructor(props){\n    super(props);\n  }\n\n  static getStores = () => [ArchiveStore];\n\n  static calculateState() {\n    return {\n      isLoading: ArchiveStore.isArchiveLoading(),\n      dialogs: ArchiveStore.getDialogs()\n    }\n  };\n\n  static contextTypes = {\n    intl: PropTypes.object\n  };\n\n  componentWillMount() {\n    ArchiveActionCreators.loadArchivedDialogs();\n  }\n\n  render() {\n    const { isLoading, dialogs } = this.state;\n\n    const archiveClassname = classnames('archive-section', {\n      'archive-section--loading': isLoading\n    });\n\n    const dialogsList = map(dialogs, (dialog, index) => {\n      const { counter, peer } = dialog;\n\n      return (\n        <div className=\"archive-section__list__item col-xs-12 col-sm-6 col-md-4\" key={index}>\n          <Link to={`/im/${peer.peer.key}`} className=\"archive-item row\">\n            <div className=\"archive-item__avatar\">\n              <AvatarItem image={peer.avatar}\n                          placeholder={peer.placeholder}\n                          size=\"medium\"\n                          title={peer.title}/>\n              {\n                counter !== 0\n                  ? <div className=\"archive-item__counter\">{counter}</div>\n                  : null\n              }\n            </div>\n            <div className=\"col-xs\">\n              <h4 className=\"archive-item__title\">{peer.title}</h4>\n            </div>\n          </Link>\n        </div>\n      )\n    });\n\n    return (\n      <section className=\"main\">\n        <header className=\"toolbar row\">\n          <h3>Archive</h3>\n        </header>\n        <ConnectionState/>\n        <div className=\"flexrow\">\n          <section className={archiveClassname}>\n            <Scrollbar>\n              <div className=\"archive-section__list row\">\n                {\n                  dialogs.length !== 0\n                    ? dialogsList\n                    : !isLoading\n                        ? <div className=\"archive-section__list__item archive-section__list__item--empty col-xs-12\">\n                            <h3>No dialogs in archive</h3>\n                          </div>\n                        : null\n                }\n                {\n                  isLoading\n                    ? <div className=\"archive-section__list__item archive-section__list__item--loading col-xs-12\">\n                        <div className=\"preloader\"><div/><div/><div/><div/><div/></div>\n                      </div>\n                    : null\n                }\n              </div>\n            </Scrollbar>\n          </section>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default Container.create(Archive, {pure: false});\n"]}