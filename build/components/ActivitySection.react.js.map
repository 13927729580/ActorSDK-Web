{"version":3,"sources":["../../src/components/ActivitySection.react.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAaA,IAAM,kBAAkB,GAAG,SAArB,kBAAkB,GAAS;AAC/B,SAAO;AACL,YAAQ,EAAE,wBAAc,WAAW,EAAE;AACrC,UAAM,EAAE,wBAAc,MAAM,EAAE;GAC/B,CAAC;CACH,CAAC;;IAEI,eAAe;YAAf,eAAe;;AACnB,WADI,eAAe,CACP,KAAK,EAAE;0BADf,eAAe;;uEAAf,eAAe,aAEX,KAAK;;UAwCb,QAAQ,GAAG;aAAM,MAAK,QAAQ,CAAC,kBAAkB,EAAE,CAAC;KAAA;;AAtClD,UAAK,KAAK,GAAG,kBAAkB,EAAE,CAAC;;AAElC,4BAAc,iBAAiB,CAAC,MAAK,QAAQ,CAAC,CAAC;;GAChD;;eAPG,eAAe;;2CASI;AACrB,8BAAc,oBAAoB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KACnD;;;6BAEQ;mBACsB,IAAI,CAAC,KAAK;UAA/B,QAAQ,UAAR,QAAQ;UAAE,MAAM,UAAN,MAAM;;AAExB,UAAI,QAAQ,KAAK,IAAI,EAAE;AACrB,YAAM,iBAAiB,GAAG,0BAAW,UAAU,EAAE;AAC/C,2BAAiB,EAAE,MAAM;SAC1B,CAAC,CAAC;AACH,YAAI,YAAY,YAAA,CAAC;;AAEjB,gBAAQ,QAAQ,CAAC,IAAI;AACnB,eAAK,mBArCJ,aAAa,CAqCK,YAAY;AAC7B,wBAAY,GAAG,uDAAa,IAAI,EAAE,QAAQ,CAAC,IAAI,AAAC,GAAE,CAAC;AACnD,kBAAM;AAAA,AACR,eAAK,mBAxCJ,aAAa,CAwCK,aAAa;AAC9B,wBAAY,GAAG,wDAAc,KAAK,EAAE,QAAQ,CAAC,KAAK,AAAC,GAAE,CAAC;AACtD,kBAAM;AAAA,AACR,kBAAQ;SACT;;AAED,eACE;;YAAS,SAAS,EAAE,iBAAiB,AAAC;UACnC,YAAY;SACL,CACV;OACH,MAAM;AACL,eAAO,IAAI,CAAC;OACb;KACF;;;SAxCG,eAAe;UAhBL,SAAS;;kBA6DV,eAAe","file":"ActivitySection.react.js","sourcesContent":["/*\n * Copyright (C) 2015 Actor LLC. <https://actor.im>\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { ActivityTypes } from '../constants/ActorAppConstants';\n\nimport ActivityStore from '../stores/ActivityStore';\n\nimport UserProfile from './activity/UserProfile.react';\nimport GroupProfile from './activity/GroupProfile.react';\n\nconst getStateFromStores = () => {\n  return {\n    activity: ActivityStore.getActivity(),\n    isOpen: ActivityStore.isOpen()\n  };\n};\n\nclass ActivitySection extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = getStateFromStores();\n\n    ActivityStore.addChangeListener(this.onChange);\n  }\n\n  componentWillUnmount() {\n    ActivityStore.removeChangeListener(this.onChange);\n  }\n\n  render() {\n    const { activity, isOpen } = this.state;\n\n    if (activity !== null) {\n      const activityClassName = classNames('activity', {\n        'activity--shown': isOpen\n      });\n      let activityBody;\n\n      switch (activity.type) {\n        case ActivityTypes.USER_PROFILE:\n          activityBody = <UserProfile user={activity.user}/>;\n          break;\n        case ActivityTypes.GROUP_PROFILE:\n          activityBody = <GroupProfile group={activity.group}/>;\n          break;\n        default:\n      }\n\n      return (\n        <section className={activityClassName}>\n          {activityBody}\n        </section>\n      );\n    } else {\n      return null;\n    }\n  }\n\n  onChange = () => this.setState(getStateFromStores());\n}\n\nexport default ActivitySection;\n"]}