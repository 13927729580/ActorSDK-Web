{"version":3,"sources":["../../../src/components/dialog/MessagesSection.react.js"],"names":[],"mappings":"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","file":"MessagesSection.react.js","sourcesContent":["/*\n * Copyright (C) 2015 Actor LLC. <https://actor.im>\n */\n\nimport { forEach, map, debounce } from 'lodash';\n\nimport React, { Component, PropTypes } from 'react';\nimport ActorClient from '../../utils/ActorClient';\n\nimport { MessageContentTypes, PeerTypes } from '../../constants/ActorAppConstants';\n\nimport MessageActionCreators from '../../actions/MessageActionCreators';\n\nimport VisibilityStore from '../../stores/VisibilityStore';\nimport GroupStore from '../../stores/GroupStore';\nimport DialogStore from '../../stores/DialogStore';\nimport MessageStore from '../../stores/MessageStore';\n\nimport MessageItem from './messages/MessageItem.react';\nimport Welcome from './messages/Welcome.react';\n\nlet _delayed = [];\n\nlet flushDelayed = () => {\n  forEach(_delayed, (p) => MessageActionCreators.setMessageShown(p.peer, p.message));\n  _delayed = [];\n};\n\nlet flushDelayedDebounced = debounce(flushDelayed, 30, 100);\n\nlet lastMessageDate = null,\n    lastMessageSenderId = null;\n\nconst isOnlyOneDay = (messages) => {\n  let _isOnlyOneDay = true;\n  if (messages.length > 0) {\n    let lastMessageDate = new Date(messages[0].fullDate);\n    forEach(messages, (message) => {\n      let currentMessageDate = new Date(message.fullDate);\n\n      if (lastMessageDate.getDate() !== currentMessageDate.getDate()) {\n        _isOnlyOneDay = false;\n      }\n      lastMessageDate = message.fullDate\n    });\n  }\n  return _isOnlyOneDay;\n};\n\nclass MessagesSection extends Component {\n  static propTypes = {\n    messages: PropTypes.array.isRequired,\n    peer: PropTypes.object.isRequired,\n    onScroll: PropTypes.func.isRequired\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isOnlyOneDay: isOnlyOneDay(props.messages),\n      selectedMessages: MessageStore.getSelected()\n    };\n\n    lastMessageDate = new Date();\n\n    VisibilityStore.addListener(this.onAppVisibilityChange);\n    MessageStore.addListener(this.onMessagesChange);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({isOnlyOneDay: isOnlyOneDay(nextProps.messages)});\n    lastMessageDate = new Date();\n  }\n\n  getMessagesListItem = (message, index) => {\n    const { isOnlyOneDay, selectedMessages } = this.state;\n    const { messages } = this.props;\n    const date = message.fullDate;\n\n    const isFirstMessage = index === 0;\n    const isThisLastMessage = index > (messages.length - 1) - 3;\n    const isNewDay = date.getDate() !== lastMessageDate.getDate();\n\n    let dateDivider = null;\n    if (isNewDay && !isOnlyOneDay) {\n      const dateDividerFormatOptions = { month: 'long', day: 'numeric' };\n      const dateDividerContent = new Intl.DateTimeFormat(undefined, dateDividerFormatOptions).format(date);\n      dateDivider = <li className=\"date-divider\">{dateDividerContent}</li>\n    }\n    const isSameSender = message.sender.peer.id === lastMessageSenderId && !isFirstMessage && !isNewDay;\n\n    const isSelected = selectedMessages.has(message.rid);\n\n    const messageItem = (\n      <MessageItem key={message.sortKey}\n                   message={message}\n                   isNewDay={isNewDay}\n                   isSameSender={isSameSender}\n                   isThisLastMessage={isThisLastMessage}\n                   onSelect={this.handleMessageSelect}\n                   isSelected={isSelected}\n                   onVisibilityChange={this.onMessageVisibilityChange}\n                   peer={this.props.peer}/>\n    );\n\n    lastMessageDate = date;\n    lastMessageSenderId = message.sender.peer.id;\n\n    return [dateDivider, messageItem];\n  };\n\n  onAppVisibilityChange = () => {\n    if (VisibilityStore.isAppVisible()) {\n      flushDelayed();\n    }\n  };\n\n  onMessagesChange = () => this.setState({selectedMessages: MessageStore.getSelected()});\n\n  handleMessageSelect = (rid) => {\n    const { selectedMessages } = this.state;\n    if (selectedMessages.has(rid)) {\n      MessageActionCreators.setSelected(selectedMessages.remove(rid));\n    } else {\n      MessageActionCreators.setSelected(selectedMessages.add(rid));\n    }\n  };\n\n  onMessageVisibilityChange = (message, isVisible) => {\n    const { peer } = this.props;\n\n    if (isVisible) {\n      _delayed.push({peer, message});\n      if (VisibilityStore.isAppVisible()) {\n        flushDelayedDebounced();\n      }\n    }\n  };\n\n  handleScroll = () => {\n    const { onScroll } = this.props;\n    onScroll && onScroll();\n  };\n\n  render() {\n    const { messages, peer } = this.props;\n    const messagesList = map(messages, this.getMessagesListItem);\n    const isMember = DialogStore.isMember();\n\n    const messagesLoading = (\n      <li className=\"message message--loading\">\n        <div className=\"message__body col-xs text-center\">\n          Loading messages from history\n        </div>\n      </li>\n    );\n\n    return (\n      <ul className=\"messages__list\" onScroll={this.handleScroll}>\n        {\n          isMember && messagesList.length < 30\n            ? <Welcome peer={peer}/>\n            : null\n        }\n        {\n          messagesList.length >= 30\n            ? messagesLoading\n            : null\n        }\n        {messagesList}\n      </ul>\n    );\n  }\n}\n\nexport default MessagesSection;\n"]}