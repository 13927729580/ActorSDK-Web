{"version":3,"sources":["../../../src/components/dialog/MessagesSection.react.js"],"names":[],"mappings":"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","file":"MessagesSection.react.js","sourcesContent":["/*\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\n */\n\nimport { forEach, map, debounce, isFunction } from 'lodash';\n\nimport React, { Component, PropTypes } from 'react';\nimport { Container } from 'flux/utils';\nimport Scrollbar from '../common/Scrollbar.react';\n\nimport MessageActionCreators from '../../actions/MessageActionCreators';\n\nimport VisibilityStore from '../../stores/VisibilityStore';\nimport DialogStore from '../../stores/DialogStore';\nimport MessageStore from '../../stores/MessageStore';\n\nimport DefaultMessageItem from './messages/MessageItem.react';\nimport MessagesList from './MessagesList.react';\n\n\nlet _delayed = [];\nlet flushDelayed = () => {\n  forEach(_delayed, (p) => MessageActionCreators.setMessageShown(p.peer, p.message));\n  _delayed = [];\n};\n\nlet flushDelayedDebounced = debounce(flushDelayed, 30, {maxWait: 100});\n\nclass MessagesSection extends Component {\n  static propTypes = {\n    messages: PropTypes.array.isRequired,\n    overlay: PropTypes.array.isRequired,\n    peer: PropTypes.object.isRequired,\n    onScroll: PropTypes.func.isRequired\n  };\n\n  static contextTypes = {\n    delegate: PropTypes.object\n  };\n\n  static getStores() {\n    return [MessageStore, VisibilityStore]\n  }\n\n  static calculateState() {\n    return {\n      selectedMessages: MessageStore.getSelected(),\n      isAllMessagesLoaded: MessageStore.isLoaded(),\n      isAppVisible: VisibilityStore.isAppVisible()\n    }\n  }\n\n  componentDidUpdate() {\n    const { isAppVisible } = this.state;\n    if (isAppVisible) {\n      flushDelayed();\n    }\n  };\n\n  onMessageSelect = (rid) => {\n    const { selectedMessages } = this.state;\n    if (selectedMessages.has(rid)) {\n      MessageActionCreators.setSelected(selectedMessages.remove(rid));\n    } else {\n      MessageActionCreators.setSelected(selectedMessages.add(rid));\n    }\n  };\n\n  onMessageVisibilityChange = (message, isVisible) => {\n    const { peer } = this.props;\n\n    if (isVisible) {\n      _delayed.push({peer, message});\n      if (VisibilityStore.isAppVisible()) {\n        flushDelayedDebounced();\n      }\n    }\n  };\n\n  getComponents() {\n    const {dialog, messages} = this.context.delegate.components;\n    if (dialog && dialog.messages && isFunction(dialog.messages.message)) {\n      return {\n        MessageItem: dialog.messages.message\n      };\n    }\n\n    return {\n      MessageItem: DefaultMessageItem\n    };\n  }\n\n  render() {\n    const { peer, overlay, messages } = this.props;\n    const { selectedMessages, isAllMessagesLoaded } = this.state;\n    const isMember = DialogStore.isMember();\n\n    const components = this.getComponents();\n\n    return (\n      <Scrollbar onScroll={this.props.onScroll} ref=\"messagesScroll\">\n        <MessagesList\n          peer={peer}\n          overlay={overlay}\n          messages={messages}\n          selectedMessages={selectedMessages}\n          isMember={isMember}\n          isAllMessagesLoaded={isAllMessagesLoaded}\n          components={components}\n          onSelect={this.onMessageSelect}\n          onVisibilityChange={this.onMessageVisibilityChange}\n        />\n      </Scrollbar>\n    );\n  }\n}\n\nexport default Container.create(MessagesSection, {pure: false, withProps: true});\n"]}