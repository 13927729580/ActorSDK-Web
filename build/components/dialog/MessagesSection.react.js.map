{"version":3,"sources":["../../../src/components/dialog/MessagesSection.react.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoBA,IAAI,QAAQ,GAAG,EAAE,CAAC;;AAElB,IAAI,YAAY,GAAG,SAAf,YAAY,GAAS;AACvB,uBAAQ,QAAQ,EAAE,UAAC,CAAC;WAAK,gCAAsB,eAAe,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,OAAO,CAAC;GAAA,CAAC,CAAC;AACnF,UAAQ,GAAG,EAAE,CAAC;CACf,CAAC;;AAEF,IAAI,qBAAqB,GAAG,sBAAS,YAAY,EAAE,EAAE,EAAE,EAAC,OAAO,EAAE,GAAG,EAAC,CAAC,CAAC;;IAEjE,eAAe;YAAf,eAAe;;eAAf,eAAe;;gCAYA;AACjB,aAAO,mDAA+B,CAAA;KACvC;;;qCAEuB;AACtB,aAAO;AACL,wBAAgB,EAAE,uBAAa,WAAW,EAAE;AAC5C,2BAAmB,EAAE,uBAAa,QAAQ,EAAE;AAC5C,oBAAY,EAAE,0BAAgB,YAAY,EAAE;OAC7C,CAAA;KACF;;;AAED,WAxBI,eAAe,CAwBP,KAAK,EAAE;0BAxBf,eAAe;;uEAAf,eAAe,aAyBX,KAAK;;UAUb,mBAAmB,GAAG,UAAC,GAAG,EAAK;UACrB,gBAAgB,GAAK,MAAK,KAAK,CAA/B,gBAAgB;;AACxB,UAAI,gBAAgB,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;AAC7B,wCAAsB,WAAW,CAAC,gBAAgB,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;OACjE,MAAM;AACL,wCAAsB,WAAW,CAAC,gBAAgB,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;OAC9D;KACF;;UAED,yBAAyB,GAAG,UAAC,OAAO,EAAE,SAAS,EAAK;UAC1C,IAAI,GAAK,MAAK,KAAK,CAAnB,IAAI;;AAEZ,UAAI,SAAS,EAAE;AACb,gBAAQ,CAAC,IAAI,CAAC,EAAC,IAAI,EAAJ,IAAI,EAAE,OAAO,EAAP,OAAO,EAAC,CAAC,CAAC;AAC/B,YAAI,0BAAgB,YAAY,EAAE,EAAE;AAClC,+BAAqB,EAAE,CAAC;SACzB;OACF;KACF;;UAED,YAAY,GAAG,YAAM;UACX,QAAQ,GAAK,MAAK,KAAK,CAAvB,QAAQ;;AAChB,cAAQ,IAAI,QAAQ,EAAE,CAAC;KACxB;;;GAhCA;;eA1BG,eAAe;;yCA4BE;UACX,YAAY,GAAK,IAAI,CAAC,KAAK,CAA3B,YAAY;;AACpB,UAAI,YAAY,EAAE;AAChB,oBAAY,EAAE,CAAC;OAChB;KACF;;;6BA2BQ;;;mBACoB,IAAI,CAAC,KAAK;UAA7B,QAAQ,UAAR,QAAQ;UAAE,IAAI,UAAJ,IAAI;UACd,QAAQ,GAAK,IAAI,CAAC,OAAO,CAAzB,QAAQ;UACR,mBAAmB,GAAK,IAAI,CAAC,KAAK,CAAlC,mBAAmB;;AAC3B,UAAM,QAAQ,GAAG,sBAAY,QAAQ,EAAE,CAAC;;AAExC,UAAI,WAAW,YAAA,CAAC;AAChB,UAAI,QAAQ,CAAC,UAAU,CAAC,MAAM,KAAK,IAAI,EAAE;AACvC,YAAI,QAAQ,CAAC,UAAU,CAAC,MAAM,CAAC,QAAQ,IAAI,QAAQ,CAAC,UAAU,CAAC,MAAM,CAAC,QAAQ,KAAK,IAAI,IAAI,OAAO,QAAQ,CAAC,UAAU,CAAC,QAAQ,KAAK,UAAU,EAAE;AAC7I,qBAAW,GAAG,AAAC,OAAO,QAAQ,CAAC,UAAU,CAAC,MAAM,CAAC,QAAQ,CAAC,OAAO,KAAK,UAAU,GAAI,QAAQ,CAAC,UAAU,CAAC,MAAM,CAAC,QAAQ,CAAC,OAAO,wBAAqB,CAAC;SACtJ,MAAM;AACL,qBAAW,wBAAqB,CAAC;SAClC;OACF,MAAM;AACL,mBAAW,wBAAqB,CAAC;OAClC;;AAED,UAAM,YAAY,GAAG,iBAAI,QAAQ,EAAE,UAAC,OAAO,EAAE,KAAK,EAAK;YAC7C,gBAAgB,GAAK,OAAK,KAAK,CAA/B,gBAAgB;sBACE,OAAK,KAAK;YAA5B,IAAI,WAAJ,IAAI;YAAE,OAAO,WAAP,OAAO;;AAErB,YAAM,WAAW,GAAG,AAAC,OAAO,CAAC,KAAK,CAAC,IAAI,OAAO,CAAC,KAAK,CAAC,CAAC,WAAW,GAC9D;;YAAI,SAAS,EAAC,cAAc;UAAE,OAAO,CAAC,KAAK,CAAC,CAAC,WAAW;SAAM,GAC9D,IAAI,CAAC;;AAER,YAAM,WAAW,GACf,8BAAC,WAAW,IAAC,GAAG,EAAE,OAAO,CAAC,OAAO,AAAC;AACrB,iBAAO,EAAE,OAAO,AAAC;AACjB,iBAAO,EAAE,OAAO,CAAC,KAAK,CAAC,AAAC;AACxB,kBAAQ,EAAE,OAAK,mBAAmB,AAAC;AACnC,oBAAU,EAAE,gBAAgB,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,AAAC;AAC9C,4BAAkB,EAAE,OAAK,yBAAyB,AAAC;AACnD,cAAI,EAAE,IAAI,AAAC,GAAE,AAC3B,CAAC;;AAEF,eAAO,WAAW,GAAG,CAAC,WAAW,EAAE,WAAW,CAAC,GAAG,WAAW,CAAC;OAC/D,CAAC,CAAC;;AAEH,aACE;;UAAW,QAAQ,EAAE,IAAI,CAAC,YAAY,AAAC,EAAC,GAAG,EAAC,gBAAgB;QAC1D;;YAAI,SAAS,EAAC,gBAAgB;UAE1B,AAAC,QAAQ,IAAI,mBAAmB,IAAM,QAAQ,IAAI,YAAY,CAAC,MAAM,GAAG,EAAE,AAAC,GACvE,mDAAS,IAAI,EAAE,IAAI,AAAC,GAAE,GACtB,IAAI;UAGR,CAAC,mBAAmB,IAAI,YAAY,CAAC,MAAM,IAAI,EAAE,GAC7C,sDAAU,GACV,IAAI;UAET,YAAY;SACV;OACK,CACZ;KACH;;;SAnHG,eAAe;;;AAAf,eAAe,CACZ,SAAS,GAAG;AACjB,UAAQ,EAAE,iBAAU,KAAK,CAAC,UAAU;AACpC,SAAO,EAAE,iBAAU,KAAK,CAAC,UAAU;AACnC,MAAI,EAAE,iBAAU,MAAM,CAAC,UAAU;AACjC,UAAQ,EAAE,iBAAU,IAAI,CAAC,UAAU;CACpC;AANG,eAAe,CAQZ,YAAY,GAAG;AACpB,UAAQ,EAAE,iBAAU,MAAM;CAC3B;kBA4GY,iBAAU,MAAM,CAAC,eAAe,EAAE,EAAC,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE,IAAI,EAAC,CAAC","file":"MessagesSection.react.js","sourcesContent":["/*\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\n */\n\nimport { forEach, map, debounce } from 'lodash';\n\nimport React, { Component, PropTypes } from 'react';\nimport { Container } from 'flux/utils';\nimport Scrollbar from '../common/Scrollbar.react';\n\nimport MessageActionCreators from '../../actions/MessageActionCreators';\n\nimport VisibilityStore from '../../stores/VisibilityStore';\nimport DialogStore from '../../stores/DialogStore';\nimport MessageStore from '../../stores/MessageStore';\n\nimport DefaultMessageItem from './messages/MessageItem.react';\nimport Welcome from './messages/Welcome.react';\nimport Loading from './messages/Loading.react';\n\nlet _delayed = [];\n\nlet flushDelayed = () => {\n  forEach(_delayed, (p) => MessageActionCreators.setMessageShown(p.peer, p.message));\n  _delayed = [];\n};\n\nlet flushDelayedDebounced = debounce(flushDelayed, 30, {maxWait: 100});\n\nclass MessagesSection extends Component {\n  static propTypes = {\n    messages: PropTypes.array.isRequired,\n    overlay: PropTypes.array.isRequired,\n    peer: PropTypes.object.isRequired,\n    onScroll: PropTypes.func.isRequired\n  };\n\n  static contextTypes = {\n    delegate: PropTypes.object\n  };\n\n  static getStores() {\n    return [MessageStore, VisibilityStore]\n  }\n\n  static calculateState() {\n    return {\n      selectedMessages: MessageStore.getSelected(),\n      isAllMessagesLoaded: MessageStore.isLoaded(),\n      isAppVisible: VisibilityStore.isAppVisible()\n    }\n  }\n\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidUpdate() {\n    const { isAppVisible } = this.state;\n    if (isAppVisible) {\n      flushDelayed();\n    }\n  };\n\n  handleMessageSelect = (rid) => {\n    const { selectedMessages } = this.state;\n    if (selectedMessages.has(rid)) {\n      MessageActionCreators.setSelected(selectedMessages.remove(rid));\n    } else {\n      MessageActionCreators.setSelected(selectedMessages.add(rid));\n    }\n  };\n\n  onMessageVisibilityChange = (message, isVisible) => {\n    const { peer } = this.props;\n\n    if (isVisible) {\n      _delayed.push({peer, message});\n      if (VisibilityStore.isAppVisible()) {\n        flushDelayedDebounced();\n      }\n    }\n  };\n\n  handleScroll = () => {\n    const { onScroll } = this.props;\n    onScroll && onScroll();\n  };\n\n  render() {\n    const { messages, peer } = this.props;\n    const { delegate } = this.context;\n    const { isAllMessagesLoaded } = this.state;\n    const isMember = DialogStore.isMember();\n\n    let MessageItem;\n    if (delegate.components.dialog !== null) {\n      if (delegate.components.dialog.messages && delegate.components.dialog.messages !== null && typeof delegate.components.messages !== 'function') {\n        MessageItem = (typeof delegate.components.dialog.messages.message === 'function') ? delegate.components.dialog.messages.message : DefaultMessageItem;\n      } else {\n        MessageItem = DefaultMessageItem;\n      }\n    } else {\n      MessageItem = DefaultMessageItem;\n    }\n\n    const messagesList = map(messages, (message, index) => {\n      const { selectedMessages } = this.state;\n      const { peer, overlay } = this.props;\n\n      const dateDivider = (overlay[index] && overlay[index].dateDivider)\n       ? <li className=\"date-divider\">{overlay[index].dateDivider}</li>\n       : null;\n\n      const messageItem = (\n        <MessageItem key={message.sortKey}\n                     message={message}\n                     overlay={overlay[index]}\n                     onSelect={this.handleMessageSelect}\n                     isSelected={selectedMessages.has(message.rid)}\n                     onVisibilityChange={this.onMessageVisibilityChange}\n                     peer={peer}/>\n      );\n\n      return dateDivider ? [dateDivider, messageItem] : messageItem;\n    });\n\n    return (\n      <Scrollbar onScroll={this.handleScroll} ref=\"messagesScroll\">\n        <ul className=\"messages__list\">\n          {\n            (isMember && isAllMessagesLoaded) || (isMember && messagesList.length < 30)\n              ? <Welcome peer={peer}/>\n              : null\n          }\n          {\n            !isAllMessagesLoaded && messagesList.length >= 30\n              ? <Loading/>\n              : null\n          }\n          {messagesList}\n        </ul>\n      </Scrollbar>\n    );\n  }\n}\n\nexport default Container.create(MessagesSection, {pure: false, withProps: true});\n"]}