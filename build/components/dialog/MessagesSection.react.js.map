{"version":3,"sources":["../../../src/components/dialog/MessagesSection.react.js"],"names":[],"mappings":"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","file":"MessagesSection.react.js","sourcesContent":["/*\n * Copyright (C) 2015 Actor LLC. <https://actor.im>\n */\n\nimport { forEach, map, debounce } from 'lodash';\n\nimport React, { Component } from 'react';\nimport ActorClient from '../../utils/ActorClient';\n\nimport { MessageContentTypes, PeerTypes } from '../../constants/ActorAppConstants';\n\nimport MessageActionCreators from '../../actions/MessageActionCreators';\n\nimport VisibilityStore from '../../stores/VisibilityStore';\nimport GroupStore from '../../stores/GroupStore';\nimport DialogStore from '../../stores/DialogStore';\n\nimport MessageItem from './messages/MessageItem.react';\nimport Welcome from './messages/Welcome.react';\n\nlet _delayed = [];\n\nlet flushDelayed = () => {\n  forEach(_delayed, (p) => MessageActionCreators.setMessageShown(p.peer, p.message));\n  _delayed = [];\n};\n\nlet flushDelayedDebounced = debounce(flushDelayed, 30, 100);\n\nlet lastMessageDate = null,\n    lastMessageSenderId = null;\n\nconst isOnlyOneDay = (messages) => {\n  let _isOnlyOneDay = true;\n  if (messages.length > 0) {\n    let lastMessageDate = new Date(messages[0].fullDate);\n    forEach(messages, (message) => {\n      let currentMessageDate = new Date(message.fullDate);\n\n      if (lastMessageDate.getDate() !== currentMessageDate.getDate()) {\n        _isOnlyOneDay = false;\n      }\n      lastMessageDate = message.fullDate\n    });\n  }\n  return _isOnlyOneDay;\n};\n\nclass MessagesSection extends Component {\n  static propTypes = {\n    messages: React.PropTypes.array.isRequired,\n    peer: React.PropTypes.object.isRequired\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isOnlyOneDay: isOnlyOneDay(props.messages)\n    };\n\n    lastMessageDate = new Date();\n\n    VisibilityStore.addListener(this.onAppVisibilityChange);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({isOnlyOneDay: isOnlyOneDay(nextProps.messages)});\n    lastMessageDate = new Date();\n  }\n\n  getMessagesListItem = (message, index) => {\n    const { isOnlyOneDay } = this.state;\n    const date = message.fullDate;\n\n    const isFirstMessage = index === 0;\n    const isNewDay = date.getDate() !== lastMessageDate.getDate();\n\n    let dateDivider = null;\n    if (isNewDay && !isOnlyOneDay) {\n      const dateDividerFormatOptions = { month: 'long', day: 'numeric' };\n      const dateDividerContent = new Intl.DateTimeFormat(undefined, dateDividerFormatOptions).format(date);\n      dateDivider = <li className=\"date-divider\">{dateDividerContent}</li>\n    }\n    const isSameSender = message.sender.peer.id === lastMessageSenderId && !isFirstMessage && !isNewDay;\n\n    const messageItem = (\n      <MessageItem key={message.sortKey}\n                   message={message}\n                   isNewDay={isNewDay}\n                   isSameSender={isSameSender}\n                   onVisibilityChange={this.onMessageVisibilityChange}\n                   peer={this.props.peer}/>\n    );\n\n    lastMessageDate = date;\n    lastMessageSenderId = message.sender.peer.id;\n\n    return [dateDivider, messageItem];\n  };\n\n  onAppVisibilityChange = () => {\n    if (VisibilityStore.isAppVisible()) {\n      flushDelayed();\n    }\n  };\n\n  onMessageVisibilityChange = (message, isVisible) => {\n    const { peer } = this.props;\n\n    if (isVisible) {\n      _delayed.push({peer, message});\n      if (VisibilityStore.isAppVisible()) {\n        flushDelayedDebounced();\n      }\n    }\n  };\n\n  render() {\n    const { messages, peer } = this.props;\n    const messagesList = map(messages, this.getMessagesListItem);\n\n    let isMember = true;\n    if (peer.type === PeerTypes.GROUP) {\n      const group = GroupStore.getGroup(peer.id);\n      isMember = DialogStore.isGroupMember(group);\n    }\n\n    const messagesLoading = (\n      <li className=\"message message--loading\">\n        <div className=\"message__body col-xs text-center\">\n          Loading messages from history\n        </div>\n      </li>\n    );\n\n    return (\n      <ul className=\"messages__list\">\n        {\n          isMember && messagesList.length < 30\n            ? <Welcome peer={peer}/>\n            : null\n        }\n        {\n          messagesList.length >= 30\n            ? messagesLoading\n            : null\n        }\n        {messagesList}\n      </ul>\n    );\n  }\n}\n\nexport default MessagesSection;\n"]}