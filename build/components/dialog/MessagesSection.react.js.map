{"version":3,"sources":["../../../src/components/dialog/MessagesSection.react.js"],"names":[],"mappings":"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","file":"MessagesSection.react.js","sourcesContent":["/*\n * Copyright (C) 2015 Actor LLC. <https://actor.im>\n */\n\nimport { forEach, map, debounce } from 'lodash';\n\nimport React, { Component, PropTypes } from 'react';\nimport ActorClient from '../../utils/ActorClient';\n\nimport { MessageContentTypes, PeerTypes } from '../../constants/ActorAppConstants';\n\nimport MessageActionCreators from '../../actions/MessageActionCreators';\n\nimport VisibilityStore from '../../stores/VisibilityStore';\nimport GroupStore from '../../stores/GroupStore';\nimport DialogStore from '../../stores/DialogStore';\nimport MessageStore from '../../stores/MessageStore';\n\nimport MessageItem from './messages/MessageItem.react';\nimport Welcome from './messages/Welcome.react';\nimport Loading from './messages/Loading.react';\n\nlet _delayed = [];\n\nlet flushDelayed = () => {\n  forEach(_delayed, (p) => MessageActionCreators.setMessageShown(p.peer, p.message));\n  _delayed = [];\n};\n\nlet flushDelayedDebounced = debounce(flushDelayed, 30, {maxWait: 100});\n\nclass MessagesSection extends Component {\n  static propTypes = {\n    messages: PropTypes.array.isRequired,\n    overlay: PropTypes.array.isRequired,\n    peer: PropTypes.object.isRequired,\n    onScroll: PropTypes.func.isRequired\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selectedMessages: MessageStore.getSelected()\n    };\n\n    VisibilityStore.addListener(this.onAppVisibilityChange);\n    MessageStore.addListener(this.onMessagesChange);\n  }\n\n  getMessagesListItem = (message, index) => {\n    const { selectedMessages } = this.state;\n    const { overlay } = this.props;\n\n    const dateDivider = (overlay[index] && overlay[index].dateDivider)\n      ? <li className=\"date-divider\">{overlay[index].dateDivider}</li>\n      : null;\n\n    const isShortMessage = (overlay[index] && overlay[index].useShort)\n      ? overlay[index].useShort\n      : false;\n\n    const isSelected = selectedMessages.has(message.rid);\n\n    const messageItem = (\n      <MessageItem key={message.sortKey}\n                   message={message}\n                   isShortMessage={isShortMessage}\n                   onSelect={this.handleMessageSelect}\n                   isSelected={isSelected}\n                   onVisibilityChange={this.onMessageVisibilityChange}\n                   peer={this.props.peer}/>\n    );\n\n    return [dateDivider, messageItem];\n  };\n\n  onAppVisibilityChange = () => {\n    if (VisibilityStore.isAppVisible()) {\n      flushDelayed();\n    }\n  };\n\n  onMessagesChange = () => this.setState({selectedMessages: MessageStore.getSelected()});\n\n  handleMessageSelect = (rid) => {\n    const { selectedMessages } = this.state;\n    if (selectedMessages.has(rid)) {\n      MessageActionCreators.setSelected(selectedMessages.remove(rid));\n    } else {\n      MessageActionCreators.setSelected(selectedMessages.add(rid));\n    }\n  };\n\n  onMessageVisibilityChange = (message, isVisible) => {\n    const { peer } = this.props;\n\n    if (isVisible) {\n      _delayed.push({peer, message});\n      if (VisibilityStore.isAppVisible()) {\n        flushDelayedDebounced();\n      }\n    }\n  };\n\n  handleScroll = () => {\n    const { onScroll } = this.props;\n    onScroll && onScroll();\n  };\n\n  render() {\n    const { messages, peer } = this.props;\n    const messagesList = map(messages, this.getMessagesListItem);\n    const isMember = DialogStore.isMember();\n\n    return (\n      <ul className=\"messages__list\" onScroll={this.handleScroll}>\n        {\n          isMember && messagesList.length < 30\n            ? <Welcome peer={peer}/>\n            : null\n        }\n        {\n          messagesList.length >= 30\n            ? <Loading/>\n            : null\n        }\n        {messagesList}\n      </ul>\n    );\n  }\n}\n\nexport default MessagesSection;\n"]}