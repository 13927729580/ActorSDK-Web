{"version":3,"sources":["../../../src/components/dialog/MessagesSection.react.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAIA;;AAEA;;;;AACA;;AAEA;;;;AACA;;;;AAEA;;;;AACA;;;;AAEA;;;;;;;;;;AAGA,IAAI,WAAW,EAAX;AACJ,IAAI,eAAe,SAAf,YAAe,GAAM;AACvB,uBAAQ,QAAR,EAAkB,UAAC,CAAD;WAAO,gCAAsB,eAAtB,CAAsC,EAAE,IAAF,EAAQ,EAAE,OAAF;GAArD,CAAlB,CADuB;AAEvB,aAAW,EAAX,CAFuB;CAAN;;AAKnB,IAAI,wBAAwB,sBAAS,YAAT,EAAuB,EAAvB,EAA2B,EAAC,SAAS,GAAT,EAA5B,CAAxB;;IAEE;;;kBAMG,iCAAY;AACjB,WAAO,mDAAP,CADiB;;;AANf,kBAUG,2CAAiB;AACtB,WAAO;AACL,gBAAU,uBAAa,WAAb,EAAV;AACA,eAAS,uBAAa,UAAb,EAAT;AACA,qBAAe,uBAAa,sBAAb,EAAf;AACA,wBAAkB,uBAAa,WAAb,EAAlB;AACA,2BAAqB,uBAAa,QAAb,EAArB;AACA,oBAAc,0BAAgB,YAAhB,EAAd;KANF,CADsB;;;AAWxB,WArBI,eAqBJ,CAAY,KAAZ,EAAmB;wCArBf,iBAqBe;;+DACjB,sBAAM,KAAN,GADiB;;AAGjB,UAAK,QAAL,GAAgB,MAAK,QAAL,CAAc,IAAd,OAAhB,CAHiB;AAIjB,UAAK,UAAL,GAAkB,MAAK,UAAL,CAAgB,IAAhB,OAAlB,CAJiB;AAKjB,UAAK,kBAAL,GAA0B,MAAK,kBAAL,CAAwB,IAAxB,OAA1B,CALiB;;GAAnB;;AArBI,4BA6BJ,mDAAqB;QACX,eAAiB,KAAK,KAAL,CAAjB,aADW;;AAEnB,QAAI,YAAJ,EAAkB;AAChB,qBADgB;KAAlB;;;AA/BE,4BAoCJ,6BAAS,KAAK;QACJ,mBAAqB,KAAK,KAAL,CAArB,iBADI;;AAEZ,QAAI,iBAAiB,GAAjB,CAAqB,GAArB,CAAJ,EAA+B;AAC7B,sCAAsB,WAAtB,CAAkC,iBAAiB,MAAjB,CAAwB,GAAxB,CAAlC,EAD6B;KAA/B,MAEO;AACL,sCAAsB,WAAtB,CAAkC,iBAAiB,GAAjB,CAAqB,GAArB,CAAlC,EADK;KAFP;;;AAtCE,4BA6CJ,mCAAa;QACH,OAAS,KAAK,KAAL,CAAT,KADG;;AAEX,mCAAqB,gBAArB,CAAsC,IAAtC,EAFW;;;AA7CT,4BAkDJ,iDAAmB,SAAS,WAAW;QAC7B,OAAS,KAAK,KAAL,CAAT,KAD6B;;;AAGrC,QAAI,SAAJ,EAAe;AACb,eAAS,IAAT,CAAc,EAAC,UAAD,EAAO,gBAAP,EAAd,EADa;AAEb,UAAI,0BAAgB,YAAhB,EAAJ,EAAoC;AAClC,gCADkC;OAApC;KAFF;;;AArDE,4BA6DJ,2BAAS;iBACoB,KAAK,KAAL,CADpB;QACC,mBADD;QACO,2BADP;iBAE6E,KAAK,KAAL,CAF7E;QAEC,2BAFD;QAEW,yBAFX;QAEoB,qCAFpB;QAEmC,2CAFnC;QAEqD,iDAFrD;;;AAIP,WACE;AACE,YAAM,IAAN;AACA,eAAS,OAAT;AACA,gBAAU,QAAV;AACA,aAAO,aAAP;AACA,wBAAkB,gBAAlB;AACA,gBAAU,QAAV;AACA,2BAAqB,mBAArB;AACA,gBAAU,KAAK,QAAL;AACV,kBAAY,KAAK,UAAL;AACZ,0BAAoB,KAAK,kBAAL;KAVtB,CADF,CAJO;;;SA7DL;;;gBACG,YAAY;AACjB,QAAM,iBAAU,MAAV,CAAiB,UAAjB;AACN,YAAU,iBAAU,IAAV,CAAe,UAAf;;kBA+EC,iBAAU,MAAV,CAAiB,eAAjB,EAAkC,EAAC,WAAW,IAAX,EAAnC","file":"MessagesSection.react.js","sourcesContent":["/*\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\n */\n\nimport { forEach, debounce } from 'lodash';\n\nimport React, { Component, PropTypes } from 'react';\nimport { Container } from 'flux/utils';\n\nimport MessageActionCreators from '../../actions/MessageActionCreators';\nimport DialogActionCreators from '../../actions/DialogActionCreators';\n\nimport VisibilityStore from '../../stores/VisibilityStore';\nimport MessageStore from '../../stores/MessageStore';\n\nimport MessagesList from './MessagesList.react';\n\n\nlet _delayed = [];\nlet flushDelayed = () => {\n  forEach(_delayed, (p) => MessageActionCreators.setMessageShown(p.peer, p.message));\n  _delayed = [];\n};\n\nlet flushDelayedDebounced = debounce(flushDelayed, 30, {maxWait: 100});\n\nclass MessagesSection extends Component {\n  static propTypes = {\n    peer: PropTypes.object.isRequired,\n    isMember: PropTypes.bool.isRequired\n  };\n\n  static getStores() {\n    return [MessageStore, VisibilityStore];\n  }\n\n  static calculateState() {\n    return {\n      messages: MessageStore.getMessages(),\n      overlay: MessageStore.getOverlay(),\n      messagesCount: MessageStore.getRenderMessagesCount(),\n      selectedMessages: MessageStore.getSelected(),\n      isAllMessagesLoaded: MessageStore.isLoaded(),\n      isAppVisible: VisibilityStore.isAppVisible()\n    };\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.onSelect = this.onSelect.bind(this);\n    this.onLoadMore = this.onLoadMore.bind(this);\n    this.onVisibilityChange = this.onVisibilityChange.bind(this);\n  }\n\n  componentDidUpdate() {\n    const { isAppVisible } = this.state;\n    if (isAppVisible) {\n      flushDelayed();\n    }\n  }\n\n  onSelect(rid) {\n    const { selectedMessages } = this.state;\n    if (selectedMessages.has(rid)) {\n      MessageActionCreators.setSelected(selectedMessages.remove(rid));\n    } else {\n      MessageActionCreators.setSelected(selectedMessages.add(rid));\n    }\n  }\n\n  onLoadMore() {\n    const { peer } = this.props;\n    DialogActionCreators.loadMoreMessages(peer);\n  }\n\n  onVisibilityChange(message, isVisible) {\n    const { peer } = this.props;\n\n    if (isVisible) {\n      _delayed.push({peer, message});\n      if (VisibilityStore.isAppVisible()) {\n        flushDelayedDebounced();\n      }\n    }\n  }\n\n  render() {\n    const { peer, isMember } = this.props;\n    const { messages, overlay, messagesCount, selectedMessages, isAllMessagesLoaded } = this.state;\n\n    return (\n      <MessagesList\n        peer={peer}\n        overlay={overlay}\n        messages={messages}\n        count={messagesCount}\n        selectedMessages={selectedMessages}\n        isMember={isMember}\n        isAllMessagesLoaded={isAllMessagesLoaded}\n        onSelect={this.onSelect}\n        onLoadMore={this.onLoadMore}\n        onVisibilityChange={this.onVisibilityChange}\n      />\n    );\n  }\n}\n\nexport default Container.create(MessagesSection, {withProps: true});\n"]}