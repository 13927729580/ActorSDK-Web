{"version":3,"sources":["../../../src/components/dialog/MessagesSection.react.js"],"names":[],"mappings":";;;;AAIA;;;;AACA;;AAEA;;;;AACA;;;;AAEA;;;;AACA;;;;AAEA;;;;;;;;;;;;;;IAEM,e;;;kBAMG,S,wBAAY;AACjB,WAAO,wBAAP;AACD,G;;kBAEM,c,6BAAiB;AACtB,WAAO;AACL,WAAK,oBAAU,OAAV,EADA;AAEL,gBAAU,uBAAa,QAAb;AAFL,KAAP;AAID,G;;AAED,2BAAY,KAAZ,EAAmB;AAAA;;AAAA,iDACjB,sBAAM,KAAN,CADiB;;AAGjB,UAAK,QAAL,GAAgB,MAAK,QAAL,CAAc,IAAd,OAAhB;AACA,UAAK,UAAL,GAAkB,MAAK,UAAL,CAAgB,IAAhB,OAAlB;AAJiB;AAKlB;;4BAED,Q,qBAAS,G,EAAK;AACZ,oCAAsB,cAAtB,CAAqC,GAArC;AACD,G;;4BAED,U,yBAAa;AACX,mCAAqB,gBAArB,CAAsC,KAAK,KAAL,CAAW,IAAjD;AACD,G;;4BAED,M,qBAAS;AAAA,iBACoB,KAAK,KADzB;AAAA,QACC,IADD,UACC,IADD;AAAA,QACO,QADP,UACO,QADP;AAAA,iBAEmB,KAAK,KAFxB;AAAA,QAEC,GAFD,UAEC,GAFD;AAAA,QAEM,QAFN,UAEM,QAFN;;;AAIP,WACE;AACE,WAAK,GADP;AAEE,YAAM,IAFR;AAGE,gBAAU,QAHZ;AAIE,gBAAU,QAJZ;AAKE,gBAAU,KAAK,QALjB;AAME,kBAAY,KAAK;AANnB,MADF;AAUD,G;;;;;AA9CG,e,CACG,S,GAAY;AACjB,QAAM,iBAAU,MAAV,CAAiB,UADN;AAEjB,YAAU,iBAAU,IAAV,CAAe;AAFR,C;kBAgDN,iBAAU,MAAV,CAAiB,eAAjB,EAAkC,EAAE,WAAW,IAAb,EAAlC,C","file":"MessagesSection.react.js","sourcesContent":["/*\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\n */\n\nimport React, { Component, PropTypes } from 'react';\nimport { Container } from 'flux/utils';\n\nimport DialogActionCreators from '../../actions/DialogActionCreators';\nimport MessageActionCreators from '../../actions/MessageActionCreators';\n\nimport UserStore from '../../stores/UserStore';\nimport MessageStore from '../../stores/MessageStore';\n\nimport MessagesList from './MessagesList.react';\n\nclass MessagesSection extends Component {\n  static propTypes = {\n    peer: PropTypes.object.isRequired,\n    isMember: PropTypes.bool.isRequired\n  };\n\n  static getStores() {\n    return [MessageStore];\n  }\n\n  static calculateState() {\n    return {\n      uid: UserStore.getMyId(),\n      messages: MessageStore.getState()\n    };\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.onSelect = this.onSelect.bind(this);\n    this.onLoadMore = this.onLoadMore.bind(this);\n  }\n\n  onSelect(rid) {\n    MessageActionCreators.toggleSelected(rid);\n  }\n\n  onLoadMore() {\n    DialogActionCreators.loadMoreMessages(this.props.peer);\n  }\n\n  render() {\n    const { peer, isMember } = this.props;\n    const { uid, messages } = this.state;\n\n    return (\n      <MessagesList\n        uid={uid}\n        peer={peer}\n        messages={messages}\n        isMember={isMember}\n        onSelect={this.onSelect}\n        onLoadMore={this.onLoadMore}\n      />\n    );\n  }\n}\n\nexport default Container.create(MessagesSection, { withProps: true });\n"]}