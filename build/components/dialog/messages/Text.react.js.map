{"version":3,"sources":["../../../../src/components/dialog/messages/Text.react.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAUA,IAAM,cAAc,SAAd,WAAc,CAAC,IAAD,EAAU;AAC5B,MAAM,aAAa,sBAAY,cAAZ,CAA2B,IAA3B,CAAb,CADsB;AAE5B,MAAI,gBAAgB,UAAhB,CAFwB;;AAI5B,oBAAM,aAAN,GAAsB,IAAtB,CAJ4B;AAK5B,oBAAM,YAAN,GAAqB,IAArB,CAL4B;AAM5B,oBAAM,mBAAN,CAA0B,KAA1B,EAN4B;AAO5B,kBAAgB,kBAAM,cAAN,CAAqB,aAArB,CAAhB,CAP4B;AAQ5B,kBAAgB,kBAAM,eAAN,CAAsB,aAAtB,CAAhB,CAR4B;AAS5B,SAAO,aAAP,CAT4B;CAAV;;AAYpB,IAAM,sBAAsB,wBAAQ,WAAR,EAAqB;AAC/C,UAAQ,CAAR;AACA,UAAQ,KAAK,EAAL,GAAU,IAAV;AACR,OAAK,KAAL;CAH0B,CAAtB;;;;;;;;IAWA;;;AAMJ,WANI,IAMJ,CAAY,KAAZ,EAAmB;0BANf,MAMe;;4CACjB,sBAAM,KAAN,GADiB;GAAnB;;AANI,iBAUJ,2BAAS;iBACqB,KAAK,KAAL,CADrB;QACC,mBADD;QACO,6BADP;;;AAGP,WACE;;QAAK,WAAW,SAAX,EAAL;MACE,uCAAK,WAAU,MAAV,EAAiB,yBAAyB,EAAC,QAAQ,oBAAoB,IAApB,CAAR,EAA1B,EAAtB,CADF;KADF,CAHO;;;SAVL;;;KACG,YAAY;AACjB,QAAM,iBAAU,MAAV,CAAiB,UAAjB;AACN,aAAW,iBAAU,MAAV;;kBAkBA","file":"Text.react.js","sourcesContent":["/*\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\n */\n\nimport React, { Component, PropTypes } from 'react';\nimport memoize from 'memoizee';\nimport ActorClient from '../../../utils/ActorClient';\n\nimport { emoji } from '../../../utils/EmojiUtils';\n\nconst processText = (text) => {\n  const markedText = ActorClient.renderMarkdown(text);\n  let emojifiedText = markedText;\n\n  emoji.include_title = true;\n  emoji.include_text = true;\n  emoji.change_replace_mode('css');\n  emojifiedText = emoji.replace_colons(emojifiedText);\n  emojifiedText = emoji.replace_unified(emojifiedText);\n  return emojifiedText;\n};\n\nconst memoizedProcessText = memoize(processText, {\n  length: 1,\n  maxAge: 60 * 60 * 1000,\n  max: 10000\n});\n\n/**\n * Class that represents a component for display text message content\n * @param {string} text Message text\n * @param {string} className Component class name\n */\nclass Text extends Component {\n  static propTypes = {\n    text: PropTypes.string.isRequired,\n    className: PropTypes.string\n  };\n\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const { text, className } = this.props;\n\n    return (\n      <div className={className}>\n        <div className=\"text\" dangerouslySetInnerHTML={{__html: memoizedProcessText(text)}}/>\n      </div>\n    );\n  }\n}\n\nexport default Text;\n"]}