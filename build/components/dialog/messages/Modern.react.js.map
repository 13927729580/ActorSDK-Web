{"version":3,"sources":["../../../../src/components/dialog/messages/Modern.react.js"],"names":[],"mappings":"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","file":"Modern.react.js","sourcesContent":["/*\n * Copyright (C) 2015 Actor LLC. <https://actor.im>\n */\n\nimport { map } from 'lodash';\nimport React, { Component, PropTypes } from 'react';\nimport classnames from 'classnames';\n\nconst ColorTypes = {\n  HEX: 'hex',\n  NAMED: 'named'\n};\n\n/**\n * @param color\n * @returns {string | null} Color value\n */\nfunction getColor(color) {\n  if (color) {\n    switch (color.type) {\n      case ColorTypes.HEX:\n        return color.hex;\n      case ColorTypes.NAMED:\n        return color.name;\n      default:\n        return null;\n    }\n  } else {\n    return null;\n  }\n}\n\n/**\n * Class that represents component for display modern text message attachment field\n * @param {string} title Field title\n * @param {string} value Field value\n * @param {bool} isShort Display short version of field\n */\nclass Field extends Component {\n  static propTypes = {\n    title: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired,\n    isShort: PropTypes.bool.isRequired\n  };\n\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const { title, value, isShort } = this.props;\n\n    const fieldClassName = classnames('field', {\n      'field--short': isShort,\n      'col-xs-6': isShort,\n      'col-xs-12': !isShort\n    });\n\n    return (\n      <div className={fieldClassName}>\n        {title ? <div className=\"field__title\">{title}</div> : null}\n        {value ? <div className=\"field__value\">{value}</div> : null}\n      </div>\n    )\n  }\n}\n\n/**\n * Class that represents component for display modern text message attachments\n * @param {array} fields Array of objects contains attachment fields\n * @param {object} paragraphStyle Contains attachment styles\n * @param {string} text Attachment text\n * @param {string} title Attachment title\n * @param {string} titleUrl Attachment title url\n */\nclass Attach extends Component {\n  static propTypes = {\n    paragraphStyle: PropTypes.object.isRequired,\n    text: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    titleUrl: PropTypes.string.isRequired,\n    fields: PropTypes.array.isRequired\n  };\n\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const { paragraphStyle, titleUrl, title, text, fields } = this.props;\n\n    const attachmentClassName = classnames('attachment', {\n      'attachment--paragraph': paragraphStyle.showParagraph\n    });\n\n    const attachmentStyles = {\n      borderColor: getColor(paragraphStyle.color) || 'transparent',\n      backgroundColor: getColor(paragraphStyle.bgColor) || 'transparent'\n    };\n\n    const visibleTitle = titleUrl ? <a href={titleUrl}>{title}</a> : {title};\n\n    const attachmentFields = map(fields, (field, index) => <Field key={index} {...field}/>);\n\n    return (\n      <div className={attachmentClassName} style={attachmentStyles}>\n        <div className=\"attachment__title\">\n          {visibleTitle}\n        </div>\n        {text ? text : null}\n        {attachmentFields ? <div className=\"attachment_fields row\">{attachmentFields}</div> : null}\n      </div>\n    );\n  }\n}\n\n/**\n * Class that represents component for display modern text messages content\n * @param {array} attaches Array of objects contains modern message attached paragraphs\n * @param {object} paragraphStyle Contains message styles\n * @param {string} text Message text\n * @param {string} className Component class name\n */\nclass TextModern extends Component {\n  static propTypes = {\n    attaches: PropTypes.array.isRequired,\n    paragraphStyle: PropTypes.object.isRequired,\n    text: PropTypes.string.isRequired,\n    className: PropTypes.string\n  };\n\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const { paragraphStyle, attaches, text, className } = this.props;\n    const modernClassName = classnames('modern', {\n      'modern--paragraph': paragraphStyle.showParagraph\n    });\n\n    const modernStyles = {\n      borderColor: getColor(paragraphStyle.color) || 'transparent',\n      backgroundColor: getColor(paragraphStyle.bgColor) || 'transparent'\n    };\n\n    const modernAttachments = map(attaches, (attachment, index) => <Attach key={index} {...attachment}/>);\n\n    return (\n      <div className={className}>\n        <div className={modernClassName} style={modernStyles}>\n          {text ? <p>{text}</p> : null}\n          {modernAttachments}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TextModern;\n"]}