{"version":3,"sources":["../../../../src/components/dialog/messages/Document.react.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IASM,QAAQ;YAAR,QAAQ;;AACZ,WADI,QAAQ,CACA,KAAK,EAAE;0BADf,QAAQ;;kEAAR,QAAQ,aAEJ,KAAK;GACZ;;eAHG,QAAQ;;6BAUH;mBACwB,IAAI,CAAC,KAAK;UAAjC,OAAO,UAAP,OAAO;UAAE,SAAS,UAAT,SAAS;;AAC1B,UAAM,iBAAiB,GAAG,0BAAW,SAAS,EAAE,KAAK,CAAC,CAAC;;AAEvD,aACE;;UAAK,SAAS,EAAE,iBAAiB,AAAC;QAChC;;YAAK,SAAS,EAAC,cAAc;UAEzB,OAAO,CAAC,WAAW,GACf;;cAAK,SAAS,EAAC,gBAAgB;YAC7B;;gBAAG,SAAS,EAAC,gBAAgB;;aAAgB;WACzC,GACN;;cAAG,SAAS,EAAC,gBAAgB,EAAC,IAAI,EAAE,OAAO,CAAC,OAAO,AAAC;YAClD;;gBAAG,SAAS,EAAC,gBAAgB;;aAAgB;WAC3C;UAEV;;cAAK,SAAS,EAAC,QAAQ;YACrB;;gBAAM,SAAS,EAAC,oBAAoB;cAAE,OAAO,CAAC,QAAQ;aAAQ;YAC9D;;gBAAK,SAAS,EAAC,gBAAgB;cAC7B;;kBAAM,SAAS,EAAC,sBAAsB;gBAAE,OAAO,CAAC,QAAQ;eAAQ;cAChE;;kBAAM,SAAS,EAAC,qBAAqB;gBAAE,OAAO,CAAC,aAAa;eAAQ;aAChE;YACN;;gBAAK,SAAS,EAAC,mBAAmB;cAE9B,OAAO,CAAC,WAAW,GACf;;;gBAAO,IAAI,CAAC,cAAc,CAAC,mBAAmB,CAAC;eAAQ,GACvD;;kBAAG,IAAI,EAAE,OAAO,CAAC,OAAO,AAAC;gBAAE,IAAI,CAAC,cAAc,CAAC,kBAAkB,CAAC;eAAK;aAEzE;WACF;SACF;QACN,uCAAK,SAAS,EAAC,QAAQ,GAAO;OAC1B,CACN;KACH;;;SA5CG,QAAQ;UALE,SAAS;;AAKnB,QAAQ,CAKL,SAAS,GAAG;AACjB,SAAO,EAAE,OAXc,SAAS,CAWb,MAAM,CAAC,UAAU;AACpC,WAAS,EAAE,OAZY,SAAS,CAYX,MAAM;CAC5B;;AAuCH,qBAAW,OAAO,CAAC,QAAQ,aAjDlB,SAAS,CAiDqB,CAAC;;kBAEzB,QAAQ","file":"Document.react.js","sourcesContent":["/*\n * Copyright (C) 2015 Actor LLC. <https://actor.im>\n */\n\nimport React, { Component, PropTypes } from 'react';\nimport classnames from 'classnames';\nimport ReactMixin from 'react-mixin';\nimport { IntlMixin } from 'react-intl';\n\nclass Document extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  static propTypes = {\n    content: PropTypes.object.isRequired,\n    className: PropTypes.string\n  };\n\n  render() {\n    const { content, className } = this.props;\n    const documentClassName = classnames(className, 'row');\n\n    return (\n      <div className={documentClassName}>\n        <div className=\"document row\">\n          {\n            content.isUploading\n              ? <div className=\"document__icon\">\n                  <i className=\"material-icons\">attach_file</i>\n                </div>\n              : <a className=\"document__icon\" href={content.fileUrl}>\n                  <i className=\"material-icons\">attach_file</i>\n                </a>\n          }\n          <div className=\"col-xs\">\n            <span className=\"document__filename\">{content.fileName}</span>\n            <div className=\"document__meta\">\n              <span className=\"document__meta__size\">{content.fileSize}</span>\n              <span className=\"document__meta__ext\">{content.fileExtension}</span>\n            </div>\n            <div className=\"document__actions\">\n              {\n                content.isUploading\n                  ? <span>{this.getIntlMessage('message.uploading')}</span>\n                  : <a href={content.fileUrl}>{this.getIntlMessage('message.download')}</a>\n              }\n            </div>\n          </div>\n        </div>\n        <div className=\"col-xs\"></div>\n      </div>\n    );\n  }\n}\n\nReactMixin.onClass(Document, IntlMixin);\n\nexport default Document;\n"]}