{"version":3,"sources":["../../../../src/components/dialog/messages/Image.react.js"],"names":[],"mappings":"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","file":"Image.react.js","sourcesContent":["/*\n * Copyright (C) 2015 Actor LLC. <https://actor.im>\n */\n\nimport React from 'react';\nimport classnames from 'classnames';\n\nimport { lightbox } from '../../../utils/ImageUtils';\n\nlet cache = {};\n\nclass Image extends React.Component {\n  static propTypes = {\n    content: React.PropTypes.object.isRequired,\n    className: React.PropTypes.string,\n    loadedClassName: React.PropTypes.string\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isImageLoaded: this.isCached()\n    };\n  }\n\n  openLightBox() {\n    lightbox.open(this.props.content.fileUrl, 'message');\n  }\n\n  onLoad() {\n    this.setCached();\n    if (!this.state.isImageLoaded) {\n      this.setState({isImageLoaded: true});\n    }\n  }\n\n  isCached() {\n    return (cache[this.props.content.fileUrl] === true);\n  }\n\n  setCached() {\n    cache[this.props.content.fileUrl] = true;\n  }\n\n  render() {\n    const { content, className, loadedClassName } = this.props;\n    const { isImageLoaded } = this.state;\n\n    const k = content.w / 300;\n    const styles = {\n      width: Math.round(content.w / k),\n      height: Math.round(content.h / k)\n    };\n\n    let original = null,\n        preview = null,\n        preloader = null;\n\n\n    if (content.fileUrl) {\n      original = (\n        <img className=\"photo photo--original\"\n             height={content.h}\n             onClick={this.openLightBox.bind(this)}\n             onLoad={this.onLoad.bind(this)}\n             src={content.fileUrl}\n             width={content.w}/>\n      );\n    }\n\n    if (!this.isCached()) {\n      preview = <img className=\"photo photo--preview\" src={content.preview}/>;\n\n      if (content.isUploading === true || isImageLoaded === false) {\n        preloader = <div className=\"preloader\"><div/><div/><div/><div/><div/></div>;\n      }\n    }\n\n    const imageClassName = isImageLoaded ? classnames(className, loadedClassName) : className;\n\n    return (\n      <div className={imageClassName} style={styles}>\n        {preview}\n        {original}\n        {preloader}\n        <svg dangerouslySetInnerHTML={{__html: '<filter id=\"blur-effect\"><feGaussianBlur stdDeviation=\"3\"/></filter>'}}/>\n      </div>\n    );\n  }\n}\n\nexport default Image;\n"]}