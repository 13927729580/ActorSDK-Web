{"version":3,"sources":["../../../../src/components/dialog/messages/Voice.react.js"],"names":[],"mappings":"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","file":"Voice.react.js","sourcesContent":["/*\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\n */\n\nimport React, { Component, PropTypes } from 'react';\nimport { findDOMNode } from 'react-dom';\nimport classnames from 'classnames';\n\nlet cache = [];\n\n/**\n * Class that represents a component for display voice message content\n */\nclass Voice extends Component {\n  static propTypes = {\n    fileUrl: PropTypes.string,\n    duration: PropTypes.number.isRequired,\n    className: PropTypes.string\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isLoaded: this.isCached(),\n      isPlaying: false,\n      currentTime: 0,\n      duration: props.duration / 1000\n    };\n  }\n\n  componentDidMount() {\n    const { fileUrl } = this.props;\n\n    if (fileUrl) {\n      this.createAudioElement(fileUrl);\n    }\n  }\n\n  componentDidUpdate() {\n    const { fileUrl } = this.props;\n\n    if (fileUrl && !this.isCached()) {\n      this.createAudioElement(fileUrl);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.audio) {\n      this.audio.removeEventListener('loadeddata', this.handleLoading);\n      this.audio.removeEventListener('timeupdate', this.handleTimeUpdate);\n      this.audio.removeEventListener('ended', this.handlePlayEnding);\n      this.audio.removeEventListener('canplaythrough', this.handleLoading);\n    }\n  }\n\n  createAudioElement(fileUrl) {\n    this.audio = new Audio(fileUrl);\n    this.audio.volume = 1;\n    this.audio.addEventListener('loadeddata', this.handleLoading);\n    this.audio.addEventListener('timeupdate', this.handleTimeUpdate);\n    this.audio.addEventListener('ended', this.handlePlayEnding);\n    this.audio.addEventListener('canplaythrough', this.handleLoading);\n    this.setCached();\n  }\n\n  isCached() {\n    const { fileUrl } = this.props;\n    return cache[fileUrl] === true;\n  }\n\n  setCached() {\n    const { fileUrl } = this.props;\n    cache[fileUrl] = true;\n    this.setState({ isLoaded: cache[fileUrl] });\n  }\n\n  humanTime = (millis) => {\n    const minutes = Math.floor(millis / 60000);\n    const seconds = ((millis % 60000) / 1000).toFixed(0);\n\n    return minutes + ':' + (seconds < 10 ? '0' : '') + seconds;\n  };\n\n  handleTimeUpdate = () => {\n    this.setState({\n      currentTime: this.audio.currentTime,\n      duration: this.audio.duration\n    })\n  };\n\n  handlePlayClick = () => {\n    this.audio.play();\n    this.setState({ isPlaying: true })\n  };\n\n  handlePauseClick = () => {\n    this.audio.pause();\n    this.handlePlayEnding();\n  };\n\n  handlePlayEnding = () => {\n    this.setState({ isPlaying: false });\n  };\n\n  handleRewind = (event) => {\n    const rewindRect = findDOMNode(this.refs.rewind).getBoundingClientRect();\n    const rewindPosition = (event.clientX - rewindRect.left) / rewindRect.width;\n\n    this.audio.currentTime = this.audio.duration * rewindPosition;\n  };\n\n  handleLoading = () => this.setCached();\n\n  render() {\n    const { className } = this.props;\n    const { isPlaying, currentTime, duration, isLoaded } = this.state;\n    const voiceClassName = classnames(className, 'row');\n\n    const current = this.humanTime(currentTime * 1000);\n    const total = this.humanTime(duration * 1000);\n    const progress = (currentTime / duration) * 100;\n\n    return (\n      <div className={voiceClassName}>\n        <div className=\"voice row\">\n          <div className=\"voice__controls\">\n            {\n              !isLoaded\n                ? <i className=\"material-icons\" style={{ opacity: 0.3 }}>play_circle_filled</i>\n                : isPlaying\n                    ? <i className=\"material-icons\" onClick={this.handlePauseClick}>pause_circle_filled</i>\n                    : <i className=\"material-icons\" onClick={this.handlePlayClick}>play_circle_filled</i>\n            }\n          </div>\n          <div className=\"voice__body col-xs\">\n            <div className=\"row\">\n              <div className=\"col-xs text-left\">\n                <time className=\"voice__time voice__time--current\">{current}</time>\n              </div>\n              <div className=\"col-xs text-right\">\n                <time className=\"voice__time voice__time--total\">{total}</time>\n              </div>\n            </div>\n            {\n              isLoaded\n                ? <div className=\"voice__rewind\" onClick={this.handleRewind} ref=\"rewind\">\n                    <div className=\"played\" style={{ width: progress + '%' }}/>\n                  </div>\n                : <div className=\"voice__rewind voice__rewind--loading\"/>\n            }\n          </div>\n        </div>\n        <div className=\"col-xs\"/>\n      </div>\n    );\n  }\n}\n\nexport default Voice;\n"]}