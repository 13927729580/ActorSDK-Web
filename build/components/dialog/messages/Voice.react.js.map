{"version":3,"sources":["../../../../src/components/dialog/messages/Voice.react.js"],"names":[],"mappings":"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","file":"Voice.react.js","sourcesContent":["/*\n * Copyright (C) 2015 Actor LLC. <https://actor.im>\n */\n\nimport React, { Component, PropTypes } from 'react';\nimport classnames from 'classnames';\nimport ReactMixin from 'react-mixin';\nimport { IntlMixin } from 'react-intl';\n\nlet cache = [];\n\n/**\n * Class that represents a component for display voice message content\n */\nclass Voice extends Component {\n  static propTypes = {\n    content: PropTypes.object.isRequired,\n    className: PropTypes.string\n  };\n\n  constructor(props) {\n    super(props);\n    const { content } = props;\n\n    if (content.fileUrl) {\n      this.createAudioElement(content.fileUrl);\n    }\n\n    this.state = {\n      isLoaded: this.isCached(),\n      isPlaying: false,\n      currentTime: 0,\n      duration: props.content.duration\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { content } = this.props;\n\n    if (content.fileUrl && !this.isCached()) {\n      this.createAudioElement(content.fileUrl);\n    }\n  }\n\n  componentWillUnmount() {\n    this.audio.removeEventListener('loadeddata', this.handleLoading);\n    this.audio.removeEventListener('timeupdate', this.handleTimeUpdate);\n    this.audio.removeEventListener('ended', this.handlePlayEnding);\n    this.audio.removeEventListener('canplaythrough', this.handleLoading);\n  }\n\n  createAudioElement(fileUrl) {\n    this.audio = new Audio(fileUrl);\n    this.audio.volume = 1;\n    this.audio.addEventListener('loadeddata', this.handleLoading);\n    this.audio.addEventListener('timeupdate', this.handleTimeUpdate);\n    this.audio.addEventListener('ended', this.handlePlayEnding);\n    this.audio.addEventListener('canplaythrough', this.handleLoading);\n    this.setCached();\n  }\n\n  isCached() {\n    const { content } = this.props;\n    return cache[content.fileUrl] === true;\n  }\n\n  setCached() {\n    const { content } = this.props;\n    cache[content.fileUrl] = true;\n    this.setState({isLoaded: cache[content.fileUrl]});\n  }\n\n  humanTime = (millis) => {\n    const minutes = Math.floor(millis / 60000);\n    const seconds = ((millis % 60000) / 1000).toFixed(0);\n\n    return minutes + ':' + (seconds < 10 ? '0' : '') + seconds;\n  };\n\n  handleTimeUpdate = (event) => {\n    this.setState({\n      currentTime: this.audio.currentTime,\n      duration: this.audio.duration\n    })\n  };\n\n  handlePlayClick = () => {\n    this.audio.play();\n    this.setState({isPlaying: true})\n  };\n\n  handlePauseClick = () => {\n    this.audio.pause();\n    this.handlePlayEnding();\n  };\n\n  handlePlayEnding = () => {\n    this.setState({isPlaying: false});\n  };\n\n  handleRewind = (event) => {\n    const rewindRect = React.findDOMNode(this.refs.rewind).getBoundingClientRect();\n    const rewindPosition = (event.clientX - rewindRect.left) / rewindRect.width;\n\n    this.audio.currentTime = this.audio.duration * rewindPosition;\n  };\n\n  handleLoading = () => this.setCached();\n\n  render() {\n    const { className } = this.props;\n    const { isPlaying, currentTime, duration, isLoaded } = this.state;\n    const voiceClassName = classnames(className, 'row');\n\n    const current = this.humanTime(currentTime * 1000);\n    const total = this.humanTime(duration * 1000);\n    const progress = (currentTime / duration) * 100;\n\n    return (\n      <div className={voiceClassName}>\n        <div className=\"voice row\">\n          <div className=\"voice__controls\">\n            {\n              !isLoaded\n                ? <i className=\"material-icons\" style={{opacity: 0.3}}>play_circle_filled</i>\n                : isPlaying\n                    ? <i className=\"material-icons\" onClick={this.handlePauseClick}>pause_circle_filled</i>\n                    : <i className=\"material-icons\" onClick={this.handlePlayClick}>play_circle_filled</i>\n            }\n          </div>\n          <div className=\"voice__body col-xs\">\n            <div className=\"row\">\n              <div className=\"col-xs text-left\">\n                <time className=\"voice__time voice__time--current\">{current}</time>\n              </div>\n              <div className=\"col-xs text-right\">\n                <time className=\"voice__time voice__time--total\">{total}</time>\n              </div>\n            </div>\n            {\n              isLoaded\n                ? <div className=\"voice__rewind\" onClick={this.handleRewind} ref=\"rewind\">\n                    <div className=\"played\" style={{width: progress + '%'}}/>\n                  </div>\n                : <div className=\"voice__rewind voice__rewind--loading\"/>\n            }\n          </div>\n        </div>\n        <div className=\"col-xs\"/>\n      </div>\n    );\n  }\n}\n\nReactMixin.onClass(Voice, IntlMixin);\n\nexport default Voice;\n"]}