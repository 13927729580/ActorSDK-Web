{"version":3,"sources":["../../../../src/components/dialog/messages/Photo.react.js"],"names":[],"mappings":";;;;AAIA;;;;AACA;;;;AAEA;;;;;;;;;;;;AAEA,IAAI,QAAQ,EAAZ;;;;;;;IAMM,K;;;AAOJ,iBAAY,KAAZ,EAAmB;AAAA;;AAAA,iDACjB,sBAAM,KAAN,CADiB;;AAAA,UAQnB,YARmB,GAQJ;AAAA,aAAM,qBAAS,IAAT,CAAc,MAAK,KAAL,CAAW,OAAX,CAAmB,OAAjC,EAA0C,SAA1C,CAAN;AAAA,KARI;;AAAA,UAUnB,MAVmB,GAUV,YAAM;AACb,YAAK,SAAL;AACA,UAAI,CAAC,MAAK,KAAL,CAAW,aAAhB,EAA+B;AAC7B,cAAK,QAAL,CAAc,EAAE,eAAe,IAAjB,EAAd;AACD;AACF,KAfkB;;AAAA,UAiBnB,QAjBmB,GAiBR;AAAA,aAAM,MAAM,MAAK,KAAL,CAAW,OAAX,CAAmB,OAAzB,MAAsC,IAA5C;AAAA,KAjBQ;;AAAA,UAmBnB,SAnBmB,GAmBP,YAAM;AAChB,YAAM,MAAK,KAAL,CAAW,OAAX,CAAmB,OAAzB,IAAoC,IAApC;AACD,KArBkB;;AAGjB,UAAK,KAAL,GAAa;AACX,qBAAe,MAAK,QAAL;AADJ,KAAb;AAHiB;AAMlB;;kBAiBD,M,qBAAS;AAAA,iBACyC,KAAK,KAD9C;AAAA,QACC,OADD,UACC,OADD;AAAA,QACU,SADV,UACU,SADV;AAAA,QACqB,eADrB,UACqB,eADrB;AAAA,QAEC,aAFD,GAEmB,KAAK,KAFxB,CAEC,aAFD;;;AAIP,QAAM,YAAY,GAAlB;AACA,QAAM,aAAa,GAAnB;AACA,QAAI,QAAQ,QAAQ,CAApB;AACA,QAAI,SAAS,QAAQ,CAArB;;AAEA,QAAI,QAAQ,MAAZ,EAAoB;AAClB,UAAI,QAAQ,SAAZ,EAAuB;AACrB,kBAAU,YAAY,KAAtB;AACA,gBAAQ,SAAR;AACD;AACF,KALD,MAKO;AACL,UAAI,SAAS,UAAb,EAAyB;AACvB,iBAAS,aAAa,MAAtB;AACA,iBAAS,UAAT;AACD;AACF;;AAED,QAAI,WAAW,IAAf;QACI,UAAU,IADd;QAEI,YAAY,IAFhB;;AAIA,QAAI,QAAQ,OAAZ,EAAqB;AACnB,iBACE,uCAAK,WAAU,uBAAf;AACK,gBAAQ,QAAQ,CADrB;AAEK,iBAAS,KAAK,YAFnB;AAGK,gBAAQ,KAAK,MAHlB;AAIK,aAAK,QAAQ,OAJlB;AAKK,eAAO,QAAQ,CALpB,GADF;AAQD;;AAED,QAAI,CAAC,KAAK,QAAL,EAAL,EAAsB;AACpB,gBAAU,uCAAK,WAAU,sBAAf,EAAsC,KAAK,QAAQ,OAAnD,GAAV;;AAEA,UAAI,QAAQ,WAAR,KAAwB,IAAxB,IAAgC,kBAAkB,KAAtD,EAA6D;AAC3D,oBAAY;AAAA;UAAA,EAAK,WAAU,WAAf;UAA2B,0CAA3B;UAAiC,0CAAjC;UAAuC,0CAAvC;UAA6C,0CAA7C;UAAmD;AAAnD,SAAZ;AACD;AACF;;AAED,QAAM,iBAAiB,gBAAgB,0BAAW,SAAX,EAAsB,eAAtB,CAAhB,GAAyD,SAAhF;;AAEA,WACE;AAAA;MAAA,EAAK,WAAW,cAAhB,EAAgC,OAAO,EAAE,YAAF,EAAS,cAAT,EAAvC;MACG,OADH;MAEG,QAFH;MAGG,SAHH;MAIE,uCAAK,yBAAyB,EAAE,QAAQ,sEAAV,EAA9B;AAJF,KADF;AAQD,G;;;;;AApFG,K,CACG,S,GAAY;AACjB,WAAS,iBAAU,MAAV,CAAiB,UADT;AAEjB,aAAW,iBAAU,MAFJ;AAGjB,mBAAiB,iBAAU;AAHV,C;kBAsFN,K","file":"Photo.react.js","sourcesContent":["/*\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\n */\n\nimport React, { Component, PropTypes } from 'react';\nimport classnames from 'classnames';\n\nimport { lightbox } from '../../../utils/ImageUtils';\n\nlet cache = [];\n\n/**\n * Class that represents a component for display photo message content\n * @todo move cache to store;\n */\nclass Photo extends Component {\n  static propTypes = {\n    content: PropTypes.object.isRequired,\n    className: PropTypes.string,\n    loadedClassName: PropTypes.string\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isImageLoaded: this.isCached()\n    };\n  }\n\n  openLightBox = () => lightbox.open(this.props.content.fileUrl, 'message');\n\n  onLoad = () => {\n    this.setCached();\n    if (!this.state.isImageLoaded) {\n      this.setState({ isImageLoaded: true });\n    }\n  };\n\n  isCached = () => cache[this.props.content.fileUrl] === true;\n\n  setCached = () => {\n    cache[this.props.content.fileUrl] = true;\n  };\n\n  render() {\n    const { content, className, loadedClassName } = this.props;\n    const { isImageLoaded } = this.state;\n\n    const MAX_WIDTH = 300;\n    const MAX_HEIGHT = 400;\n    let width = content.w;\n    let height = content.h;\n\n    if (width > height) {\n      if (width > MAX_WIDTH) {\n        height *= MAX_WIDTH / width;\n        width = MAX_WIDTH;\n      }\n    } else {\n      if (height > MAX_HEIGHT) {\n        width *= MAX_HEIGHT / height;\n        height = MAX_HEIGHT;\n      }\n    }\n\n    let original = null,\n        preview = null,\n        preloader = null;\n\n    if (content.fileUrl) {\n      original = (\n        <img className=\"photo photo--original\"\n             height={content.h}\n             onClick={this.openLightBox}\n             onLoad={this.onLoad}\n             src={content.fileUrl}\n             width={content.w}/>\n      );\n    }\n\n    if (!this.isCached()) {\n      preview = <img className=\"photo photo--preview\" src={content.preview}/>;\n\n      if (content.isUploading === true || isImageLoaded === false) {\n        preloader = <div className=\"preloader\"><div/><div/><div/><div/><div/></div>;\n      }\n    }\n\n    const imageClassName = isImageLoaded ? classnames(className, loadedClassName) : className;\n\n    return (\n      <div className={imageClassName} style={{ width, height }}>\n        {preview}\n        {original}\n        {preloader}\n        <svg dangerouslySetInnerHTML={{ __html: '<filter id=\"blur-effect\"><feGaussianBlur stdDeviation=\"3\"/></filter>' }}/>\n      </div>\n    );\n  }\n}\n\nexport default Photo;\n"]}