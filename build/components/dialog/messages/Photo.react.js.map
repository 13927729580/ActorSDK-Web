{"version":3,"sources":["../../../../src/components/dialog/messages/Photo.react.js"],"names":[],"mappings":"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","file":"Photo.react.js","sourcesContent":["/*\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\n */\n\nimport React, { Component, PropTypes } from 'react';\nimport classnames from 'classnames';\n\nimport { lightbox } from '../../../utils/ImageUtils';\n\nlet cache = [];\n\n/**\n * Class that represents a component for display photo message content\n * @todo move cache to store;\n */\nclass Photo extends Component {\n  static propTypes = {\n    content: PropTypes.object.isRequired,\n    className: PropTypes.string,\n    loadedClassName: PropTypes.string\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isImageLoaded: this.isCached()\n    };\n  }\n\n  openLightBox = () => lightbox.open(this.props.content.fileUrl, 'message');\n\n  onLoad = () => {\n    this.setCached();\n    if (!this.state.isImageLoaded) {\n      this.setState({isImageLoaded: true});\n    }\n  };\n\n  isCached = () => cache[this.props.content.fileUrl] === true;\n\n  setCached = () => {\n    cache[this.props.content.fileUrl] = true;\n  };\n\n  render() {\n    const { content, className, loadedClassName } = this.props;\n    const { isImageLoaded } = this.state;\n\n    const MAX_WIDTH = 300;\n    const MAX_HEIGHT = 400;\n    let width = content.w;\n    let height = content.h;\n\n    if (width > height) {\n      if (width > MAX_WIDTH) {\n        height *= MAX_WIDTH / width;\n        width = MAX_WIDTH;\n      }\n    } else {\n      if (height > MAX_HEIGHT) {\n        width *= MAX_HEIGHT / height;\n        height = MAX_HEIGHT;\n      }\n    }\n\n    let original = null,\n        preview = null,\n        preloader = null;\n\n    if (content.fileUrl) {\n      original = (\n        <img className=\"photo photo--original\"\n             height={content.h}\n             onClick={this.openLightBox}\n             onLoad={this.onLoad}\n             src={content.fileUrl}\n             width={content.w}/>\n      );\n    }\n\n    if (!this.isCached()) {\n      preview = <img className=\"photo photo--preview\" src={content.preview}/>;\n\n      if (content.isUploading === true || isImageLoaded === false) {\n        preloader = <div className=\"preloader\"><div/><div/><div/><div/><div/></div>;\n      }\n    }\n\n    const imageClassName = isImageLoaded ? classnames(className, loadedClassName) : className;\n\n    return (\n      <div className={imageClassName} style={{width, height}}>\n        {preview}\n        {original}\n        {preloader}\n        <svg dangerouslySetInnerHTML={{__html: '<filter id=\"blur-effect\"><feGaussianBlur stdDeviation=\"3\"/></filter>'}}/>\n      </div>\n    );\n  }\n}\n\nexport default Photo;\n"]}