{"version":3,"sources":["../../../../src/components/dialog/messages/Photo.react.js"],"names":[],"mappings":";;;;AAIA;;;;AACA;;;;;;;;;;;;AAEA,IAAM,YAAY,GAAlB;AACA,IAAM,aAAa,GAAnB;;IAEM,K;;;;;;;;;kBASJ,O,oBAAQ,K,EAAO;AACb,UAAM,cAAN;AACA,yBAAS,IAAT,CAAc,MAAM,MAAN,CAAa,GAA3B,EAAgC,SAAhC;AACD,G;;kBAED,a,4BAAgB;AAAA,iBACkB,KAAK,KADvB;AAAA,QACH,KADG,UACN,CADM;AAAA,QACO,MADP,UACI,CADJ;;AAEd,QAAI,QAAQ,MAAZ,EAAoB;AAClB,UAAI,QAAQ,SAAZ,EAAuB;AACrB,eAAO;AACL,iBAAO,SADF;AAEL,kBAAQ,UAAU,YAAY,KAAtB;AAFH,SAAP;AAID;AACF,KAPD,MAOO,IAAI,SAAS,UAAb,EAAyB;AAC9B,aAAO;AACL,eAAO,SAAS,aAAa,MAAtB,CADF;AAEL,gBAAQ;AAFH,OAAP;AAID;;AAED,WAAO,EAAE,YAAF,EAAS,cAAT,EAAP;AACD,G;;kBAGD,M,qBAAS;AAAA,kBACsB,KAAK,KAD3B;AAAA,QACC,OADD,WACC,OADD;AAAA,QACU,OADV,WACU,OADV;;AAAA,yBAEmB,KAAK,aAAL,EAFnB;;AAAA,QAEC,KAFD,kBAEC,KAFD;AAAA,QAEQ,MAFR,kBAEQ,MAFR;;;AAIP,WACE;AACE,iBAAU,gBADZ;AAEE,WAAK,WAAW,OAFlB;AAGE,aAAO,KAHT;AAIE,cAAQ,MAJV;AAKE,eAAS,KAAK;AALhB,MADF;AASD,G;;;;;AA/CG,K,CACG,S,GAAY;AACjB,WAAS,iBAAU,MADF;AAEjB,KAAG,iBAAU,MAAV,CAAiB,UAFH;AAGjB,KAAG,iBAAU,MAAV,CAAiB,UAHH;AAIjB,WAAS,iBAAU,MAAV,CAAiB,UAJT;AAKjB,eAAa,iBAAU,IAAV,CAAe;AALX,C;kBAiDN,K","file":"Photo.react.js","sourcesContent":["/*\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\n */\n\nimport React, { Component, PropTypes } from 'react';\nimport { lightbox } from '../../../utils/ImageUtils';\n\nconst MAX_WIDTH = 300;\nconst MAX_HEIGHT = 400;\n\nclass Photo extends Component {\n  static propTypes = {\n    fileUrl: PropTypes.string,\n    w: PropTypes.number.isRequired,\n    h: PropTypes.number.isRequired,\n    preview: PropTypes.string.isRequired,\n    isUploading: PropTypes.bool.isRequired\n  };\n\n  onClick(event) {\n    event.preventDefault();\n    lightbox.open(event.target.src, 'message');\n  }\n\n  getDimentions() {\n    const { w: width, h: height } = this.props;\n    if (width > height) {\n      if (width > MAX_WIDTH) {\n        return {\n          width: MAX_WIDTH,\n          height: height * (MAX_WIDTH / width)\n        };\n      }\n    } else if (height > MAX_HEIGHT) {\n      return {\n        width: width * (MAX_HEIGHT / height),\n        height: MAX_HEIGHT\n      };\n    }\n\n    return { width, height };\n  }\n\n\n  render() {\n    const { fileUrl, preview } = this.props;\n    const { width, height } = this.getDimentions();\n\n    return (\n      <img\n        className=\"message__photo\"\n        src={fileUrl || preview}\n        width={width}\n        height={height}\n        onClick={this.onClick}\n      />\n    );\n  }\n}\n\nexport default Photo;\n"]}