{"version":3,"sources":["../../../../src/components/dialog/messages/Sticker.react.js"],"names":[],"mappings":"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","file":"Sticker.react.js","sourcesContent":["/*\n * Copyright (C) 2015 Actor LLC. <https://actor.im>\n */\n\nimport React, { Component, PropTypes } from 'react';\nimport classnames from 'classnames';\nimport { shouldComponentUpdate } from 'react-addons-pure-render-mixin';\n\nimport Image from '../../common/Image.react';\n\nlet cache = {};\n\n/**\n * Class that represents a component for display sticker message content\n */\nclass Sticker extends Component {\n  static propTypes = {\n    className: PropTypes.string,\n    fileUrl: PropTypes.string,\n    h: PropTypes.number.isRequired,\n    w: PropTypes.number.isRequired\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isLoaded: this.isCached(),\n      ...this.calculateDementions()\n    }\n\n    this.onLoad = this.onLoad.bind(this);\n    this.isCached = this.isCached.bind(this);\n    this.setCached = this.setCached.bind(this);\n    this.shouldComponentUpdate = shouldComponentUpdate.bind(this);\n  }\n\n  onLoad() {\n    this.setCached();\n    if (!this.state.isLoaded) {\n      this.setState({ isLoaded: true });\n    }\n  }\n\n  isCached() {\n    return cache[this.props.fileUrl] === true;\n  }\n\n  setCached() {\n    cache[this.props.fileUrl] = true;\n  }\n\n  calculateDementions() {\n    const { w, h } = this.props;\n    const MAX_WIDTH = 200;\n    const MAX_HEIGHT = 200;\n\n    let width = w;\n    let height = h;\n\n    if (width > height) {\n      if (width > MAX_WIDTH) {\n        height *= MAX_WIDTH / width;\n        width = MAX_WIDTH;\n      }\n    } else {\n      if (height > MAX_HEIGHT) {\n        width *= MAX_HEIGHT / height;\n        height = MAX_HEIGHT;\n      }\n    }\n\n    return { width, height };\n  }\n\n  renderPreloader() {\n    const { isLoaded } = this.state;\n    if (isLoaded) return null;\n\n    return (\n      <div className=\"preloader\">\n        <div/><div/><div/><div/><div/>\n      </div>\n    );\n  }\n\n  renderSticker() {\n    const { fileUrl } = this.props;\n    if (!fileUrl) return null;\n\n    const { width, height } = this.state;\n\n    return (\n      <Image\n        src={fileUrl}\n        width={width}\n        height={height}\n        onLoad={this.onLoad}\n      />\n    )\n  }\n\n  render() {\n    const { className } = this.props;\n    const { isLoaded, width, height } = this.state;\n    const stickerClassName = classnames('sticker', {\n      'sticker--loaded': isLoaded\n    });\n\n    return (\n      <div className={className}>\n        <div className={stickerClassName} style={{ width, height }}>\n          {this.renderPreloader()}\n          {this.renderSticker()}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Sticker;\n"]}