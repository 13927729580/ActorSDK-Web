{"version":3,"sources":["../../../../src/components/dialog/messages/MessageEdit.react.js"],"names":[],"mappings":";;;;AAIA;;;;AACA;;AACA;;AACA;;;;;;;;;;;;;;IAEM,W;;;AAYJ,uBAAY,KAAZ,EAAmB;AAAA;;AAAA,iDACjB,sBAAM,KAAN,CADiB;;AAGjB,UAAK,KAAL,GAAa;AACX,YAAM,MAAM,OAAN,CAAc,OAAd,CAAsB;AADjB,KAAb;;AAIA,UAAK,QAAL,GAAgB,MAAK,QAAL,CAAc,IAAd,OAAhB;AACA,UAAK,QAAL,GAAgB,MAAK,QAAL,CAAc,IAAd,OAAhB;AACA,UAAK,SAAL,GAAiB,MAAK,SAAL,CAAe,IAAf,OAAjB;;AAEA,UAAK,qBAAL,GAA6B,kDAAsB,IAAtB,OAA7B;AAXiB;AAYlB;;;;;wBAED,iB,gCAAoB;AAClB,YAAQ,KAAR,CAAc,qBAAd;AACD,G;;wBAED,Q,uBAAW;AACT,SAAK,KAAL,CAAW,QAAX,CAAoB,KAAK,KAAL,CAAW,OAA/B,EAAwC,KAAK,KAAL,CAAW,IAAnD;AACD,G;;wBAED,Q,qBAAS,I,EAAM;AACb,SAAK,QAAL,CAAc,EAAE,UAAF,EAAd;AACD,G;;wBAED,S,sBAAU,K,EAAO;AACf,QAAI,MAAM,OAAN,KAAkB,4BAAS,GAA/B,EAAoC;AAClC,YAAM,cAAN;AACA,WAAK,QAAL;AACD;AACF,G;;wBAED,M,qBAAS;AACP,WACE;AACE,qBADF;AAEE,aAAO,KAAK,KAAL,CAAW,IAFpB;AAGE,mBAAa,KAAK,KAAL,CAAW,WAH1B;AAIE,gBAAU,KAAK,QAJjB;AAKE,gBAAU,KAAK,QALjB;AAME,iBAAW,KAAK;AANlB,MADF;AAUD,G;;;;;AAxDG,W,CACG,S,GAAY;AACjB,WAAS,iBAAU,MAAV,CAAiB,UADT;AAEjB,eAAa,iBAAU,IAAV,CAAe,UAFX;AAGjB,YAAU,iBAAU,IAAV,CAAe;AAHR,C;AADf,W,CAQG,Y,GAAe;AACpB,eAAa;AADO,C;kBAmDT,W","file":"MessageEdit.react.js","sourcesContent":["/*\n * Copyright (C) 2015 Actor LLC. <https://actor.im>\n */\n\nimport React, { Component, PropTypes } from 'react';\nimport { shouldComponentUpdate } from 'react-addons-pure-render-mixin';\nimport { KeyCodes } from '../../../constants/ActorAppConstants';\nimport ComposeTextArea from '../compose/ComposeTextArea.react';\n\nclass MessageEdit extends Component {\n  static propTypes = {\n    message: PropTypes.object.isRequired,\n    sendByEnter: PropTypes.bool.isRequired,\n    onSubmit: PropTypes.func.isRequired\n  };\n\n  // TODO: pass real props\n  static defaultProps = {\n    sendByEnter: true\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      text: props.message.content.text\n    };\n\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onTyping = this.onTyping.bind(this);\n    this.onKeyDown = this.onKeyDown.bind(this);\n\n    this.shouldComponentUpdate = shouldComponentUpdate.bind(this);\n  }\n\n  componentDidMount() {\n    console.debug('REPORT ABOUT MOUNT!');\n  }\n\n  onSubmit() {\n    this.props.onSubmit(this.props.message, this.state.text);\n  }\n\n  onTyping(text) {\n    this.setState({ text });\n  }\n\n  onKeyDown(event) {\n    if (event.keyCode === KeyCodes.ESC) {\n      event.preventDefault();\n      this.onSubmit();\n    }\n  }\n\n  render() {\n    return (\n      <ComposeTextArea\n        autoFocus\n        value={this.state.text}\n        sendByEnter={this.props.sendByEnter}\n        onSubmit={this.onSubmit}\n        onTyping={this.onTyping}\n        onKeyDown={this.onKeyDown}\n      />\n    );\n  }\n}\n\nexport default MessageEdit;\n"]}