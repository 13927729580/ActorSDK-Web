{"version":3,"sources":["../../../../src/components/dialog/messages/MessageItem.react.js"],"names":[],"mappings":"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","file":"MessageItem.react.js","sourcesContent":["/*\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\n */\n\nimport { escape } from 'lodash';\nimport React, { Component, PropTypes } from 'react';\nimport { Container } from 'flux/utils';\nimport classnames from 'classnames';\nimport { escapeWithEmoji } from '../../../utils/EmojiUtils';\nimport PeerUtils from '../../../utils/PeerUtils';\nimport { MessageContentTypes } from '../../../constants/ActorAppConstants';\n\nimport DialogActionCreators from '../../../actions/DialogActionCreators';\nimport ActivityActionCreators from '../../../actions/ActivityActionCreators';\nimport DropdownActionCreators from '../../../actions/DropdownActionCreators';\n\nimport DropdownStore from '../../../stores/DropdownStore';\n\nimport AvatarItem from '../../common/AvatarItem.react';\nimport State from './State.react';\nimport Reactions from './Reactions.react';\n\n// Default message content components\nimport DefaultService from './Service.react';\nimport DefaultText from './Text.react';\nimport DefaultPhoto from './Photo.react.js';\nimport DefaultDocument from './Document.react';\nimport DefaultVoice from './Voice.react';\nimport DefaultContact from './Contact.react';\nimport DefaultLocation from './Location.react.js';\nimport DefaultModern from './Modern.react.js';\nimport DefaultSticker from './Sticker.react.js';\n\nclass MessageItem extends Component {\n  static getStores = () => [DropdownStore];\n\n  static calculateState(prevState, props) {\n    return {\n      isHighlighted: props && props.message ? DropdownStore.isOpen(props.message.rid) : false\n    }\n  }\n\n  static propTypes = {\n    peer: PropTypes.object.isRequired,\n    message: PropTypes.object.isRequired,\n    overlay: PropTypes.object.isRequired,\n    isShortMessage: PropTypes.bool,\n    isSelected: PropTypes.bool,\n    onSelect: PropTypes.func\n  };\n\n  static contextTypes = {\n    delegate: PropTypes.object,\n    isExperimental: PropTypes.bool\n  };\n\n  constructor(props) {\n    super(props);\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return (this.props.message !== nextProps.message || this.props.isShortMessage != nextProps.isShortMessage);\n  }\n\n  onClick = () => {\n    const { message, peer } = this.props;\n\n    if (PeerUtils.equals(peer, message.sender.peer)) {\n      ActivityActionCreators.show();\n    } else {\n      DialogActionCreators.selectDialogPeerUser(message.sender.peer.id);\n    }\n  };\n\n  showActions = (event) => {\n    const { message } = this.props;\n    DropdownActionCreators.openMessageActions(event.target.getBoundingClientRect(), message);\n  };\n\n  toggleMessageSelection = () => {\n    const { message, onSelect } = this.props;\n    onSelect && onSelect(message.rid);\n  };\n\n  render() {\n    const { message, overlay, peer, isSelected } = this.props;\n    const { isHighlighted } = this.state;\n    const { delegate, isExperimental } = this.context;\n    const isShortMessage = overlay.useShort;\n\n    let Service, Text, Modern, Photo, Document, Voice, Contact, Location, Sticker;\n    if (delegate.components.dialog && delegate.components.dialog.messages && delegate.components.dialog.messages.message !== null && typeof delegate.components.messages.message !== 'function') {\n      Service = delegate.components.dialog.messages.service || DefaultService;\n      Text = delegate.components.dialog.messages.text || DefaultText;\n      Modern = delegate.components.dialog.messages.modern || DefaultModern;\n      Photo = delegate.components.dialog.messages.photo || DefaultPhoto;\n      Document = delegate.components.dialog.messages.document || DefaultDocument;\n      Voice = delegate.components.dialog.messages.voice || DefaultVoice;\n      Contact = delegate.components.dialog.messages.contact || DefaultContact;\n      Location = delegate.components.dialog.messages.location || DefaultLocation;\n      Sticker = delegate.components.dialog.messages.sticker || DefaultSticker;\n    } else {\n      Service = DefaultService;\n      Text = DefaultText;\n      Modern = DefaultModern;\n      Photo = DefaultPhoto;\n      Document = DefaultDocument;\n      Voice = DefaultVoice;\n      Contact = DefaultContact;\n      Location = DefaultLocation;\n      Sticker = DefaultSticker;\n    }\n\n    let header = null,\n        messageContent = null,\n        leftBlock = null;\n\n    const messageSender = escapeWithEmoji(message.sender.title);\n\n    const messageClassName = classnames('message row', {\n      'message--same-sender': isShortMessage,\n      'message--active': isHighlighted,\n      'message--selected': isSelected\n    });\n    const messageActionsMenuClassName = classnames('message__actions__menu', {\n      'message__actions__menu--opened': isHighlighted\n    });\n\n    if (isShortMessage) {\n      leftBlock = (\n        <div className=\"message__info text-right\">\n          <time className=\"message__timestamp\">{message.date}</time>\n          <State message={message}/>\n        </div>\n      );\n    } else {\n      leftBlock = (\n        <div className=\"message__info message__info--avatar\">\n          <a onClick={this.onClick}>\n            <AvatarItem image={message.sender.avatar}\n                        placeholder={message.sender.placeholder}\n                        title={message.sender.title}/>\n          </a>\n        </div>\n      );\n      header = (\n        <header className=\"message__header\">\n          <h3 className=\"message__sender\">\n            <a onClick={this.onClick}>\n              {\n                message.sender.title\n                  ? <span className=\"message__sender__name\" dangerouslySetInnerHTML={{__html: messageSender}}/>\n                  : null\n              }\n              {\n                message.sender.userName\n                  ? <span className=\"message__sender__nick\">@{message.sender.userName}</span>\n                  : null\n              }\n            </a>\n          </h3>\n          <time className=\"message__timestamp\">{message.date}</time>\n          <State message={message}/>\n        </header>\n      );\n    }\n\n    switch (message.content.content) {\n      case MessageContentTypes.SERVICE:\n        messageContent = <Service {...message.content} className=\"message__content message__content--service\"/>;\n        break;\n      case MessageContentTypes.TEXT:\n        messageContent = <Text {...message.content} className=\"message__content message__content--text\"/>;\n        break;\n      case MessageContentTypes.PHOTO:\n        messageContent = (<Photo content={message.content} className=\"message__content message__content--photo\"\n                                loadedClassName=\"message__content--photo--loaded\"/>);\n        break;\n      case MessageContentTypes.DOCUMENT:\n        messageContent = <Document content={message.content} className=\"message__content message__content--document\"/>;\n        break;\n      case MessageContentTypes.VOICE:\n        messageContent = <Voice content={message.content} className=\"message__content message__content--voice\"/>;\n        break;\n      case MessageContentTypes.CONTACT:\n        messageContent = <Contact {...message.content} className=\"message__content message__content--contact\"/>;\n        break;\n      case MessageContentTypes.LOCATION:\n        messageContent = <Location content={message.content} className=\"message__content message__content--location\"/>;\n        break;\n      case MessageContentTypes.TEXT_MODERN:\n        messageContent = <Modern {...message.content} className=\"message__content message__content--modern\"/>;\n        break;\n      case MessageContentTypes.STICKER:\n        messageContent = <Sticker {...message.content} className=\"message__content message__content--sticker\"/>;\n        break;\n      default:\n    }\n\n    return (\n      <li className={messageClassName}>\n        {leftBlock}\n        <div className=\"message__body col-xs\">\n          {header}\n          {messageContent}\n        </div>\n        <div className=\"message__actions\">\n          <Reactions peer={peer} message={message}/>\n\n          <div className={messageActionsMenuClassName} onClick={this.showActions}>\n            <svg className=\"icon icon--dropdown\"\n                 dangerouslySetInnerHTML={{__html: '<use xlink:href=\"assets/images/icons.svg#cog\"/>'}}/>\n          </div>\n\n          {\n            isExperimental\n              ? <div className=\"message__actions__selector\" onClick={this.toggleMessageSelection}>\n                  <i className=\"icon material-icons\">check</i>\n                </div>\n              : null\n          }\n\n        </div>\n      </li>\n    );\n  }\n}\n\nexport default Container.create(MessageItem, {withProps: true});\n"]}