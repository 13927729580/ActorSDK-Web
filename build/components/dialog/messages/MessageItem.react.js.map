{"version":3,"sources":["../../../../src/components/dialog/messages/MessageItem.react.js"],"names":[],"mappings":";;;;;;AAIA;;AACA;;;;AACA;;AACA;;;;AACA;;AACA;;;;AACA;;AAEA;;;;AACA;;;;AACA;;;;AAEA;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;AAGA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;;;;;;IAEM,W;;;cACG,S,wBAAY;AACjB,WAAO,yBAAP;AACD,G;;cAEM,c,2BAAe,S,EAAW,K,EAAO;AACtC,WAAO;AACL,qBAAe,SAAS,MAAM,OAAf,GAAyB,wBAAc,qBAAd,CAAoC,MAAM,OAAN,CAAc,GAAlD,CAAzB,GAAkF;AAD5F,KAAP;AAGD,G;;AAgBD,uBAAY,KAAZ,EAAmB,OAAnB,EAA4B;AAAA;;AAAA,iDAC1B,sBAAM,KAAN,EAAa,OAAb,CAD0B;;AAAA,UAkD5B,WAlD4B,GAkDd,UAAC,KAAD,EAAW;AAAA,UACf,OADe,GACH,MAAK,KADF,CACf,OADe;;AAEvB,uCAAuB,kBAAvB,CAA0C,MAAM,MAAN,CAAa,qBAAb,EAA1C,EAAgF,OAAhF;AACD,KArD2B;;AAAA,UAuD5B,sBAvD4B,GAuDH,YAAM;AAAA,wBACC,MAAK,KADN;AAAA,UACrB,OADqB,eACrB,OADqB;AAAA,UACZ,QADY,eACZ,QADY;;AAE7B,kBAAY,SAAS,QAAQ,GAAjB,CAAZ;AACD,KA1D2B;;AAG1B,UAAK,OAAL,GAAe,MAAK,OAAL,CAAa,IAAb,OAAf;AAH0B;AAI3B;;wBAED,kB,iCAAqB;AAAA,QACX,MADW,GACA,KAAK,OAAL,CAAa,QAAb,CAAsB,UADtB,CACX,MADW;;AAEnB,QAAI,UAAU,OAAO,QAArB,EAA+B;AAC7B,WAAK,UAAL,GAAkB;AAChB,iBAAS,wBAAW,OAAO,QAAP,CAAgB,OAA3B,IAAsC,OAAO,QAAP,CAAgB,OAAtD,oBADO;AAEhB,cAAM,wBAAW,OAAO,QAAP,CAAgB,IAA3B,IAAmC,OAAO,QAAP,CAAgB,IAAnD,iBAFU;AAGhB,gBAAQ,wBAAW,OAAO,QAAP,CAAgB,MAA3B,IAAqC,OAAO,QAAP,CAAgB,MAArD,mBAHQ;AAIhB,eAAO,wBAAW,OAAO,QAAP,CAAgB,KAA3B,IAAoC,OAAO,QAAP,CAAgB,KAApD,kBAJS;AAKhB,kBAAU,wBAAW,OAAO,QAAP,CAAgB,QAA3B,IAAuC,OAAO,QAAP,CAAgB,QAAvD,qBALM;AAMhB,eAAO,wBAAW,OAAO,QAAP,CAAgB,KAA3B,IAAoC,OAAO,QAAP,CAAgB,KAApD,kBANS;AAOhB,iBAAS,wBAAW,OAAO,QAAP,CAAgB,OAA3B,IAAsC,OAAO,QAAP,CAAgB,OAAtD,oBAPO;AAQhB,kBAAU,wBAAW,OAAO,QAAP,CAAgB,QAA3B,IAAuC,OAAO,QAAP,CAAgB,QAAvD,qBARM;AAShB,iBAAU,wBAAW,OAAO,QAAP,CAAgB,OAA3B,IAAsC,OAAO,QAAP,CAAgB,OAAtD;AATM,OAAlB;AAWD,KAZD,MAYO;AACL,WAAK,UAAL,GAAkB;AAChB,kCADgB;AAEhB,4BAFgB;AAGhB,gCAHgB;AAIhB,8BAJgB;AAKhB,oCALgB;AAMhB,8BANgB;AAOhB,kCAPgB;AAQhB,oCARgB;AAShB;AATgB,OAAlB;AAWD;AACF,G;;wBAED,qB,kCAAsB,S,EAAW;AAC/B,WAAO,KAAK,KAAL,CAAW,OAAX,KAAuB,UAAU,OAAjC,IACA,KAAK,KAAL,CAAW,OAAX,KAAuB,UAAU,OADxC;AAED,G;;wBAED,O,sBAAU;AAAA,iBACkB,KAAK,KADvB;AAAA,QACA,OADA,UACA,OADA;AAAA,QACS,IADT,UACS,IADT;;;AAGR,QAAI,oBAAU,MAAV,CAAiB,IAAjB,EAAuB,QAAQ,MAAR,CAAe,IAAtC,CAAJ,EAAiD;AAC/C,uCAAuB,IAAvB;AACD,KAFD,MAEO;AACL,qCAAqB,oBAArB,CAA0C,QAAQ,MAAR,CAAe,IAAf,CAAoB,EAA9D;AACD;AACF,G;;wBAYD,Y,2BAAe;AAAA,kBACuB,KAAK,KAD5B;AAAA,QACL,OADK,WACL,OADK;AAAA,QACI,OADJ,WACI,OADJ;AAAA,QACa,KADb,WACa,KADb;;;AAGb,QAAI,OAAJ,EAAa;AACX,aAAO,IAAP;AACD;;AAED,QAAM,gBAAgB,iCAAgB,QAAQ,MAAR,CAAe,KAA/B,CAAtB;;AAEA,WACE;AAAA;MAAA,EAAQ,WAAU,iBAAlB;MACE;AAAA;QAAA,EAAI,WAAU,iBAAd;QACE;AAAA;UAAA,EAAG,SAAS,KAAK,OAAjB;UAEI,QAAQ,MAAR,CAAe,KAAf,GACI,wCAAM,WAAU,uBAAhB,EAAwC,yBAAyB,EAAE,QAAQ,aAAV,EAAjE,GADJ,GAEI,IAJR;UAOI,QAAQ,MAAR,CAAe,QAAf,GACI;AAAA;YAAA,EAAM,WAAU,uBAAhB;YAAA;YAA0C,QAAQ,MAAR,CAAe;AAAzD,WADJ,GAEI;AATR;AADF,OADF;MAeE;AAAA;QAAA,EAAM,WAAU,oBAAhB;QAAsC,QAAQ;AAA9C,OAfF;MAgBE,iDAAO,OAAO,KAAd;AAhBF,KADF;AAoBD,G;;wBAED,e,8BAAkB;AAAA,kBACoB,KAAK,KADzB;AAAA,QACR,OADQ,WACR,OADQ;AAAA,QACC,OADD,WACC,OADD;AAAA,QACU,KADV,WACU,KADV;;;AAGhB,QAAI,OAAJ,EAAa;AACX,aACE;AAAA;QAAA,EAAK,WAAU,0BAAf;QACE;AAAA;UAAA,EAAM,WAAU,oBAAhB;UAAsC,QAAQ;AAA9C,SADF;QAEE,iDAAO,OAAO,KAAd;AAFF,OADF;AAMD,KAPD,MAOO;AACL,aACE;AAAA;QAAA,EAAK,WAAU,qCAAf;QACE;AAAA;UAAA,EAAG,SAAS,KAAK,OAAjB;UACE;AACE,mBAAO,QAAQ,MAAR,CAAe,MADxB;AAEE,yBAAa,QAAQ,MAAR,CAAe,WAF9B;AAGE,mBAAO,QAAQ,MAAR,CAAe;AAHxB;AADF;AADF,OADF;AAWD;AACF,G;;wBAED,a,4BAAgB;AAAA,QACN,OADM,GACM,KAAK,KADX,CACN,OADM;AAAA,sBAEwE,KAAK,UAF7E;AAAA,QAEN,OAFM,eAEN,OAFM;AAAA,QAEG,IAFH,eAEG,IAFH;AAAA,QAES,KAFT,eAES,KAFT;AAAA,QAEgB,QAFhB,eAEgB,QAFhB;AAAA,QAE0B,KAF1B,eAE0B,KAF1B;AAAA,QAEiC,OAFjC,eAEiC,OAFjC;AAAA,QAE0C,QAF1C,eAE0C,QAF1C;AAAA,QAEoD,MAFpD,eAEoD,MAFpD;AAAA,QAE4D,OAF5D,eAE4D,OAF5D;;;AAId,YAAQ,QAAQ,OAAR,CAAgB,OAAxB;AACE,WAAK,uCAAoB,OAAzB;AACE,eACE,8BAAC,OAAD,eACM,QAAQ,OADd;AAEE,qBAAU;AAFZ,WADF;AAMF,WAAK,uCAAoB,IAAzB;AACE,eACE,8BAAC,IAAD,eACM,QAAQ,OADd;AAEE,qBAAU;AAFZ,WADF;AAMF,WAAK,uCAAoB,KAAzB;AACE,eACE,8BAAC,KAAD,eACM,QAAQ,OADd;AAEE,qBAAU,0CAFZ;AAGE,2BAAgB;AAHlB,WADF;AAOF,WAAK,uCAAoB,QAAzB;AACE,eACE,8BAAC,QAAD,eACM,QAAQ,OADd;AAEE,qBAAU;AAFZ,WADF;AAMF,WAAK,uCAAoB,KAAzB;AACE,eACE,8BAAC,KAAD,eACM,QAAQ,OADd;AAEE,qBAAU;AAFZ,WADF;AAMF,WAAK,uCAAoB,OAAzB;AACE,eACE,8BAAC,OAAD,eACM,QAAQ,OADd;AAEE,qBAAU;AAFZ,WADF;AAMF,WAAK,uCAAoB,QAAzB;AACE,eACE,8BAAC,QAAD,eACM,QAAQ,OADd;AAEE,qBAAU;AAFZ,WADF;AAMF,WAAK,uCAAoB,WAAzB;AACE,eACE,8BAAC,MAAD,eACM,QAAQ,OADd;AAEE,qBAAU;AAFZ,WADF;AAMF,WAAK,uCAAoB,OAAzB;AACE,eACE,8BAAC,OAAD,eACM,QAAQ,OADd;AAEE,qBAAU;AAFZ,WADF;AAMF;AACE,eAAO,IAAP;AAlEJ;AAoED,G;;wBAED,a,4BAAgB;AAAA,kBACY,KAAK,KADjB;AAAA,QACN,IADM,WACN,IADM;AAAA,QACA,OADA,WACA,OADA;AAAA,QAEN,aAFM,GAEY,KAAK,KAFjB,CAEN,aAFM;AAAA,QAGN,cAHM,GAGa,KAAK,OAHlB,CAGN,cAHM;;;AAKd,QAAM,8BAA8B,0BAAW,wBAAX,EAAqC;AACvE,wCAAkC;AADqC,KAArC,CAApC;;AAIA,WACE;AAAA;MAAA,EAAK,WAAU,kBAAf;MACE,qDAAW,MAAM,IAAjB,EAAuB,SAAS,OAAhC,GADF;MAGE;AAAA;QAAA,EAAK,WAAW,2BAAhB,EAA6C,SAAS,KAAK,WAA3D;QACE,mDAAS,WAAU,qBAAnB,EAAyC,OAAM,KAA/C;AADF,OAHF;MAQI,iBACI;AAAA;QAAA,EAAK,WAAU,4BAAf,EAA4C,SAAS,KAAK,sBAA1D;QACE,qCAAG,WAAU,gCAAb;AADF,OADJ,GAII;AAZR,KADF;AAiBD,G;;wBAED,M,qBAAS;AAAA,kBACyB,KAAK,KAD9B;AAAA,QACC,OADD,WACC,OADD;AAAA,QACU,UADV,WACU,UADV;AAAA,QAEC,aAFD,GAEmB,KAAK,KAFxB,CAEC,aAFD;;;AAIP,QAAM,mBAAmB,0BAAW,SAAX,EAAsB;AAC7C,wBAAkB,OAD2B;AAE7C,yBAAmB,aAF0B;AAG7C,2BAAqB;AAHwB,KAAtB,CAAzB;;AAMA,WACE;AAAA;MAAA,EAAK,WAAW,gBAAhB;MACE;AAAA;QAAA,EAAK,WAAU,KAAf;QACG,KAAK,eAAL,EADH;QAEE;AAAA;UAAA,EAAK,WAAU,sBAAf;UACG,KAAK,YAAL,EADH;UAEG,KAAK,aAAL;AAFH,SAFF;QAMG,KAAK,aAAL;AANH;AADF,KADF;AAYD,G;;;;;AAzQG,W,CAWG,S,GAAY;AACjB,QAAM,iBAAU,MAAV,CAAiB,UADN;AAEjB,WAAS,iBAAU,MAAV,CAAiB,UAFT;AAGjB,SAAO,iBAAU,MAAV,CAAiB,UAHP;AAIjB,WAAS,iBAAU,IAAV,CAAe,UAJP;AAKjB,cAAY,iBAAU,IALL;AAMjB,YAAU,iBAAU;AANH,C;AAXf,W,CAoBG,Y,GAAe;AACpB,YAAU,iBAAU,MADA;AAEpB,kBAAgB,iBAAU;AAFN,C;kBAwPT,iBAAU,MAAV,CAAiB,WAAjB,EAA8B,EAAE,WAAW,IAAb,EAA9B,C","file":"MessageItem.react.js","sourcesContent":["/*\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\n */\n\nimport { isFunction } from 'lodash';\nimport React, { Component, PropTypes } from 'react';\nimport { Container } from 'flux/utils';\nimport classnames from 'classnames';\nimport { escapeWithEmoji } from '../../../utils/EmojiUtils';\nimport PeerUtils from '../../../utils/PeerUtils';\nimport { MessageContentTypes } from '../../../constants/ActorAppConstants';\n\nimport DialogActionCreators from '../../../actions/DialogActionCreators';\nimport ActivityActionCreators from '../../../actions/ActivityActionCreators';\nimport DropdownActionCreators from '../../../actions/DropdownActionCreators';\n\nimport DropdownStore from '../../../stores/DropdownStore';\n\nimport SvgIcon from '../../common/SvgIcon.react';\nimport AvatarItem from '../../common/AvatarItem.react';\nimport State from './State.react';\nimport Reactions from './Reactions.react';\n\n// Default message content components\nimport DefaultService from './Service.react';\nimport DefaultText from './Text.react';\nimport DefaultPhoto from './Photo.react';\nimport DefaultDocument from './Document.react';\nimport DefaultVoice from './Voice.react';\nimport DefaultContact from './Contact.react';\nimport DefaultLocation from './Location.react';\nimport DefaultModern from './Modern.react';\nimport DefaultSticker from './Sticker.react';\n\nclass MessageItem extends Component {\n  static getStores() {\n    return [DropdownStore];\n  }\n\n  static calculateState(prevState, props) {\n    return {\n      isHighlighted: props && props.message ? DropdownStore.isMessageDropdownOpen(props.message.rid) : false\n    }\n  }\n\n  static propTypes = {\n    peer: PropTypes.object.isRequired,\n    message: PropTypes.object.isRequired,\n    state: PropTypes.string.isRequired,\n    isShort: PropTypes.bool.isRequired,\n    isSelected: PropTypes.bool,\n    onSelect: PropTypes.func\n  }\n\n  static contextTypes = {\n    delegate: PropTypes.object,\n    isExperimental: PropTypes.bool\n  }\n\n  constructor(props, context) {\n    super(props, context);\n\n    this.onClick = this.onClick.bind(this);\n  }\n\n  componentWillMount() {\n    const { dialog } = this.context.delegate.components;\n    if (dialog && dialog.messages) {\n      this.components = {\n        Service: isFunction(dialog.messages.service) ? dialog.messages.service : DefaultService,\n        Text: isFunction(dialog.messages.text) ? dialog.messages.text : DefaultText,\n        Modern: isFunction(dialog.messages.modern) ? dialog.messages.modern : DefaultModern,\n        Photo: isFunction(dialog.messages.photo) ? dialog.messages.photo : DefaultPhoto,\n        Document: isFunction(dialog.messages.document) ? dialog.messages.document : DefaultDocument,\n        Voice: isFunction(dialog.messages.voice) ? dialog.messages.voice : DefaultVoice,\n        Contact: isFunction(dialog.messages.contact) ? dialog.messages.contact : DefaultContact,\n        Location: isFunction(dialog.messages.location) ? dialog.messages.location : DefaultLocation,\n        Sticker:  isFunction(dialog.messages.sticker) ? dialog.messages.sticker : DefaultSticker\n      };\n    } else {\n      this.components = {\n        Service: DefaultService,\n        Text: DefaultText,\n        Modern: DefaultModern,\n        Photo: DefaultPhoto,\n        Document: DefaultDocument,\n        Voice: DefaultVoice,\n        Contact: DefaultContact,\n        Location: DefaultLocation,\n        Sticker: DefaultSticker\n      };\n    }\n  }\n\n  shouldComponentUpdate(nextProps) {\n    return this.props.message !== nextProps.message ||\n           this.props.isShort !== nextProps.isShort;\n  }\n\n  onClick() {\n    const { message, peer } = this.props;\n\n    if (PeerUtils.equals(peer, message.sender.peer)) {\n      ActivityActionCreators.show();\n    } else {\n      DialogActionCreators.selectDialogPeerUser(message.sender.peer.id);\n    }\n  }\n\n  showActions = (event) => {\n    const { message } = this.props;\n    DropdownActionCreators.openMessageActions(event.target.getBoundingClientRect(), message);\n  };\n\n  toggleMessageSelection = () => {\n    const { message, onSelect } = this.props;\n    onSelect && onSelect(message.rid);\n  };\n\n  renderHeader() {\n    const { isShort, message, state } = this.props;\n\n    if (isShort) {\n      return null;\n    }\n\n    const messageSender = escapeWithEmoji(message.sender.title);\n\n    return (\n      <header className=\"message__header\">\n        <h3 className=\"message__sender\">\n          <a onClick={this.onClick}>\n            {\n              message.sender.title\n                ? <span className=\"message__sender__name\" dangerouslySetInnerHTML={{ __html: messageSender }}/>\n                : null\n            }\n            {\n              message.sender.userName\n                ? <span className=\"message__sender__nick\">@{message.sender.userName}</span>\n                : null\n            }\n          </a>\n        </h3>\n        <time className=\"message__timestamp\">{message.date}</time>\n        <State state={state} />\n      </header>\n    );\n  }\n\n  renderLeftBlock() {\n    const { isShort, message, state } = this.props;\n\n    if (isShort) {\n      return (\n        <div className=\"message__info text-right\">\n          <time className=\"message__timestamp\">{message.date}</time>\n          <State state={state} />\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"message__info message__info--avatar\">\n          <a onClick={this.onClick}>\n            <AvatarItem\n              image={message.sender.avatar}\n              placeholder={message.sender.placeholder}\n              title={message.sender.title}\n            />\n          </a>\n        </div>\n      )\n    }\n  }\n\n  renderContent() {\n    const { message } = this.props;\n    const { Service, Text, Photo, Document, Voice, Contact, Location, Modern, Sticker } = this.components;\n\n    switch (message.content.content) {\n      case MessageContentTypes.SERVICE:\n        return (\n          <Service\n            {...message.content}\n            className=\"message__content message__content--service\"\n          />\n        );\n      case MessageContentTypes.TEXT:\n        return (\n          <Text\n            {...message.content}\n            className=\"message__content message__content--text\"\n          />\n        );\n      case MessageContentTypes.PHOTO:\n        return (\n          <Photo\n            {...message.content}\n            className=\"message__content message__content--photo\"\n            loadedClassName=\"message__content--photo--loaded\"\n          />\n        );\n      case MessageContentTypes.DOCUMENT:\n        return (\n          <Document\n            {...message.content}\n            className=\"message__content message__content--document\"\n          />\n        );\n      case MessageContentTypes.VOICE:\n        return (\n          <Voice\n            {...message.content}\n            className=\"message__content message__content--voice\"\n          />\n        );\n      case MessageContentTypes.CONTACT:\n        return (\n          <Contact\n            {...message.content}\n            className=\"message__content message__content--contact\"\n          />\n        );\n      case MessageContentTypes.LOCATION:\n        return (\n          <Location\n            {...message.content}\n            className=\"message__content message__content--location\"\n          />\n        );\n      case MessageContentTypes.TEXT_MODERN:\n        return (\n          <Modern\n            {...message.content}\n            className=\"message__content message__content--modern\"\n          />\n        );\n      case MessageContentTypes.STICKER:\n        return (\n          <Sticker\n            {...message.content}\n            className=\"message__content message__content--sticker\"\n          />\n        );\n      default:\n        return null;\n    }\n  }\n\n  renderActions() {\n    const { peer, message } = this.props;\n    const { isHighlighted } = this.state;\n    const { isExperimental } = this.context;\n\n    const messageActionsMenuClassName = classnames('message__actions__menu', {\n      'message__actions__menu--opened': isHighlighted\n    });\n\n    return (\n      <div className=\"message__actions\">\n        <Reactions peer={peer} message={message}/>\n\n        <div className={messageActionsMenuClassName} onClick={this.showActions}>\n          <SvgIcon className=\"icon icon--dropdown\" glyph=\"cog\" />\n        </div>\n\n        {\n          isExperimental\n            ? <div className=\"message__actions__selector\" onClick={this.toggleMessageSelection}>\n                <i className=\"icon material-icons icon-check\"></i>\n              </div>\n            : null\n        }\n      </div>\n    );\n  }\n\n  render() {\n    const { isShort, isSelected } = this.props;\n    const { isHighlighted } = this.state;\n\n    const messageClassName = classnames('message', {\n      'message--short': isShort,\n      'message--active': isHighlighted,\n      'message--selected': isSelected\n    });\n\n    return (\n      <div className={messageClassName}>\n        <div className=\"row\">\n          {this.renderLeftBlock()}\n          <div className=\"message__body col-xs\">\n            {this.renderHeader()}\n            {this.renderContent()}\n          </div>\n          {this.renderActions()}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Container.create(MessageItem, { withProps: true });\n"]}