{"version":3,"sources":["../../../../src/components/dialog/messages/MessageItem.react.js"],"names":[],"mappings":"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","file":"MessageItem.react.js","sourcesContent":["/*\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\n */\n\nimport { isFunction } from 'lodash';\nimport React, { Component, PropTypes } from 'react';\nimport { Container } from 'flux/utils';\nimport classnames from 'classnames';\nimport { escapeWithEmoji } from '../../../utils/EmojiUtils';\nimport PeerUtils from '../../../utils/PeerUtils';\nimport { MessageContentTypes } from '../../../constants/ActorAppConstants';\n\nimport DialogActionCreators from '../../../actions/DialogActionCreators';\nimport ActivityActionCreators from '../../../actions/ActivityActionCreators';\nimport DropdownActionCreators from '../../../actions/DropdownActionCreators';\n\nimport DropdownStore from '../../../stores/DropdownStore';\n\nimport SvgIcon from '../../common/SvgIcon.react';\nimport AvatarItem from '../../common/AvatarItem.react';\nimport State from './State.react';\nimport Reactions from './Reactions.react';\n\n// Default message content components\nimport DefaultService from './Service.react';\nimport DefaultText from './Text.react';\nimport DefaultPhoto from './Photo.react';\nimport DefaultDocument from './Document.react';\nimport DefaultVoice from './Voice.react';\nimport DefaultContact from './Contact.react';\nimport DefaultLocation from './Location.react';\nimport DefaultModern from './Modern.react';\nimport DefaultSticker from './Sticker.react';\n\nclass MessageItem extends Component {\n  static getStores() {\n    return [DropdownStore];\n  }\n\n  static calculateState(prevState, props) {\n    return {\n      isHighlighted: props && props.message ? DropdownStore.isMessageDropdownOpen(props.message.rid) : false\n    }\n  }\n\n  static propTypes = {\n    peer: PropTypes.object.isRequired,\n    message: PropTypes.object.isRequired,\n    state: PropTypes.string.isRequired,\n    isShort: PropTypes.bool.isRequired,\n    isSelected: PropTypes.bool,\n    onSelect: PropTypes.func\n  };\n\n  static contextTypes = {\n    delegate: PropTypes.object,\n    isExperimental: PropTypes.bool\n  };\n\n  shouldComponentUpdate(nextProps) {\n    return (this.props.message !== nextProps.message || this.props.isShort !== nextProps.isShort);\n  }\n\n  onClick = () => {\n    const { message, peer } = this.props;\n\n    if (PeerUtils.equals(peer, message.sender.peer)) {\n      ActivityActionCreators.show();\n    } else {\n      DialogActionCreators.selectDialogPeerUser(message.sender.peer.id);\n    }\n  };\n\n  showActions = (event) => {\n    const { message } = this.props;\n    DropdownActionCreators.openMessageActions(event.target.getBoundingClientRect(), message);\n  };\n\n  toggleMessageSelection = () => {\n    const { message, onSelect } = this.props;\n    onSelect && onSelect(message.rid);\n  };\n\n  render() {\n    const { peer, message, state, isShort, isSelected } = this.props;\n    const { isHighlighted } = this.state;\n    const { delegate, isExperimental } = this.context;\n\n    let Service, Text, Modern, Photo, Document, Voice, Contact, Location, Sticker;\n    if (delegate.components.dialog && delegate.components.dialog.messages && !isFunction(delegate.components.dialog.messages.message)) {\n      Service = delegate.components.dialog.messages.service || DefaultService;\n      Text = delegate.components.dialog.messages.text || DefaultText;\n      Modern = delegate.components.dialog.messages.modern || DefaultModern;\n      Photo = delegate.components.dialog.messages.photo || DefaultPhoto;\n      Document = delegate.components.dialog.messages.document || DefaultDocument;\n      Voice = delegate.components.dialog.messages.voice || DefaultVoice;\n      Contact = delegate.components.dialog.messages.contact || DefaultContact;\n      Location = delegate.components.dialog.messages.location || DefaultLocation;\n      Sticker = delegate.components.dialog.messages.sticker || DefaultSticker;\n    } else {\n      Service = DefaultService;\n      Text = DefaultText;\n      Modern = DefaultModern;\n      Photo = DefaultPhoto;\n      Document = DefaultDocument;\n      Voice = DefaultVoice;\n      Contact = DefaultContact;\n      Location = DefaultLocation;\n      Sticker = DefaultSticker;\n    }\n\n    let header = null,\n        messageContent = null,\n        leftBlock = null;\n\n    const messageSender = escapeWithEmoji(message.sender.title);\n\n    const messageClassName = classnames('message', {\n      'message--same-sender': isShort,\n      'message--active': isHighlighted,\n      'message--selected': isSelected\n    });\n    const messageActionsMenuClassName = classnames('message__actions__menu', {\n      'message__actions__menu--opened': isHighlighted\n    });\n\n    if (isShort) {\n      leftBlock = (\n        <div className=\"message__info text-right\">\n          <time className=\"message__timestamp\">{message.date}</time>\n          <State state={state} />\n        </div>\n      );\n    } else {\n      leftBlock = (\n        <div className=\"message__info message__info--avatar\">\n          <a onClick={this.onClick}>\n            <AvatarItem image={message.sender.avatar}\n                        placeholder={message.sender.placeholder}\n                        title={message.sender.title}/>\n          </a>\n        </div>\n      );\n      header = (\n        <header className=\"message__header\">\n          <h3 className=\"message__sender\">\n            <a onClick={this.onClick}>\n              {\n                message.sender.title\n                  ? <span className=\"message__sender__name\" dangerouslySetInnerHTML={{ __html: messageSender }}/>\n                  : null\n              }\n              {\n                message.sender.userName\n                  ? <span className=\"message__sender__nick\">@{message.sender.userName}</span>\n                  : null\n              }\n            </a>\n          </h3>\n          <time className=\"message__timestamp\">{message.date}</time>\n          <State state={state} />\n        </header>\n      );\n    }\n\n    switch (message.content.content) {\n      case MessageContentTypes.SERVICE:\n        messageContent = <Service {...message.content} className=\"message__content message__content--service\"/>;\n        break;\n      case MessageContentTypes.TEXT:\n        messageContent = <Text {...message.content} className=\"message__content message__content--text\"/>;\n        break;\n      case MessageContentTypes.PHOTO:\n        messageContent = (<Photo content={message.content} className=\"message__content message__content--photo\"\n                                loadedClassName=\"message__content--photo--loaded\"/>);\n        break;\n      case MessageContentTypes.DOCUMENT:\n        messageContent = <Document content={message.content} className=\"message__content message__content--document\"/>;\n        break;\n      case MessageContentTypes.VOICE:\n        messageContent = <Voice content={message.content} className=\"message__content message__content--voice\"/>;\n        break;\n      case MessageContentTypes.CONTACT:\n        messageContent = <Contact {...message.content} className=\"message__content message__content--contact\"/>;\n        break;\n      case MessageContentTypes.LOCATION:\n        messageContent = <Location content={message.content} className=\"message__content message__content--location\"/>;\n        break;\n      case MessageContentTypes.TEXT_MODERN:\n        messageContent = <Modern {...message.content} className=\"message__content message__content--modern\"/>;\n        break;\n      case MessageContentTypes.STICKER:\n        messageContent = <Sticker {...message.content} className=\"message__content message__content--sticker\"/>;\n        break;\n      default:\n    }\n\n    return (\n      <div className={messageClassName}>\n        <div className=\"row\">\n          {leftBlock}\n          <div className=\"message__body col-xs\">\n            {header}\n            {messageContent}\n          </div>\n          <div className=\"message__actions\">\n            <Reactions peer={peer} message={message}/>\n\n            <div className={messageActionsMenuClassName} onClick={this.showActions}>\n              <SvgIcon className=\"icon icon--dropdown\" glyph=\"cog\" />\n            </div>\n\n            {\n              isExperimental\n                ? <div className=\"message__actions__selector\" onClick={this.toggleMessageSelection}>\n                    <i className=\"icon material-icons icon-check\"></i>\n                  </div>\n                : null\n            }\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Container.create(MessageItem, { withProps: true });\n"]}