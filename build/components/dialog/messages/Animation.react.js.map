{"version":3,"sources":["../../../../src/components/dialog/messages/Animation.react.js"],"names":[],"mappings":"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","file":"Animation.react.js","sourcesContent":["/*\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\n */\n\nimport React, { Component, PropTypes } from 'react';\nimport PreferencesStore from '../../../stores/PreferencesStore';\nimport { getDimentions, lightbox, renderImageToCanvas } from '../../../utils/ImageUtils';\n\nclass Animation extends Component {\n  static propTypes = {\n    fileUrl: PropTypes.string,\n    w: PropTypes.number.isRequired,\n    h: PropTypes.number.isRequired,\n    preview: PropTypes.string.isRequired\n  };\n\n  constructor(props) {\n    super(props);\n\n    if (!PreferencesStore.isAnimationAutoPlayEnabled()) {\n      this.state = {\n        playing: false\n      };\n    }\n\n    this.onClick = this.onClick.bind(this);\n    this.onMouseEnter = this.onMouseEnter.bind(this);\n    this.onMouseLeave = this.onMouseLeave.bind(this);\n  }\n\n  componentDidMount() {\n    renderImageToCanvas(this.props.preview, this.refs.canvas);\n    this.updateFrameUrl(this.props);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.updateFrameUrl(nextProps);\n  }\n\n  updateFrameUrl({ fileUrl }) {\n    if (!fileUrl || !this.state) {\n      return;\n    }\n\n    renderImageToCanvas(fileUrl, this.refs.canvas).catch((e) => {\n      console.error(e);\n    });\n  }\n\n  onClick(event) {\n    event.preventDefault();\n    lightbox.open(this.props.fileUrl, 'message');\n  }\n\n  onMouseEnter() {\n    this.setState({ playing: true });\n  }\n\n  onMouseLeave() {\n    this.setState({ playing: false });\n  }\n\n  getDimentions() {\n    const { w: width, h: height } = this.props;\n    return getDimentions(width, height);\n  }\n\n  render() {\n    const { width, height } = this.getDimentions();\n    const source = this.props.fileUrl || this.props.preview;\n\n    if (!this.state) {\n      return (\n        <img\n          className=\"message__photo\"\n          src={source}\n          width={width}\n          height={height}\n          onClick={this.onClick}\n        />\n      );\n    }\n\n    const { playing } = this.state;\n    const canvasStyle = { width, height };\n    if (playing) {\n      canvasStyle.display = 'none';\n    }\n\n    return (\n      <div>\n        <img\n          className=\"message__photo\"\n          src={source}\n          width={width}\n          height={height}\n          style={playing ? {} : { display: 'none' }}\n          onClick={this.onClick}\n          onMouseEnter={this.onMouseEnter}\n          onMouseLeave={this.onMouseLeave}\n        />\n        <canvas\n          className=\"message__photo\"\n          ref=\"canvas\"\n          width={width}\n          height={height}\n          style={canvasStyle}\n          onMouseEnter={this.onMouseEnter}\n          onMouseLeave={this.onMouseLeave}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Animation;\n"]}