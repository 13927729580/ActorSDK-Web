{"version":3,"sources":["../../../../src/components/dialog/messages/Animation.react.js"],"names":[],"mappings":"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","file":"Animation.react.js","sourcesContent":["/*\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\n */\n\nimport React, { Component, PropTypes } from 'react';\nimport PreferencesStore from '../../../stores/PreferencesStore';\nimport { getDimentions, lightbox, renderImageToCanvas } from '../../../utils/ImageUtils';\n\nclass Animation extends Component {\n  static propTypes = {\n    fileUrl: PropTypes.string,\n    w: PropTypes.number.isRequired,\n    h: PropTypes.number.isRequired,\n    preview: PropTypes.string.isRequired\n  };\n\n  constructor(props) {\n    super(props);\n\n    if (!PreferencesStore.isAnimationAutoPlayEnabled()) {\n      this.state = {\n        playing: false\n      };\n    }\n\n    this.onClick = this.onClick.bind(this);\n    this.onMouseEnter = this.onMouseEnter.bind(this);\n    this.onMouseLeave = this.onMouseLeave.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.state) {\n      renderImageToCanvas(this.props.preview, this.refs.canvas).catch((e) => {\n        console.error(e);\n      });\n    }\n  }\n\n  onClick(event) {\n    event.preventDefault();\n    lightbox.open(this.props.fileUrl, 'message');\n  }\n\n  onMouseEnter() {\n    this.setState({ playing: true });\n  }\n\n  onMouseLeave() {\n    this.setState({ playing: false });\n  }\n\n  getDimentions() {\n    const { w: width, h: height } = this.props;\n    return getDimentions(width, height);\n  }\n\n  renderImage(source, width, height, playing) {\n    if (!playing) {\n      return null;\n    }\n\n    return (\n      <img\n        src={source}\n        width={width}\n        height={height}\n        onClick={this.onClick}\n        onMouseEnter={this.onMouseEnter}\n        onMouseLeave={this.onMouseLeave}\n      />\n    );\n  }\n\n  renderCanvas(width, height, playing) {\n    const style = { width, height };\n    if (playing) {\n      // Hide using style because DOM node required by renderImageToCanvas\n      style.display = 'none';\n    }\n\n    return (\n      <canvas\n        ref=\"canvas\"\n        style={style}\n        onMouseEnter={this.onMouseEnter}\n        onMouseLeave={this.onMouseLeave}\n      />\n    );\n  }\n\n  renderState(playing) {\n    const glyph = playing ? 'play_circle_outline' : 'pause_circle_outline';\n\n    return (\n      <i className=\"material-icons message__animation__state\">{glyph}</i>\n    );\n  }\n\n  render() {\n    const { width, height } = this.getDimentions();\n    const source = this.props.fileUrl || this.props.preview;\n\n    if (!this.state) {\n      return (\n        <img\n          className=\"message__photo\"\n          src={source}\n          width={width}\n          height={height}\n          onClick={this.onClick}\n        />\n      );\n    }\n\n    const { playing } = this.state;\n\n    return (\n      <div className=\"message__animation\" style={{ width, height }}>\n        {this.renderState(playing)}\n        {this.renderImage(source, width, height, playing)}\n        {this.renderCanvas(width, height, playing)}\n      </div>\n    );\n  }\n}\n\nexport default Animation;\n"]}