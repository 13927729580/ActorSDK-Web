{"version":3,"sources":["../../../src/components/dialog/MessagesList.react.js"],"names":[],"mappings":"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","file":"MessagesList.react.js","sourcesContent":["/*\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\n */\n\nimport { isFunction } from 'lodash';\n\nimport React, { Component, PropTypes } from 'react';\nimport {shouldComponentUpdate} from 'react-addons-pure-render-mixin';\nimport Loading from './messages/Loading.react';\nimport Welcome from './messages/Welcome.react';\nimport MessagesScroller from './MessagesScroller.react';\nimport DefaultMessageItem from './messages/MessageItem.react';\n\nclass MessagesList extends Component {\n  static contextTypes = {\n    delegate: PropTypes.object.isRequired\n  };\n\n  static propTypes = {\n    peer: PropTypes.object.isRequired,\n    messages: PropTypes.array.isRequired,\n    overlay: PropTypes.array.isRequired,\n    count: PropTypes.number.isRequired,\n    selectedMessages: PropTypes.object.isRequired,\n    isMember: PropTypes.bool.isRequired,\n    isAllMessagesLoaded: PropTypes.bool.isRequired,\n    onSelect: PropTypes.func.isRequired,\n    onVisibilityChange: PropTypes.func.isRequired,\n    onLoadMore: PropTypes.func.isRequired\n  };\n\n  constructor(props, context) {\n    super(props, context);\n\n    const {dialog} = context.delegate.components;\n    if (dialog && dialog.messages && isFunction(dialog.messages.message)) {\n      this.components = {\n        MessageItem: dialog.messages.message\n      };\n    } else {\n      this.components = {\n        MessageItem: DefaultMessageItem\n      };\n    }\n\n    this.shouldComponentUpdate = shouldComponentUpdate.bind(this);\n  }\n\n  renderWelcome() {\n    const {peer, isMember, isAllMessagesLoaded} = this.props;\n\n    if (isMember && isAllMessagesLoaded) {\n      return <Welcome peer={peer} />;\n    }\n\n    return null;\n  }\n\n  renderLoading() {\n    const {isAllMessagesLoaded, messages} = this.props;\n\n    if (!isAllMessagesLoaded && messages.length >= 30) {\n      return <Loading />;\n    }\n\n    return null;\n  }\n\n  renderMessages() {\n    const { peer, messages, overlay, count, selectedMessages } = this.props;\n    const { MessageItem } = this.components;\n\n    const result = [];\n    for (let index = messages.length - count; index < messages.length; index++) {\n      const overlayItem = overlay[index];\n      if (overlayItem && overlayItem.dateDivider) {\n        result.push(\n          <div className=\"date-divider\" key={overlayItem.dateDivider}>\n            {overlayItem.dateDivider}\n          </div>\n        );\n      }\n\n      const message = messages[index];\n      result.push(\n        <MessageItem\n          key={message.sortKey}\n          message={message}\n          isShort={overlayItem.useShort}\n          isSelected={selectedMessages.has(message.rid)}\n          onSelect={this.props.onSelect}\n          onVisibilityChange={this.props.onVisibilityChange}\n          peer={peer}\n        />\n      );\n    }\n\n    return result;\n  }\n\n  render() {\n    const { peer, onLoadMore } = this.props;\n\n    return (\n      <MessagesScroller className=\"messages\" peer={peer} onLoadMore={onLoadMore}>\n        <div className=\"messages__list\">\n          {this.renderWelcome()}\n          {this.renderLoading()}\n          {this.renderMessages()}\n        </div>\n      </MessagesScroller>\n    )\n  }\n}\n\nexport default MessagesList;\n"]}