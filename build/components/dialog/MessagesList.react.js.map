{"version":3,"sources":["../../../src/components/dialog/MessagesList.react.js"],"names":[],"mappings":"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","file":"MessagesList.react.js","sourcesContent":["/*\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\n */\n\nimport { isFunction, debounce } from 'lodash';\n\nimport React, { Component, PropTypes } from 'react';\n\nimport { MessageChangeReason } from '../../constants/ActorAppConstants';\n\nimport PeerUtils from '../../utils/PeerUtils';\nimport { getMessageState } from '../../utils/MessageUtils';\n\nimport Scroller from '../common/Scroller.react';\n\nimport DefaultMessageItem from './messages/MessageItem.react';\nimport DefaultWelcome from './messages/Welcome.react';\nimport Loading from './messages/Loading.react';\n\nfunction isLastMessageMine(uid, { messages }) {\n  const lastMessage = messages[messages.length - 1];\n  return lastMessage && uid === lastMessage.sender.peer.id;\n}\n\nclass MessagesList extends Component {\n  static contextTypes = {\n    delegate: PropTypes.object.isRequired\n  };\n\n  static propTypes = {\n    uid: PropTypes.number.isRequired,\n    peer: PropTypes.object.isRequired,\n    messages: PropTypes.shape({\n      messages: PropTypes.array.isRequired,\n      overlay: PropTypes.array.isRequired,\n      count: PropTypes.number.isRequired,\n      isLoaded: PropTypes.bool.isRequired,\n      receiveDate: PropTypes.number.isRequired,\n      readDate: PropTypes.number.isRequired,\n      isLoading: PropTypes.bool.isRequired,\n      selected: PropTypes.object.isRequired,\n      changeReason: PropTypes.oneOf([\n        MessageChangeReason.UNKNOWN,\n        MessageChangeReason.PUSH,\n        MessageChangeReason.UNSHIFT,\n        MessageChangeReason.UPDATE\n      ]).isRequired\n    }).isRequired,\n    isMember: PropTypes.bool.isRequired,\n    onSelect: PropTypes.func.isRequired,\n    onLoadMore: PropTypes.func.isRequired\n  };\n\n  constructor(props, context) {\n    super(props, context);\n\n    const { dialog } = context.delegate.components;\n    if (dialog && dialog.messages) {\n      this.components = {\n        MessageItem: isFunction(dialog.messages.message) ? dialog.messages.message : DefaultMessageItem,\n        Welcome: isFunction(dialog.messages.welcome) ? dialog.messages.welcome : DefaultWelcome\n      };\n    } else {\n      this.components = {\n        MessageItem: DefaultMessageItem,\n        Welcome: DefaultWelcome\n      };\n    }\n\n    this.dimensions = null;\n\n    this.onScroll = this.onScroll.bind(this);\n    this.onResize = this.onResize.bind(this);\n    this.onLoadMore = debounce(this.onLoadMore.bind(this), 60, {\n      maxWait: 180\n    });\n  }\n\n  shouldComponentUpdate(prevProps) {\n    return prevProps.peer !== this.props.peer ||\n           prevProps.messages !== this.props.messages ||\n           prevProps.isMember !== this.props.isMember;\n  }\n\n  componentDidMount() {\n    this.restoreScroll();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (!PeerUtils.equals(nextProps.peer, this.props.peer)) {\n      this.dimensions = null;\n    }\n  }\n\n  componentDidUpdate() {\n    const { dimensions, refs: { scroller }, props: { uid, messages } } = this;\n\n    if (messages.changeReason === MessageChangeReason.PUSH) {\n      if (!dimensions || isLastMessageMine(uid, messages)) {\n        scroller.scrollToBottom();\n        this.updateDimensions();\n      }\n    } else if (messages.changeReason === MessageChangeReason.UNSHIFT) {\n      if (dimensions) {\n        const currDimensions = scroller.getDimensions();\n        scroller.scrollTo(currDimensions.scrollHeight - dimensions.scrollHeight);\n        this.updateDimensions();\n      }\n    }\n  }\n\n  onLoadMore() {\n    if (this.props.messages.isLoading) {\n      return;\n    }\n\n    const dimensions = this.refs.scroller.getDimensions();\n    if (dimensions.scrollTop < 100) {\n      this.props.onLoadMore();\n    }\n  }\n\n  onScroll() {\n    this.onLoadMore();\n    this.updateDimensions();\n  }\n\n  onResize() {\n    const { dimensions, refs: { scroller } } = this;\n    if (dimensions) {\n      const ratio = dimensions.scrollTop / dimensions.scrollHeight;\n      const nextDimensions = scroller.getDimensions();\n      scroller.scrollTo(ratio * nextDimensions.scrollHeight);\n      this.dimensions = nextDimensions;\n    } else {\n      scroller.scrollToBottom();\n    }\n  }\n\n  renderHeader() {\n    const { peer, isMember, messages } = this.props;\n\n    if (!isMember) {\n      return null;\n    }\n\n    if (messages.isLoaded) {\n      const { Welcome } = this.components;\n      return <Welcome peer={peer} key=\"header\" />;\n    }\n\n    return <Loading key=\"header\" />;\n  }\n\n  renderMessages() {\n    const { uid, peer, messages: { messages, overlay, count, selected, receiveDate, readDate } } = this.props;\n    const { MessageItem } = this.components;\n\n    const result = [];\n    for (let index = messages.length - count; index < messages.length; index++) {\n      const overlayItem = overlay[index];\n      if (overlayItem && overlayItem.dateDivider) {\n        result.push(\n          <div className=\"date-divider\" key={overlayItem.dateDivider}>\n            {overlayItem.dateDivider}\n          </div>\n        );\n      }\n\n      const message = messages[index];\n\n      result.push(\n        <MessageItem\n          peer={peer}\n          message={message}\n          state={getMessageState(message, uid, receiveDate, readDate)}\n          isShort={overlayItem.useShort}\n          isSelected={selected.has(message.rid)}\n          onSelect={this.props.onSelect}\n          key={message.sortKey}\n        />\n      );\n    }\n\n    return result;\n  }\n\n  render() {\n    return (\n      <Scroller\n        className=\"chat__messages\"\n        ref=\"scroller\"\n        onScroll={this.onScroll}\n        onResize={this.onResize}\n      >\n        {this.renderHeader()}\n        {this.renderMessages()}\n      </Scroller>\n    )\n  }\n\n  updateDimensions() {\n    const dimensions = this.refs.scroller.getDimensions();\n    if (dimensions.scrollHeight === dimensions.scrollTop + dimensions.offsetHeight) {\n      this.dimensions = null;\n    } else {\n      this.dimensions = dimensions;\n    }\n  }\n\n  restoreScroll() {\n    const { dimensions, refs: { scroller } } = this;\n\n    if (dimensions) {\n      scroller.scrollTo(dimensions.scrollTop);\n    } else {\n      scroller.scrollToBottom();\n    }\n  }\n}\n\nexport default MessagesList;\n"]}