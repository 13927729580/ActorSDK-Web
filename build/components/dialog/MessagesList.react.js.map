{"version":3,"sources":["../../../src/components/dialog/MessagesList.react.js"],"names":[],"mappings":"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","file":"MessagesList.react.js","sourcesContent":["/*\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\n */\n\nimport { isFunction } from 'lodash';\n\nimport React, { Component, PropTypes } from 'react';\nimport {shouldComponentUpdate} from 'react-addons-pure-render-mixin';\n\nimport { getMessageState } from '../../utils/MessageUtils';\n\nimport MessagesScroller from './MessagesScroller.react';\n\nimport DefaultMessageItem from './messages/MessageItem.react';\nimport DefaultWelcome from './messages/Welcome.react';\nimport Loading from './messages/Loading.react';\n\nclass MessagesList extends Component {\n  static contextTypes = {\n    delegate: PropTypes.object.isRequired\n  };\n\n  static propTypes = {\n    uid: PropTypes.number.isRequired,\n    peer: PropTypes.object.isRequired,\n    messages: PropTypes.array.isRequired,\n    overlay: PropTypes.array.isRequired,\n    count: PropTypes.number.isRequired,\n    selected: PropTypes.object.isRequired,\n    isMember: PropTypes.bool.isRequired,\n    isLoaded: PropTypes.bool.isRequired,\n    receiveDate: PropTypes.number.isRequired,\n    readDate: PropTypes.number.isRequired,\n    onSelect: PropTypes.func.isRequired,\n    onLoadMore: PropTypes.func.isRequired\n  };\n\n  constructor(props, context) {\n    super(props, context);\n\n    const { dialog } = context.delegate.components;\n    if (dialog && dialog.messages) {\n      this.components = {\n        MessageItem: isFunction(dialog.messages.message) ? dialog.messages.message : DefaultMessageItem,\n        Welcome: isFunction(dialog.messages.welcome) ? dialog.messages.welcome : DefaultWelcome\n      };\n    } else {\n      this.components = {\n        MessageItem: DefaultMessageItem,\n        Welcome: DefaultWelcome\n      };\n    }\n\n    this.shouldComponentUpdate = shouldComponentUpdate.bind(this);\n  }\n\n  renderHeader() {\n    const { peer, isMember, messages, isLoaded } = this.props;\n    const { Welcome } = this.components;\n\n    if (!isMember) {\n      return null;\n    }\n\n    if (!isLoaded && messages.length >= 30) {\n      return <Loading key=\"header\" />;\n    }\n\n    return <Welcome peer={peer} key=\"header\" />;\n  }\n\n  renderMessages() {\n    const { uid, peer, messages, overlay, count, selected, receiveDate, readDate } = this.props;\n    const { MessageItem } = this.components;\n\n    const result = [];\n    for (let index = messages.length - count; index < messages.length; index++) {\n      const overlayItem = overlay[index];\n      if (overlayItem && overlayItem.dateDivider) {\n        result.push(\n          <div className=\"date-divider\" key={overlayItem.dateDivider}>\n            {overlayItem.dateDivider}\n          </div>\n        );\n      }\n\n      const message = messages[index];\n\n      result.push(\n        <MessageItem\n          peer={peer}\n          message={message}\n          state={getMessageState(message, uid, receiveDate, readDate)}\n          isShort={overlayItem.useShort}\n          isSelected={selected.has(message.rid)}\n          onSelect={this.props.onSelect}\n          key={message.sortKey}\n        />\n      );\n    }\n\n    return result;\n  }\n\n  render() {\n    const { peer, onLoadMore } = this.props;\n\n    return (\n      <MessagesScroller className=\"chat__messages\" peer={peer} onLoadMore={onLoadMore}>\n        {this.renderHeader()}\n        {this.renderMessages()}\n      </MessagesScroller>\n    )\n  }\n}\n\nexport default MessagesList;\n"]}