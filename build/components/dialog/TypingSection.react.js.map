{"version":3,"sources":["../../../src/components/dialog/TypingSection.react.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAOiB,eAAe,oBAAzB,MAAM,CAAI,eAAe;;IAM1B,MAAM;YAAN,MAAM;;AACV,WADI,MAAM,CACE,KAAK,EAAE;0BADf,MAAM;;uEAAN,MAAM,aAEF,KAAK;;UAgBb,cAAc,GAAG,YAAM;AACrB,UAAM,MAAM,GAAG,sBAAY,uBAAuB,EAAE,CAAC;AACrD,UAAI,MAAM,KAAK,IAAI,EAAE;AACnB,cAAK,QAAQ,CAAC,EAAC,IAAI,EAAE,KAAK,EAAC,CAAC,CAAC;OAC9B,MAAM;AACL,cAAK,QAAQ,CAAC,EAAC,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,EAAC,CAAC,CAAC;OAC7C;KACF;;AArBC,UAAK,KAAK,GAAG;AACX,YAAM,EAAE,IAAI;AACZ,UAAI,EAAE,KAAK;KACZ,CAAA;;GACF;;eARG,MAAM;;wCAUU;AAClB,4BAAY,iBAAiB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;KACpD;;;2CAEsB;AACrB,4BAAY,oBAAoB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;KACvD;;;6BAWQ;AACP,UAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;AACjC,UAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;AAC7B,UAAM,eAAe,GAAG,0BAAW,QAAQ,EAAE;AAC3C,wBAAgB,EAAE,IAAI,KAAK,KAAK;OACjC,CAAC,CAAC;;AAEH,aACE;;UAAK,SAAS,EAAE,eAAe,AAAC;QAC9B;;YAAK,SAAS,EAAC,kBAAkB;UAAC,wCAAO;UAAA,wCAAO;UAAA,wCAAO;SAAM;QAC7D;;;UAAO,MAAM;SAAQ;OACjB,CACN;KACH;;;SAxCG,MAAM;UATI,SAAS;;AAoDzB,qBAAW,OAAO,CAAC,MAAM,EAAE,eAAe,CAAC,CAAC;;kBAE7B,MAAM","file":"TypingSection.react.js","sourcesContent":["/*\n * Copyright (C) 2015 Actor LLC. <https://actor.im>\n */\n\nimport React, { Component } from 'react';\nimport ReactMixin from 'react-mixin';\nimport addons from 'react/addons';\nconst {addons: { PureRenderMixin }} = addons;\n\nimport classNames from 'classnames';\n\nimport DialogStore from '../../stores/DialogStore';\n\nclass Typing extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      typing: null,\n      show: false\n    }\n  }\n\n  componentDidMount() {\n    DialogStore.addTypingListener(this.onTypingChange);\n  }\n\n  componentWillUnmount() {\n    DialogStore.removeTypingListener(this.onTypingChange);\n  }\n\n  onTypingChange = () => {\n    const typing = DialogStore.getSelectedDialogTyping();\n    if (typing === null) {\n      this.setState({show: false});\n    } else {\n      this.setState({typing: typing, show: true});\n    }\n  };\n\n  render() {\n    const typing = this.state.typing;\n    const show = this.state.show;\n    const typingClassName = classNames('typing', {\n      'typing--hidden': show === false\n    });\n\n    return (\n      <div className={typingClassName}>\n        <div className=\"typing-indicator\"><i></i><i></i><i></i></div>\n        <span>{typing}</span>\n      </div>\n    );\n  }\n}\n\nReactMixin.onClass(Typing, PureRenderMixin);\n\nexport default Typing;\n"]}