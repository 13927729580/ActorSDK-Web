{"version":3,"sources":["../../../src/components/dialog/MessagesScroller.react.js"],"names":[],"mappings":";;;;AAIA;;;;AACA;;AAEA;;;;;;;;;;;;;;;;;AAKA,IAAM,kBAAkB,GAAlB;;IAEA;;;AAQJ,WARI,gBAQJ,CAAY,KAAZ,EAAmB;0BARf,kBAQe;;iDACjB,sBAAM,KAAN,GADiB;;AAGjB,UAAK,KAAL,GAAa,MAAK,KAAL,CAAW,IAAX,OAAb,CAHiB;AAIjB,UAAK,QAAL,GAAgB,MAAK,QAAL,CAAc,IAAd,OAAhB,CAJiB;;GAAnB;;AARI,6BAeJ,iDAAoB;AAClB,SAAK,cAAL,GADkB;;;AAfhB,6BAmBJ,mDAAoB,WAAW;AAC7B,QAAM,aAAa,oBAAU,MAAV,CAAiB,UAAU,IAAV,EAAgB,KAAK,KAAL,CAAW,IAAX,CAA9C,CADuB;AAE7B,QAAI,UAAJ,EAAgB;kBACoC,KAAK,IAAL,CADpC;UACN,4BADM;UACK,kCADL;UACmB,kCADnB;;AAEd,WAAK,aAAL,GAAqB,YAArB,CAFc;AAGd,WAAK,UAAL,GAAkB,SAAlB,CAHc;AAId,WAAK,mBAAL,GAA2B,YAAY,YAAZ,KAA6B,YAA7B,CAJb;KAAhB,MAKO;AACL,WAAK,mBAAL,GAA2B,IAA3B,CADK;KALP;;;AArBE,6BA+BJ,mDAAqB;AACnB,QAAI,KAAK,IAAL,CAAU,YAAV,GAAyB,KAAK,aAAL,EAAoB;AAC/C,WAAK,IAAL,CAAU,SAAV,GAAsB,KAAK,UAAL,IAAmB,KAAK,IAAL,CAAU,YAAV,GAAyB,KAAK,aAAL,CAA5C,CADyB;KAAjD,MAEO,IAAI,KAAK,mBAAL,EAA0B;AACnC,WAAK,cAAL,GADmC;KAA9B;;;AAlCL,6BAuCJ,2CAAiB;AACf,SAAK,IAAL,CAAU,SAAV,GAAsB,KAAK,IAAL,CAAU,YAAV,CADP;;;AAvCb,6BA2CJ,uBAAM,MAAM;AACV,SAAK,IAAL,GAAY,IAAZ,CADU;;;AA3CR,6BA+CJ,mCAAmB;QAAT,qBAAS;QACT,YAA4B,OAA5B,UADS;QACE,eAAiB,OAAjB,aADF;;AAEjB,QAAI,YAAY,YAAZ,EAA0B;AAC5B,WAAK,KAAL,CAAW,UAAX,GAD4B;KAA9B;;;AAjDE,6BAsDJ,2BAAS;AACP,WACE;;QAAK,WAAW,KAAK,KAAL,CAAW,SAAX,EAAsB,UAAU,KAAK,QAAL,EAAe,KAAK,KAAK,KAAL,EAApE;MACG,KAAK,KAAL,CAAW,QAAX;KAFL,CADO;;;SAtDL;;;iBACG,YAAY;AACjB,QAAM,iBAAU,MAAV,CAAiB,UAAjB;AACN,aAAW,iBAAU,MAAV;AACX,YAAU,iBAAU,IAAV,CAAe,UAAf;AACV,cAAY,iBAAU,IAAV,CAAe,UAAf;;kBA0DD","file":"MessagesScroller.react.js","sourcesContent":["/*\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\n */\n\nimport React, { Component, PropTypes } from 'react';\nimport { findDOMNode } from 'react-dom';\n\nimport PeerUtils from '../../utils/PeerUtils';\n\n/**\n * On which scrollTop value start loading older messages\n */\nconst MAX_LOAD_HEIGHT = 100;\n\nclass MessagesScroller extends Component {\n  static propTypes = {\n    peer: PropTypes.object.isRequired,\n    className: PropTypes.string,\n    children: PropTypes.node.isRequired,\n    onLoadMore: PropTypes.func.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.onRef = this.onRef.bind(this);\n    this.onScroll = this.onScroll.bind(this);\n  }\n\n  componentDidMount() {\n    this.scrollToBottom();\n  }\n\n  componentWillUpdate(nextProps) {\n    const isSamePeer = PeerUtils.equals(nextProps.peer, this.props.peer);\n    if (isSamePeer) {\n      const { scrollTop, offsetHeight, scrollHeight } = this.node;\n      this._scrollHeight = scrollHeight;\n      this._scrollTop = scrollTop;\n      this._shouldScrollBottom = scrollTop + offsetHeight === scrollHeight;\n    } else {\n      this._shouldScrollBottom = true;\n    }\n  }\n\n  componentDidUpdate() {\n    if (this.node.scrollHeight > this._scrollHeight) {\n      this.node.scrollTop = this._scrollTop + (this.node.scrollHeight - this._scrollHeight);\n    } else if (this._shouldScrollBottom) {\n      this.scrollToBottom();\n    }\n  }\n\n  scrollToBottom() {\n    this.node.scrollTop = this.node.scrollHeight;\n  }\n\n  onRef(node) {\n    this.node = node;\n  }\n\n  onScroll({target}) {\n    const { scrollTop, offsetHeight } = target;\n    if (scrollTop < offsetHeight) {\n      this.props.onLoadMore();\n    }\n  }\n\n  render() {\n    return (\n      <div className={this.props.className} onScroll={this.onScroll} ref={this.onRef}>\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nexport default MessagesScroller;\n"]}