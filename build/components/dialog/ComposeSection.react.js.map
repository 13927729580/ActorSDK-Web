{"version":3,"sources":["../../../src/components/dialog/ComposeSection.react.js"],"names":[],"mappings":"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","file":"ComposeSection.react.js","sourcesContent":["/*\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\n */\n\nimport { forEach } from 'lodash';\nimport React, { Component, PropTypes } from 'react';\nimport { findDOMNode } from 'react-dom';\nimport { Container } from 'flux/utils';\nimport classnames from 'classnames';\n\nimport ActorClient from '../../utils/ActorClient';\nimport Inputs from '../../utils/Inputs';\n\nimport { KeyCodes } from '../../constants/ActorAppConstants';\n\nimport MessageActionCreators from '../../actions/MessageActionCreators';\nimport ComposeActionCreators from '../../actions/ComposeActionCreators';\nimport AttachmentsActionCreators from '../../actions/AttachmentsActionCreators';\nimport EmojiActionCreators from '../../actions/EmojiActionCreators';\nimport StickersActionCreators from '../../actions/StickersActionCreators';\n\nimport GroupStore from '../../stores/GroupStore';\nimport PreferencesStore from '../../stores/PreferencesStore';\nimport ComposeStore from '../../stores/ComposeStore';\nimport DialogStore from '../../stores/DialogStore';\nimport MessageArtStore from '../../stores/MessageArtStore';\n\nimport AvatarItem from '../common/AvatarItem.react';\nimport MentionDropdown from '../common/MentionDropdown.react';\nimport MessageArt from '../messageArt/MessageArt.react';\nimport VoiceRecorder from '../common/VoiceRecorder.react';\nimport DropZone from '../common/DropZone.react';\n\nclass ComposeSection extends Component {\n  static getStores() {\n    return [DialogStore, GroupStore, PreferencesStore, ComposeStore, MessageArtStore];\n  }\n\n  static calculateState(prevState) {\n    return {\n      peer: DialogStore.getCurrentPeer(),\n      text: ComposeStore.getText(),\n      profile: ActorClient.getUser(ActorClient.getUid()),\n      sendByEnter: PreferencesStore.isSendByEnterEnabled(),\n      mentions: ComposeStore.getMentions(),\n      isMarkdownHintShow: prevState ? prevState.isMarkdownHintShow || false : false,\n      isAutoFocusEnabled: ComposeStore.isAutoFocusEnabled(),\n      isMessageArtOpen: MessageArtStore.getState().isOpen,\n      stickers: MessageArtStore.getState().stickers\n    };\n  }\n\n  static contextTypes = {\n    intl: PropTypes.object\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.setListeners();\n  }\n\n  componentWillUnmount() {\n    this.setBlur();\n    this.clearListeners();\n  }\n\n  componentDidMount() {\n    this.setFocus();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { isAutoFocusEnabled } = this.state;\n\n    if (isAutoFocusEnabled) {\n      if (prevState.isAutoFocusEnabled !== true) {\n        this.setListeners();\n      }\n      this.setFocus();\n    } else {\n      if (prevState.isAutoFocusEnabled !== false) {\n        this.clearListeners();\n      }\n    }\n  }\n\n  setListeners() {\n    window.addEventListener('focus', this.setFocus);\n    document.addEventListener('keydown', this.handleKeyDown, false);\n  }\n\n  clearListeners() {\n    window.removeEventListener('focus', this.setFocus);\n    document.removeEventListener('keydown', this.handleKeyDown, false);\n  }\n\n  handleKeyDown = (event) => {\n    const { isAutoFocusEnabled } = this.state;\n    if (isAutoFocusEnabled) {\n      if (!event.metaKey && !event.altKey && !event.ctrlKey && !event.shiftKey) {\n        this.setFocus();\n      }\n    }\n  };\n\n  onMessageChange = (event) => {\n    const text = event.target.value;\n    const { peer } = this.state;\n\n    if (text.length >= 3) {\n      this.setState({ isMarkdownHintShow: true })\n    } else {\n      this.setState({ isMarkdownHintShow: false })\n    }\n\n    ComposeActionCreators.onTyping(peer, text, this.getCaretPosition());\n  };\n\n  onKeyDown = event => {\n    const { mentions, sendByEnter } = this.state;\n\n    const send = () => {\n      event.preventDefault();\n      this.sendTextMessage();\n      this.setState({ isMarkdownHintShow: false })\n    };\n\n    if (mentions === null) {\n      if (sendByEnter === true) {\n        if (event.keyCode === KeyCodes.ENTER && !event.shiftKey) {\n          send();\n        }\n      } else {\n        if (event.keyCode === KeyCodes.ENTER && event.metaKey) {\n          send();\n        }\n      }\n    }\n  };\n\n  sendTextMessage = () => {\n    const { peer, text } = this.state;\n\n    if (text.trim().length !== 0) {\n      MessageActionCreators.sendTextMessage(peer, text);\n    }\n    ComposeActionCreators.cleanText();\n  };\n\n  resetAttachmentForm = () => {\n    const form = findDOMNode(this.refs.attachmentForm);\n    form.reset();\n  };\n\n  onPaste = event => {\n    let preventDefault = false;\n    let attachments = [];\n\n    forEach(event.clipboardData.items, (item) => {\n      if (item.type.indexOf('image') !== -1) {\n        preventDefault = true;\n        attachments.push(item.getAsFile());\n      }\n    }, this);\n\n    if (attachments.length > 0) {\n      AttachmentsActionCreators.show(attachments);\n    }\n\n    if (preventDefault) {\n      event.preventDefault();\n    }\n  };\n\n  onMentionSelect = (mention) => {\n    const { peer, text } = this.state;\n\n    ComposeActionCreators.insertMention(peer, text, this.getCaretPosition(), mention);\n    this.setFocus();\n  };\n\n  onMentionClose = () => {\n    ComposeActionCreators.closeMention();\n  };\n\n  getCaretPosition = () => {\n    const composeArea = findDOMNode(this.refs.area);\n    const selection = Inputs.getInputSelection(composeArea);\n    return selection.start;\n  };\n\n  handleEmojiSelect = (emoji) => {\n    EmojiActionCreators.insertEmoji(this.state.text, this.getCaretPosition(), emoji);\n    this.setFocus();\n  };\n\n  handleStickerSelect = (sticker) => {\n    const { peer } = this.state;\n    StickersActionCreators.sendSticker(peer, sticker);\n    this.setFocus();\n  };\n\n  setFocus = () => {\n    findDOMNode(this.refs.area).focus();\n  };\n\n  setBlur = () => {\n    findDOMNode(this.refs.area).blur();\n  };\n\n  handleDrop = (files) => {\n    let attachments = [];\n\n    forEach(files, (file) => attachments.push(file));\n\n    if (attachments.length > 0) {\n      AttachmentsActionCreators.show(attachments);\n    }\n  };\n\n  handleAttachmentClick = () => {\n    const attachmentInputNode = findDOMNode(this.refs.attachment);\n    attachmentInputNode.setAttribute('multiple', true);\n    attachmentInputNode.click();\n  };\n\n  handleComposeAttachmentChange = () => {\n    const attachmentInputNode = findDOMNode(this.refs.attachment);\n    let attachments = [];\n\n    forEach(attachmentInputNode.files, (file) => attachments.push(file));\n\n    AttachmentsActionCreators.show(attachments);\n    this.resetAttachmentForm();\n  };\n\n  sendVoiceRecord = (duration, record) => {\n    const { peer } = this.state;\n    MessageActionCreators.sendVoiceMessage(peer, duration, record);\n  };\n\n  render() {\n    const { text, profile, mentions, stickers, isMarkdownHintShow, isMessageArtOpen } = this.state;\n    const { intl } = this.context;\n    const markdownHintClassName = classnames('compose__markdown-hint', {\n      'compose__markdown-hint--active': isMarkdownHintShow\n    });\n\n    return (\n      <section className=\"compose\">\n\n        <MentionDropdown\n          mentions={mentions}\n          onSelect={this.onMentionSelect}\n          onClose={this.onMentionClose}\n        />\n\n        <MessageArt\n          onSelect={this.handleEmojiSelect}\n          onStickerSelect={this.handleStickerSelect}\n          isActive={isMessageArtOpen}\n          stickers={stickers}\n        />\n\n        <VoiceRecorder onFinish={this.sendVoiceRecord}/>\n\n        {/* TODO: Move this hint to component */}\n        <div className={markdownHintClassName}>\n          <b>*{intl.messages['compose.markdown.bold']}*</b>\n          &nbsp;&nbsp;\n          <i>_{intl.messages['compose.markdown.italic']}_</i>\n          &nbsp;&nbsp;\n          <code>```{intl.messages['compose.markdown.preformatted']}```</code>\n        </div>\n\n        <AvatarItem className=\"my-avatar\"\n                    image={profile.avatar}\n                    placeholder={profile.placeholder}\n                    title={profile.name}/>\n\n        <textarea className=\"compose__message\"\n                  onChange={this.onMessageChange}\n                  onKeyDown={this.onKeyDown}\n                  onPaste={this.onPaste}\n                  value={text}\n                  ref=\"area\"/>\n\n        <DropZone onDropComplete={this.handleDrop}>\n          {intl.messages['compose.dropzone']}\n        </DropZone>\n\n        <footer className=\"compose__footer row\">\n          <button className=\"button attachment\" onClick={this.handleAttachmentClick}>\n            <i className=\"material-icons\">attachment</i> {intl.messages['compose.attach']}\n          </button>\n          <span className=\"col-xs\"/>\n          <button className=\"button button--lightblue\" onClick={this.sendTextMessage}>\n            {intl.messages['compose.send']}\n          </button>\n        </footer>\n\n        <form className=\"compose__hidden\" ref=\"attachmentForm\">\n          <input ref=\"attachment\" onChange={this.handleComposeAttachmentChange} type=\"file\"/>\n        </form>\n      </section>\n    );\n  }\n}\n\nexport default Container.create(ComposeSection, { pure: false });\n"]}