{"version":3,"sources":["../../../src/components/common/DropZone.react.js"],"names":[],"mappings":"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","file":"DropZone.react.js","sourcesContent":["/*\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\n */\n\nimport React, { Component, PropTypes } from 'react';\nimport classnames from 'classnames';\n\nclass DropZone extends Component {\n  static propTypes = {\n    children: PropTypes.node.isRequired,\n    onDropComplete: PropTypes.func.isRequired\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.dragging = false;\n    this.state = {\n      isActive: false,\n      isHovered: false\n    };\n\n    this.onWindowDragEnter = this.onWindowDragEnter.bind(this);\n    this.onWindowDragOver = this.onWindowDragOver.bind(this);\n    this.onWindowDragLeave = this.onWindowDragLeave.bind(this);\n\n    this.onDrop = this.onDrop.bind(this);\n    this.onDragEnter = this.onDragEnter.bind(this);\n    this.onDragLeave = this.onDragLeave.bind(this);\n  }\n\n  componentDidMount() {\n    window.addEventListener('dragenter', this.onWindowDragEnter, false);\n    window.addEventListener('dragover', this.onWindowDragOver, false);\n    window.addEventListener('dragleave', this.onWindowDragLeave, false);\n  }\n\n  componentWillUnmount() {\n    window.addEventListener('dragenter', this.onWindowDragEnter, false);\n    window.addEventListener('dragover', this.onWindowDragOver, false);\n    window.addEventListener('dragleave', this.onWindowDragLeave, false);\n  }\n\n  onWindowDragEnter() {\n    this.dragging = true;\n    if (this.state.isActive) {\n      return;\n    }\n\n    this.setState({ isActive: true });\n  }\n\n  onWindowDragOver() {\n    this.dragging = true;\n  }\n\n  onWindowDragLeave() {\n    this.dragging = false;\n    clearTimeout(this.timeout);\n    this.timeout = setTimeout(() => {\n      if (!this.dragging) {\n        this.setState({ isActive: false });\n      }\n    }, 300);\n  }\n\n  onDrop(event) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    this.onDragLeave();\n    this.props.onDropComplete(event.dataTransfer.files);\n  }\n\n  onDragOver(event) {\n    // Makes it possible to drag files from chrome's download bar\n    // http://stackoverflow.com/questions/19526430/drag-and-drop-file-uploads-from-chrome-downloads-bar\n    try {\n      const effect = event.dataTransfer.effectAllowed;\n      if (effect === 'move' || effect === 'linkMove') {\n        event.dataTransfer.dropEffect = 'move';\n      } else {\n        event.dataTransfer.dropEffect = 'copy';\n      }\n    } catch (e) {\n      // do nothing\n    }\n\n    event.preventDefault();\n    event.stopPropagation();\n  }\n\n  onDragEnter() {\n    this.setState({ isHovered: true });\n  }\n\n  onDragLeave() {\n    this.setState({ isHovered: false });\n  }\n\n  render() {\n    const { isActive, isHovered } = this.state;\n\n    if (!isActive) {\n      return null;\n    }\n\n    const className = classnames('dropzone', {\n      'dropzone--hover': isHovered\n    });\n\n    return (\n      <div\n        className={className}\n        onDrop={this.onDrop}\n        onDragOver={this.onDragOver}\n        onDragEnter={this.onDragEnter}\n        onDragLeave={this.onDragLeave}\n      >\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nexport default DropZone;\n"]}