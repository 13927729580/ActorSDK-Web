{"version":3,"sources":["../../../src/components/common/Fold.React.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;IAOM,IAAI;YAAJ,IAAI;;AAOR,WAPI,IAAI,CAOI,KAAK,EAAE;0BAPf,IAAI;;uEAAJ,IAAI,aAQA,KAAK;;UAqCb,OAAO,GAAG,YAAM;AACd,YAAK,QAAQ,CAAC,EAAC,MAAM,EAAE,CAAC,MAAK,KAAK,CAAC,MAAM,EAAC,CAAC,CAAC;KAC7C;;AArCC,UAAK,KAAK,GAAG;AACX,YAAM,EAAE,KAAK;KACd,CAAA;;GACF;;eAbG,IAAI;;6BAeC;mBAC6C,IAAI,CAAC,KAAK;UAAtD,IAAI,UAAJ,IAAI;UAAE,aAAa,UAAb,aAAa;UAAE,KAAK,UAAL,KAAK;UAAE,WAAW,UAAX,WAAW;;AAC/C,UAAM,kBAAkB,GAAG,0BAAW,qBAAqB,EAAE,aAAa,CAAC,CAAC;AAC5E,UAAM,SAAS,GAAG,0BAAW;AAC3B,cAAM,EAAE,IAAI;AACZ,oBAAY,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM;OAChC,CAAC,CAAC;;AAEH,UAAI,QAAQ,YAAA,CAAC;AACb,UAAI,IAAI,EAAE;AACR,gBAAQ,GAAG;;YAAG,SAAS,EAAE,kBAAkB,AAAC;UAAE,IAAI;SAAK,CAAC;OACzD;AACD,UAAI,WAAW,EAAE;AACf,gBAAQ,GAAG,WAAW,CAAC;OACxB;;AAED,aACE;;UAAK,SAAS,EAAE,SAAS,AAAC;QACxB;;YAAK,SAAS,EAAC,aAAa,EAAC,OAAO,EAAE,IAAI,CAAC,OAAO,AAAC;UAChD,QAAQ;UACR,KAAK;UACN;;cAAG,SAAS,EAAC,2CAA2C;;WAAoB;SACxE;QACN;;YAAK,SAAS,EAAC,eAAe;UAC3B,IAAI,CAAC,KAAK,CAAC,QAAQ;SAChB;OACF,CACN;KACH;;;SA3CG,IAAI;GAAS,gBAAM,SAAS;;AAA5B,IAAI,CACD,SAAS,GAAG;AACjB,MAAI,EAAE,gBAAM,SAAS,CAAC,MAAM;AAC5B,eAAa,EAAE,gBAAM,SAAS,CAAC,MAAM;AACrC,OAAK,EAAE,gBAAM,SAAS,CAAC,MAAM,CAAC,UAAU;CACzC;kBA6CY,IAAI","file":"Fold.React.js","sourcesContent":["/*\n * Copyright (C) 2015 Actor LLC. <https://actor.im>\n */\n\nimport React from 'react';\nimport classnames from 'classnames';\n\nclass Fold extends React.Component {\n  static PropTypes = {\n    icon: React.PropTypes.string,\n    iconClassName: React.PropTypes.string,\n    title: React.PropTypes.string.isRequired\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isOpen: false\n    }\n  }\n\n  render() {\n    const { icon, iconClassName, title, iconElement } = this.props;\n    const titleIconClassName = classnames('material-icons icon', iconClassName);\n    const className = classnames({\n      'fold': true,\n      'fold--open': this.state.isOpen\n    });\n\n    let foldIcon;\n    if (icon) {\n      foldIcon = <i className={titleIconClassName}>{icon}</i>;\n    }\n    if (iconElement) {\n      foldIcon = iconElement;\n    }\n\n    return (\n      <div className={className}>\n        <div className=\"fold__title\" onClick={this.onClick}>\n          {foldIcon}\n          {title}\n          <i className=\"fold__indicator material-icons pull-right\">arrow_drop_down</i>\n        </div>\n        <div className=\"fold__content\">\n          {this.props.children}\n        </div>\n      </div>\n    );\n  }\n\n  onClick = () => {\n    this.setState({isOpen: !this.state.isOpen});\n  };\n}\n\nexport default Fold;\n"]}