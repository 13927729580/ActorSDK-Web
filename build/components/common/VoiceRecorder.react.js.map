{"version":3,"sources":["../../../src/components/common/VoiceRecorder.react.js"],"names":[],"mappings":"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","file":"VoiceRecorder.react.js","sourcesContent":["/*\n * Copyright (C) 2015 Actor LLC. <https://actor.im>\n */\n\nimport React, { Component, PropTypes } from 'react';\nimport classNames from 'classnames';\nimport Recorder from 'opus-recorder';\n\nconst isRecordingSupported = Recorder.isRecordingSupported();\n\nclass VoiceRecorder extends Component {\n  static propTypes = {\n    onFinish: PropTypes.func.isRequired\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      duration: 0,\n      isRecording: false\n    };\n\n    this.onRecordStart = this.onRecordStart.bind(this);\n    this.onRecordStop = this.onRecordStop.bind(this);\n    this.onStreamReady = this.onStreamReady.bind(this);\n    this.onRecordDone = this.onRecordDone.bind(this);\n    this.onDurationChange = this.onDurationChange.bind(this);\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return nextState.isRecording !== this.state.isRecording ||\n           nextState.duration !== this.state.duration;\n  }\n\n  componentDidMount() {\n    if (isRecordingSupported) {\n      this.recorder = new Recorder();\n      this.recorder.addEventListener('duration', this.onDurationChange);\n      this.recorder.addEventListener('streamReady', this.onStreamReady);\n      this.recorder.addEventListener('dataAvailable', this.onRecordDone);\n    }\n  }\n\n  componentWillUnmount() {\n    this.recorder.removeEventListener('duration', this.onDurationChange);\n    this.recorder.removeEventListener('streamReady', this.onStreamReady);\n    this.recorder.removeEventListener('dataAvailable', this.onRecordDone);\n    this.recorder = null;\n  }\n\n  onRecordStart() {\n    this.recorder.initStream();\n  }\n\n  onRecordStop() {\n    this.recorder.stop();\n    this.setState({ isRecording: false, duration: 0 });\n  }\n\n  onStreamReady() {\n    this.recorder.start();\n    this.setState({ isRecording: true });\n  }\n\n  onRecordDone(event) {\n    // duration must be in ms\n    const duration = this.state.duration * 1000;\n    if (duration >= 100) {\n      this.props.onFinish(duration, event.detail);\n    }\n  }\n\n  onDurationChange(event) {\n    const duration = event.detail.toFixed(2);\n    this.setState({ duration });\n  }\n\n  renderDuration() {\n    if (!this.state.duration) {\n      return null;\n    }\n\n    return (\n      <div className=\"voice-recorder__duration\">\n        <div className=\"fill row middle-xs center-xs\">\n          Voice message duration:&nbsp; {this.state.duration}\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    if (!isRecordingSupported) {\n      return null;\n    }\n\n    const className = classNames('voice-recorder__icon', {\n      'voice-recorder__icon--active': this.state.isRecording\n    });\n\n    return (\n      <div className=\"voice-recorder\">\n        <span className={className} onMouseDown={this.onRecordStart} onMouseUp={this.onRecordStop}>\n          <i className=\"material-icons\">mic</i>\n        </span>\n        {this.renderDuration()}\n      </div>\n    );\n  }\n}\n\nexport default VoiceRecorder;\n"]}