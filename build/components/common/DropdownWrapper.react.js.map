{"version":3,"sources":["../../../src/components/common/DropdownWrapper.react.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAaM,eAAe;YAAf,eAAe;;eAAf,eAAe;;qCAGK;AACtB,UAAM,OAAO,GAAG,wBAAc,UAAU,EAAE,CAAC;;AAE3C,aAAO;AACL,cAAM,EAAE,wBAAc,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC;AACzC,YAAI,EAAE,sBAAY,cAAc,EAAE;AAClC,kBAAU,EAAE,wBAAc,aAAa,EAAE;AACzC,eAAO,EAAP,OAAO;OACR,CAAC;KACH;;;AAED,WAdI,eAAe,CAcP,KAAK,EAAE;0BAdf,eAAe;;kEAAf,eAAe,aAeX,KAAK;GACZ;;eAhBG,eAAe;;6BAkBV;mBACuC,IAAI,CAAC,KAAK;UAAhD,MAAM,UAAN,MAAM;UAAE,OAAO,UAAP,OAAO;UAAE,UAAU,UAAV,UAAU;UAAE,IAAI,UAAJ,IAAI;;AAEzC,UAAM,wBAAwB,GAAG,0BAAW,kBAAkB,EAAE;AAC9D,kCAA0B,EAAE,MAAM;OACnC,CAAC,CAAC;;AAEH,aACE;;UAAK,SAAS,EAAE,wBAAwB,AAAC;QAErC,MAAM,GACF,0DAAgB,OAAO,EAAE,OAAO,AAAC;AACjB,oBAAU,EAAE,UAAU,AAAC;AACvB,cAAI,EAAE,IAAI,AAAC;AACX,sBAAY,MAAA,GAAE,GAC9B,IAAI;OAEN,CACN;KACH;;;SArCG,eAAe;;;AAAf,eAAe,CACZ,SAAS,GAAG;SAAM,gDAA4B;CAAA;;kBAuCxC,iBAAU,MAAM,CAAC,eAAe,EAAE,EAAC,IAAI,EAAE,KAAK,EAAC,CAAC","file":"DropdownWrapper.react.js","sourcesContent":["/*\n * Copyright (C) 2015 Actor LLC. <https://actor.im>\n */\n\nimport React, { Component, PropTypes } from 'react';\nimport { Container } from 'flux/utils';\nimport classnames from 'classnames';\n\nimport MessageActions from './dropdown/MessageActions.react'\n\nimport DropdownStore from '../../stores/DropdownStore'\nimport DialogStore from '../../stores/DialogStore'\n\nclass DropdownWrapper extends Component {\n  static getStores = () => [DropdownStore, DialogStore];\n\n  static calculateState() {\n    const message = DropdownStore.getMessage();\n\n    return {\n      isOpen: DropdownStore.isOpen(message.rid),\n      peer: DialogStore.getCurrentPeer(),\n      targetRect: DropdownStore.getTargetRect(),\n      message\n    };\n  }\n\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const { isOpen, message, targetRect, peer } = this.state;\n\n    const dropdownWrapperClassName = classnames('dropdown-wrapper', {\n      'dropdown-wrapper--opened': isOpen\n    });\n\n    return (\n      <div className={dropdownWrapperClassName}>\n        {\n          isOpen\n            ? <MessageActions message={message}\n                              targetRect={targetRect}\n                              peer={peer}\n                              hideOnScroll/>\n            : null\n        }\n      </div>\n    );\n  }\n}\n\nexport default Container.create(DropdownWrapper, {pure: false});\n"]}