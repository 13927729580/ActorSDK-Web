{"version":3,"sources":["../../../src/components/common/ConnectionState.react.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQA,IAAM,iBAAiB,GAAG,SAApB,iBAAiB,GAAS;AAC9B,SAAO;AACL,mBAAe,EAAE,+BAAqB,QAAQ,EAAE;GACjD,CAAC;CACH,CAAC;;IAEI,eAAe;YAAf,eAAe;;AACnB,WADI,eAAe,CACP,KAAK,EAAE;0BADf,eAAe;;uEAAf,eAAe,aAEX,KAAK;;UAWb,aAAa,GAAG,YAAM;AACpB,YAAK,QAAQ,CAAC,iBAAiB,CAAC,CAAC;KAClC;;AAXC,UAAK,KAAK,GAAG,iBAAiB,EAAE,CAAC;;AAEjC,mCAAqB,iBAAiB,CAAC,MAAK,aAAa,CAAC,CAAC;;GAC5D;;eAPG,eAAe;;2CASI;AACrB,qCAAqB,oBAAoB,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;KAC/D;;;6BAMQ;UACC,eAAe,GAAK,IAAI,CAAC,KAAK,CAA9B,eAAe;;AAEvB,UAAM,SAAS,GAAG,0BAAW,kBAAkB,EAAE;AAC/C,kCAA0B,EAAE,eAAe,KAAK,QAAQ;AACxD,sCAA8B,EAAE,eAAe,KAAK,YAAY;OACjE,CAAC,CAAC;;AAEH,cAAQ,eAAe;AACrB,aAAK,QAAQ;AACX,iBACE;;cAAK,SAAS,EAAE,SAAS,AAAC;;WAA0B,CACpD;AAAA,AACJ,aAAK,YAAY;AACf,iBACE;;cAAK,SAAS,EAAE,SAAS,AAAC;;WAEpB,CACN;AAAA,AACJ;AACE,iBAAO,IAAI,CAAC;AAAA,OACf;KACF;;;SAvCG,eAAe;GAAS,gBAAM,SAAS;;kBA0C9B,eAAe","file":"ConnectionState.react.js","sourcesContent":["/*\n * Copyright (C) 2015 Actor LLC. <https://actor.im>\n */\n\nimport React from 'react';\nimport classnames from 'classnames';\nimport ConnectionStateStore from '../../stores/ConnectionStateStore';\n\nconst getStateFromStore = () => {\n  return {\n    connectionState: ConnectionStateStore.getState()\n  };\n};\n\nclass ConnectionState extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = getStateFromStore();\n\n    ConnectionStateStore.addChangeListener(this.onStateChange);\n  }\n\n  componentWillUnmount() {\n    ConnectionStateStore.removeChangeListener(this.onStateChange);\n  }\n\n  onStateChange = () => {\n    this.setState(getStateFromStore);\n  };\n\n  render() {\n    const { connectionState } = this.state;\n\n    const className = classnames('connection-state', {\n      'connection-state--online': connectionState === 'online',\n      'connection-state--connection': connectionState === 'connecting'\n    });\n\n    switch (connectionState) {\n      case 'online':\n        return (\n          <div className={className}>You're back online!</div>\n        );\n      case 'connecting':\n        return (\n          <div className={className}>\n            Houston, we have a problem! Connection to Actor server is lost. Trying to reconnect now...\n          </div>\n        );\n      default:\n        return null;\n    }\n  }\n}\n\nexport default ConnectionState;\n"]}