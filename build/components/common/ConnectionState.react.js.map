{"version":3,"sources":["../../../src/components/common/ConnectionState.react.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAIA;;;;AACA;;AACA;;AACA;;;;AACA;;AACA;;;;AAEA;;;;;;IAEM;;;AACJ,WADI,eACJ,CAAY,KAAZ,EAAmB;wCADf,iBACe;;+DACjB,sBAAM,KAAN,GADiB;;AAGjB,QAAM,cAAc,0BAAgB,GAAhB,EAAd,CAHW;AAIjB,UAAK,OAAL,GAAe,YAAY,OAAZ,GAAsB,YAAY,OAAZ,6BAAtB,CAJE;;GAAnB;;AADI,kBAQG,iCAAY;AACjB,WAAO,gCAAP,CADiB;;;AARf,kBAYG,2CAAiB;AACtB,WAAO;AACL,uBAAiB,+BAAqB,QAArB,EAAjB;KADF,CADsB;;;AAZpB,4BAkBJ,2BAAS;QACC,kBAAoB,KAAK,KAAL,CAApB,gBADD;;;AAGP,QAAM,YAAY,0BAAW,kBAAX,EAA+B;AAC/C,kCAA4B,oBAAoB,oCAAiB,MAAjB;AAChD,sCAAgC,oBAAoB,oCAAiB,UAAjB;KAFpC,CAAZ,CAHC;;AAQP,WACE;;QAAK,WAAW,SAAX,EAAL;MAEI,oBAAoB,oCAAiB,QAAjB,GAChB,6DAAkB,yBAAuB,eAAvB,EAA0C,QAAQ,EAAE,SAAS,KAAK,OAAL,EAAnB,EAA5D,CADJ,GAEI,IAFJ;KAHN,CARO;;;SAlBL;;;;;kBAsCS,iBAAU,MAAV,CAAiB,eAAjB,EAAkC,EAAE,MAAM,KAAN,EAApC","file":"ConnectionState.react.js","sourcesContent":["/*\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\n */\n\nimport React, { Component } from 'react';\nimport { Container } from 'flux/utils';\nimport { FormattedMessage } from 'react-intl';\nimport SharedContainer from '../../utils/SharedContainer';\nimport { appName, ConnectionStates } from '../../constants/ActorAppConstants';\nimport classnames from 'classnames';\n\nimport ConnectionStateStore from '../../stores/ConnectionStateStore';\n\nclass ConnectionState extends Component {\n  constructor(props) {\n    super(props);\n\n    const SharedActor = SharedContainer.get();\n    this.appName = SharedActor.appName ? SharedActor.appName : appName;\n  }\n\n  static getStores() {\n    return [ConnectionStateStore];\n  }\n\n  static calculateState() {\n    return {\n      connectionState: ConnectionStateStore.getState()\n    };\n  }\n\n  render() {\n    const { connectionState } = this.state;\n\n    const className = classnames('connection-state', {\n      'connection-state--online': connectionState === ConnectionStates.ONLINE,\n      'connection-state--connection': connectionState === ConnectionStates.CONNECTING\n    });\n\n    return (\n      <div className={className}>\n        {\n          connectionState !== ConnectionStates.UPDATING\n            ? <FormattedMessage id={`connectionState.${connectionState}`} values={{ appName: this.appName }}/>\n            : null\n        }\n      </div>\n    )\n  }\n}\n\nexport default Container.create(ConnectionState, { pure: false });\n"]}