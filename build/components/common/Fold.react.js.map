{"version":3,"sources":["../../../src/components/common/Fold.react.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;IAOM,IAAI;YAAJ,IAAI;;AAYR,WAZI,IAAI,CAYI,KAAK,EAAE;0BAZf,IAAI;;iDAaN,sBAAM,KAAK,CAAC;;UAOd,OAAO,GAAG;aAAM,MAAK,QAAQ,CAAC,EAAC,MAAM,EAAE,CAAC,MAAK,KAAK,CAAC,MAAM,EAAC,CAAC;KAAA;;AALzD,UAAK,KAAK,GAAG;AACX,YAAM,EAAE,KAAK;KACd,CAAA;;GACF;;AAlBG,MAAI,WAsBR,MAAM,qBAAG;iBAC6C,IAAI,CAAC,KAAK;QAAtD,IAAI,UAAJ,IAAI;QAAE,aAAa,UAAb,aAAa;QAAE,KAAK,UAAL,KAAK;QAAE,WAAW,UAAX,WAAW;;AAC/C,QAAM,kBAAkB,GAAG,0BAAW,qBAAqB,EAAE,aAAa,CAAC,CAAC;AAC5E,QAAM,SAAS,GAAG,0BAAW;AAC3B,YAAM,EAAE,IAAI;AACZ,kBAAY,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM;KAChC,CAAC,CAAC;;AAEH,QAAI,QAAQ,YAAA,CAAC;AACb,QAAI,IAAI,EAAE;AACR,cAAQ,GAAG;;UAAG,SAAS,EAAE,kBAAkB,AAAC;QAAE,IAAI;OAAK,CAAC;KACzD;AACD,QAAI,WAAW,EAAE;AACf,cAAQ,GAAG,WAAW,CAAC;KACxB;;AAED,WACE;;QAAK,SAAS,EAAE,SAAS,AAAC;MACxB;;UAAK,SAAS,EAAC,aAAa,EAAC,OAAO,EAAE,IAAI,CAAC,OAAO,AAAC;QAChD,QAAQ;QACR,KAAK;QACN;;YAAG,SAAS,EAAC,2CAA2C;;SAAoB;OACxE;MACN;;UAAK,SAAS,EAAC,eAAe;QAC3B,IAAI,CAAC,KAAK,CAAC,QAAQ;OAChB;KACF,CACN;GACH;;SAlDG,IAAI;;;AAAJ,IAAI,CACD,SAAS,GAAG;AACjB,UAAQ,EAAE,iBAAU,SAAS,CAAC,CAC5B,iBAAU,OAAO,CAAC,iBAAU,IAAI,CAAC,EACjC,iBAAU,IAAI,CACf,CAAC;AACF,MAAI,EAAE,iBAAU,MAAM;AACtB,eAAa,EAAE,iBAAU,MAAM;AAC/B,aAAW,EAAE,iBAAU,OAAO;AAC9B,OAAK,EAAE,iBAAU,MAAM,CAAC,UAAU;CACnC;kBA2CY,IAAI","file":"Fold.react.js","sourcesContent":["/*\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\n */\n\nimport React, { Component, PropTypes } from 'react';\nimport classnames from 'classnames';\n\nclass Fold extends Component {\n  static propTypes = {\n    children: PropTypes.oneOfType([\n      PropTypes.arrayOf(PropTypes.node),\n      PropTypes.node\n    ]),\n    icon: PropTypes.string,\n    iconClassName: PropTypes.string,\n    iconElement: PropTypes.element,\n    title: PropTypes.string.isRequired\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isOpen: false\n    }\n  }\n\n  onClick = () => this.setState({isOpen: !this.state.isOpen});\n\n  render() {\n    const { icon, iconClassName, title, iconElement } = this.props;\n    const titleIconClassName = classnames('material-icons icon', iconClassName);\n    const className = classnames({\n      'fold': true,\n      'fold--open': this.state.isOpen\n    });\n\n    let foldIcon;\n    if (icon) {\n      foldIcon = <i className={titleIconClassName}>{icon}</i>;\n    }\n    if (iconElement) {\n      foldIcon = iconElement;\n    }\n\n    return (\n      <div className={className}>\n        <div className=\"fold__title\" onClick={this.onClick}>\n          {foldIcon}\n          {title}\n          <i className=\"fold__indicator material-icons pull-right\">arrow_drop_down</i>\n        </div>\n        <div className=\"fold__content\">\n          {this.props.children}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Fold;\n"]}