{"version":3,"sources":["../../../src/components/common/TextField.react.js"],"names":[],"mappings":"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","file":"TextField.react.js","sourcesContent":["/*\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\n */\n\nimport React, { Component, PropTypes } from 'react';\nimport { findDOMNode } from 'react-dom';\n\nimport classnames from 'classnames';\n\nclass TextField extends Component {\n  static propTypes = {\n    className: PropTypes.string,\n    floatingLabel: PropTypes.node,\n    type: PropTypes.string,\n    value: PropTypes.string,\n    ref: PropTypes.string,\n    disabled: PropTypes.bool,\n    errorText: PropTypes.string,\n\n    onChange: PropTypes.func,\n    onFocus: PropTypes.func,\n    onBlur: PropTypes.func\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isFocused: false,\n      inputId: 'input-' + Math.random().toString(36).substr(2, 5)\n    };\n  }\n\n  render() {\n    const { className, floatingLabel, type, value, ref, disabled, errorText } = this.props;\n    const { isFocused, inputId } = this.state;\n\n    const inputClassName = classnames('input input__material', className, {\n      'input__material--focus': isFocused,\n      'input__material--filled': value && value.length > 0,\n      'input__material--disabled': disabled,\n      'input__material--with-error': errorText\n    });\n\n    const inputProps = {\n      type: type || 'text',\n      id: inputId,\n      onChange: this.handleChange,\n      onFocus: this.handleFocus,\n      onBlur: this.handleBlur,\n      value,\n      disabled,\n      ref: ref ? ref : 'input'\n    };\n\n    return (\n      <div className={inputClassName}>\n        {\n          floatingLabel\n            ? <label htmlFor={inputId} onMouseDown={this.focus}>{floatingLabel}</label>\n            : null\n        }\n        <input {...inputProps}/>\n        {\n          errorText\n            ? <span className=\"error\">{errorText}</span>\n            : null\n        }\n      </div>\n    );\n  }\n\n  focus = () => {\n    const input = this.props.ref || this.refs.input\n    if (!input) {\n      return;\n    }\n\n    setImmediate(() => {\n      findDOMNode(input).focus();\n    });\n  };\n\n  handleChange = (event) => {\n    const { onChange } = this.props;\n    onChange && onChange(event);\n  };\n\n  handleFocus = (event) => {\n    const { onFocus } = this.props;\n    this.setState({ isFocused: true });\n    onFocus && onFocus(event);\n  };\n\n  handleBlur = (event) => {\n    const { onBlur } = this.props;\n    this.setState({ isFocused: false });\n    onBlur && onBlur(event);\n  };\n}\n\nexport default TextField;\n"]}