{"version":3,"sources":["../../../../src/components/common/Stateful/Root.react.js"],"names":[],"mappings":";;;;AAIA;;AACA;;;;AACA;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;;;IAEqB,I;;;AACnB,gBAAY,KAAZ,EAAmB;AAAA;;AAAA,4CACjB,sBAAM,KAAN,CADiB;AAElB;;iBAQD,M,qBAAS;AAAA,iBACuC,KAAK,KAD5C;AAAA,QACC,YADD,UACC,YADD;AAAA,QACe,SADf,UACe,SADf;AAAA,QAC0B,QAD1B,UAC0B,QAD1B;;;AAGP,QAAM,cAAc,SAAd,WAAc,CAAC,KAAD,EAAQ,IAAR,EAAiB;AACnC,aAAQ,UAAU,qCAAkB,OAA5B,IAAuC,0BAAxC,IACJ,UAAU,qCAAkB,UAA5B,IAA0C,6BADtC,IAEJ,UAAU,qCAAkB,OAA5B,IAAuC,0BAFnC,IAGJ,UAAU,qCAAkB,OAA5B,IAAuC,0BAH1C;AAID,KALD;;AAOA,QAAM,oBAAoB,kBAAK,QAAL,EAAe,UAAC,KAAD,EAAW;AAClD,UAAI,YAAY,YAAZ,EAA0B,MAAM,IAAhC,CAAJ,EAA2C,OAAO,KAAP;AAC5C,KAFyB,CAA1B;;AAIA,WACE;AAAA;AAAA,QAAK,WAAW,SAAhB;AAA4B;AAA5B,KADF;AAGD,G;;;;;AA5BkB,I,CAKZ,S,GAAY;AACjB,aAAW,iBAAU,MADJ;AAEjB,gBAAc,iBAAU,MAAV,CAAiB,UAFd;AAGjB,YAAU,iBAAU;AAHH,C;kBALA,I","file":"Root.react.js","sourcesContent":["/*\n * Copyright (C) 2015 Actor LLC. <https://actor.im>\n */\n\nimport { find } from 'lodash';\nimport React, { Component, PropTypes } from 'react';\nimport { AsyncActionStates } from '../../../constants/ActorAppConstants';\n\nimport Pending from './Pending.react';\nimport Processing from './Processing.react';\nimport Success from './Success.react';\nimport Failure from './Failure.react';\n\nexport default class Root extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  static propTypes = {\n    className: PropTypes.string,\n    currentState: PropTypes.number.isRequired,\n    children: PropTypes.array\n  };\n\n  render() {\n    const { currentState, className, children } = this.props;\n\n    const equalsState = (state, type) => {\n      return (state === AsyncActionStates.PENDING && type === Pending) ||\n        (state === AsyncActionStates.PROCESSING && type === Processing) ||\n        (state === AsyncActionStates.SUCCESS && type === Success) ||\n        (state === AsyncActionStates.FAILURE && type === Failure)\n    };\n\n    const currentStateChild = find(children, (child) => {\n      if (equalsState(currentState, child.type)) return child;\n    });\n\n    return (\n      <div className={className}>{currentStateChild}</div>\n    )\n  }\n}\n"]}