{"version":3,"sources":["../../../src/components/common/EmojiDropdown.react.js"],"names":[],"mappings":"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","file":"EmojiDropdown.react.js","sourcesContent":["/*\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\n */\n\nimport { forEach } from 'lodash';\nimport React, { Component, PropTypes } from 'react';\nimport { findDOMNode } from 'react-dom';\nimport { Container } from 'flux/utils';\nimport classnames from 'classnames';\nimport { KeyCodes } from '../../constants/ActorAppConstants';\nimport { emoji, getEmojiCategories } from '../../utils/EmojiUtils';\nimport isInside from '../../utils/isInside';\nimport EmojiActionCreators from '../../actions/EmojiActionCreators'\n\nimport EmojiStore from '../../stores/EmojiStore'\n\nimport { Element, Link } from 'react-scroll';\nimport Sticker from '../emoji_stickers/Sticker.react';\n\nlet emojiTabs = [];\nlet emojis = [];\nlet closeTimer;\nconst CLOSE_TIMEOUT = 550;\n\nclass EmojiDropdown extends Component {\n  static propTypes = {\n    onSelect: PropTypes.func.isRequired,\n    onStickerSelect: PropTypes.func.isRequired\n  };\n\n  static getStores() {\n    return [EmojiStore];\n  }\n\n  static calculateState() {\n    return EmojiStore.getState();\n  }\n\n  constructor(props) {\n    super(props);\n\n    const emojiCategories = getEmojiCategories();\n\n    forEach(emojiCategories, (category, index) => {\n      let currentCategoryEmojis = [];\n\n      emoji.change_replace_mode('css');\n      const categoryIcon = emoji.replace_colons(category.icon);\n\n      emojiTabs.push(\n        <Link to={category.title}\n              spy\n              offset={30}\n              duration={300}\n              key={index}\n              onSetActive={() => this.changeDropdownTitle(category.title)}\n              containerId=\"emojiContainer\"\n              onMouseEnter={this.handleEmojiTabMouseEnter}\n              className=\"emojis__header__tabs__tab\"\n              activeClass=\"emojis__header__tabs__tab--active\">\n          <span dangerouslySetInnerHTML={{ __html: categoryIcon }}/>\n        </Link>\n      );\n\n      forEach(category.data, (emojiChar, index) => {\n        emoji.change_replace_mode('css');\n        const convertedChar = emoji.replace_unified(emojiChar);\n        emoji.colons_mode = true;\n        const emojiColon = emoji.replace_unified(emojiChar);\n        emoji.colons_mode = false;\n\n        currentCategoryEmojis.push(\n          <a onClick={() => this.onSelect(emojiColon)} key={index} dangerouslySetInnerHTML={{ __html: convertedChar }}/>\n        );\n      });\n\n      emojis.push(\n        <Element name={category.title} key={index}>\n          <p>{category.title}</p>\n          {currentCategoryEmojis}\n        </Element>\n      );\n    });\n\n    this.handleEmojisTabMouseEnter = this.handleEmojisTabMouseEnter.bind(this);\n    this.handleStickerTabMouseEnter = this.handleStickerTabMouseEnter.bind(this);\n  }\n\n  componentWillUpdate(nextProps, nextState) {\n    const { isOpen } = nextState;\n    const emojiDropdown = findDOMNode(this.refs.emojiDropdown);\n\n    if (isOpen) {\n      emojiDropdown.addEventListener('mouseenter', this.handleEmojiMouseEnter, false);\n      emojiDropdown.addEventListener('mouseleave', this.handleEmojiMouseLeave, false);\n      document.addEventListener('click', this.onDocumentClick, false);\n      document.addEventListener('keydown', this.onKeyDown, false);\n    } else {\n      emojiDropdown.removeEventListener('mouseenter', this.handleEmojiMouseEnter, false);\n      emojiDropdown.removeEventListener('mouseleave', this.handleEmojiMouseLeave, false);\n      document.removeEventListener('click', this.onDocumentClick, false);\n      document.removeEventListener('keydown', this.onKeyDown, false);\n    }\n  }\n\n  onKeyDown = () => {\n    if (event.keyCode === KeyCodes.ESC) {\n      event.preventDefault();\n      this.handleClose();\n    }\n  };\n\n  handleClose = () => EmojiActionCreators.close();\n\n  onSelect = (emoji) => this.props.onSelect(emoji);\n\n  onDocumentClick = (event) => {\n    event.stopPropagation();\n    event.preventDefault();\n    if (!event.target.className.includes('emojis__header__tabs__tab')) {\n      const emojiDropdown = findDOMNode(this.refs.emojiDropdown);\n      const emojiRect = emojiDropdown.getBoundingClientRect();\n      const coords = {\n        x: event.pageX || event.clientX,\n        y: event.pageY || event.clientY\n      };\n\n      if (!isInside(coords, emojiRect)) {\n        this.handleClose();\n      }\n    }\n  };\n\n  changeDropdownTitle = (title) => this.setState({ dropdownTitle: title });\n\n  handleEmojiTabMouseEnter = (event) => {\n    event.stopPropagation();\n    event.preventDefault();\n    event.target.click();\n  };\n\n  handleEmojiOpenerMouseEnter = () => {\n    this.handleEmojiMouseEnter();\n    localStorage.setItem('isEmojiOpenedBefore', true);\n    EmojiActionCreators.open();\n  };\n\n  handleEmojiMouseLeave = () => {\n    closeTimer = setTimeout(this.handleClose, CLOSE_TIMEOUT)\n  };\n\n  handleEmojiMouseEnter = () => {\n    clearTimeout(closeTimer);\n  };\n\n  handleEmojisTabMouseEnter() {\n    this.setState({ isStickersOpen: false });\n  }\n  handleStickerTabMouseEnter() {\n    this.setState({ isStickersOpen: true });\n  }\n\n  renderStickers() {\n    const { stickers } = this.state;\n    const { onStickerSelect } = this.props;\n    if (stickers.length === 0) return null;\n\n    return stickers.map((sticker, index) => (\n      <Sticker\n        sticker={sticker}\n        onClick={onStickerSelect}\n        key={index}\n      />\n    ));\n  }\n\n  render() {\n    const { isOpen, dropdownTitle, isStickersOpen } = this.state;\n    const isEmojiOpenedBefore = (localStorage.getItem('isEmojiOpenedBefore') === 'true') || false;\n\n    const emojiDropdownClassName = classnames('emoji-dropdown', {\n      'emoji-dropdown--opened': isOpen\n    });\n    const emojiOpenerClassName = classnames('emoji-opener material-icons', {\n      'emoji-opener--active': isOpen,\n      'emoji-opener--with-dot': !isEmojiOpenedBefore\n    });\n\n    const emojiTabClassName = classnames('emoji-dropdown__footer__tab', {\n      'emoji-dropdown__footer__tab--active': !isStickersOpen\n    });\n    const stickerTabClassName = classnames('emoji-dropdown__footer__tab', {\n      'emoji-dropdown__footer__tab--active': isStickersOpen\n    });\n\n    const emojisClassName = classnames('emojis', {\n      'hide': isStickersOpen\n    });\n    const stickersClassName = classnames('stickers', {\n      'hide': !isStickersOpen\n    });\n\n    return (\n      <div className={emojiDropdownClassName} onMouseEnter={this.handleEmojiOpenerMouseEnter} onMouseLeave={this.handleEmojiMouseLeave}>\n        <i className={emojiOpenerClassName}>insert_emoticon</i>\n\n\n        <div className=\"emoji-dropdown__wrapper\" ref=\"emojiDropdown\">\n          <div className=\"emoji-dropdown__body\">\n\n            <div className={emojisClassName}>\n              <header className=\"emojis__header\">\n                <p className=\"emojis__header__title\">{dropdownTitle || 'Emoji'}</p>\n\n                <div className=\"emojis__header__tabs pull-right\">\n                  {emojiTabs}\n                </div>\n              </header>\n              <div className=\"emojis__body\" id=\"emojiContainer\">\n                {emojis}\n              </div>\n            </div>\n\n            <div className={stickersClassName}>\n              {this.renderStickers()}\n            </div>\n          </div>\n\n          <footer className=\"emoji-dropdown__footer\">\n            <div className={emojiTabClassName}\n                 onClick={this.handleEmojisTabMouseEnter}>\n              Emojis\n            </div>\n            <div className={stickerTabClassName}\n                 onClick={this.handleStickerTabMouseEnter}>\n              Stickers\n            </div>\n          </footer>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Container.create(EmojiDropdown);\n"]}