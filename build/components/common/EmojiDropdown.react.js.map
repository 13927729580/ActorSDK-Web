{"version":3,"sources":["../../../src/components/common/EmojiDropdown.react.js"],"names":[],"mappings":"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","file":"EmojiDropdown.react.js","sourcesContent":["/*\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\n */\n\nimport { forEach } from 'lodash';\nimport React, { Component, PropTypes } from 'react';\nimport { findDOMNode } from 'react-dom';\nimport { Container } from 'flux/utils';\nimport classnames from 'classnames';\nimport { KeyCodes } from '../../constants/ActorAppConstants';\nimport { emoji, getEmojiCategories } from '../../utils/EmojiUtils';\nimport isInside from '../../utils/isInside';\nimport EmojiActionCreators from '../../actions/EmojiActionCreators'\n\nimport EmojiStore from '../../stores/EmojiStore'\n\nimport { Element, Link } from 'react-scroll';\n\nlet emojiTabs = [];\nlet emojis = [];\nlet closeTimer;\nconst CLOSE_TIMEOUT = 550;\n\nclass EmojiDropdown extends Component {\n  static propTypes = {\n    onSelect: PropTypes.func.isRequired\n  };\n\n  static getStores = () => [EmojiStore];\n\n  static calculateState() {\n    return {\n      isOpen: EmojiStore.isOpen()\n    };\n  }\n\n  constructor(props) {\n    super(props);\n\n    const emojiCategories = getEmojiCategories();\n\n    forEach(emojiCategories, (category, index) => {\n      let currentCategoryEmojis = [];\n\n      emoji.change_replace_mode('css');\n      const categoryIcon = emoji.replace_colons(category.icon);\n\n      emojiTabs.push(\n        <Link to={category.title}\n              spy\n              offset={30}\n              duration={300}\n              key={index}\n              onSetActive={() => this.changeDropdownTitle(category.title)}\n              containerId=\"emojiContainer\"\n              onMouseEnter={this.handleEmojiTabMouseEnter}\n              className=\"emoji-dropdown__header__tabs__tab\"\n              activeClass=\"emoji-dropdown__header__tabs__tab--active\">\n          <span dangerouslySetInnerHTML={{__html: categoryIcon}}/>\n        </Link>\n      );\n\n      forEach(category.data, (emojiChar, index) => {\n        emoji.change_replace_mode('css');\n        const convertedChar = emoji.replace_unified(emojiChar);\n        emoji.colons_mode = true;\n        const emojiColon = emoji.replace_unified(emojiChar);\n        emoji.colons_mode = false;\n\n        currentCategoryEmojis.push(\n          <a onClick={() => this.onSelect(emojiColon)} key={index} dangerouslySetInnerHTML={{__html: convertedChar}}/>\n        );\n      });\n\n      emojis.push(\n        <Element name={category.title} key={index}>\n          <p>{category.title}</p>\n          {currentCategoryEmojis}\n        </Element>\n      );\n    });\n  }\n\n  componentWillUpdate(nextProps, nextState) {\n    const { isOpen } = nextState;\n    const emojiDropdown = findDOMNode(this.refs.emojiDropdown);\n\n    if (isOpen) {\n      emojiDropdown.addEventListener('mouseenter', this.handleEmojiMouseEnter, false);\n      emojiDropdown.addEventListener('mouseleave', this.handleEmojiMouseLeave, false);\n      document.addEventListener('click', this.onDocumentClick, false);\n      document.addEventListener('keydown', this.onKeyDown, false);\n    } else {\n      emojiDropdown.removeEventListener('mouseenter', this.handleEmojiMouseEnter, false);\n      emojiDropdown.removeEventListener('mouseleave', this.handleEmojiMouseLeave, false);\n      document.removeEventListener('click', this.onDocumentClick, false);\n      document.removeEventListener('keydown', this.onKeyDown, false);\n    }\n  }\n\n  onKeyDown = () => {\n    if (event.keyCode === KeyCodes.ESC) {\n      event.preventDefault();\n      this.handleClose();\n    }\n  };\n\n  handleClose = () => EmojiActionCreators.close();\n\n  onSelect = (emoji) => this.props.onSelect(emoji);\n\n  onDocumentClick = (event) => {\n    event.stopPropagation();\n    event.preventDefault();\n    if (!event.target.className.includes('emoji-dropdown__header__tabs__tab')) {\n      const emojiDropdown = findDOMNode(this.refs.emojiDropdown);\n      const emojiRect = emojiDropdown.getBoundingClientRect();\n      const coords = {\n        x: event.pageX || event.clientX,\n        y: event.pageY || event.clientY\n      };\n\n      if (!isInside(coords, emojiRect)) {\n        this.handleClose();\n      }\n    }\n  };\n\n  changeDropdownTitle = (title) => this.setState({dropdownTitle: title});\n\n  handleEmojiTabMouseEnter = (event) => {\n    event.stopPropagation();\n    event.preventDefault();\n    event.target.click();\n  };\n\n  handleEmojiOpenerMouseEnter = () => {\n    this.handleEmojiMouseEnter();\n    localStorage.setItem('isEmojiOpenedBefore', true);\n    EmojiActionCreators.open();\n  };\n\n  handleEmojiMouseLeave = () => {\n    closeTimer = setTimeout(this.handleClose, CLOSE_TIMEOUT)\n  };\n\n  handleEmojiMouseEnter = () => {\n    clearTimeout(closeTimer);\n  };\n\n  render() {\n    const { isOpen, dropdownTitle } = this.state;\n    const isEmojiOpenedBefore = (localStorage.getItem('isEmojiOpenedBefore') === 'true') || false;\n\n    const emojiDropdownClassName = classnames('emoji-dropdown', {\n      'emoji-dropdown--opened': isOpen\n    });\n    const emojiOpenerClassName = classnames('emoji-opener material-icons', {\n      'emoji-opener--active': isOpen,\n      'emoji-opener--with-dot': !isEmojiOpenedBefore\n    });\n\n    return (\n      <div className={emojiDropdownClassName}>\n        <i className={emojiOpenerClassName}\n           onMouseEnter={this.handleEmojiOpenerMouseEnter}\n           onMouseLeave={this.handleEmojiMouseLeave}>insert_emoticon</i>\n\n\n        <div className=\"emoji-dropdown__wrapper\" ref=\"emojiDropdown\">\n          <header className=\"emoji-dropdown__header\">\n            <p className=\"emoji-dropdown__header__title\">{dropdownTitle || 'Emoji'}</p>\n\n            <div className=\"emoji-dropdown__header__tabs pull-right\">\n              {emojiTabs}\n            </div>\n          </header>\n          <div className=\"emoji-dropdown__body\" id=\"emojiContainer\">\n            {emojis}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Container.create(EmojiDropdown, {pure: false, withProps: true});\n"]}