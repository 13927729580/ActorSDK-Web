{"version":3,"sources":["../../../src/components/common/EmojiDropdown.react.js"],"names":[],"mappings":"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","file":"EmojiDropdown.react.js","sourcesContent":["/*\n * Copyright (C) 2015 Actor LLC. <https://actor.im>\n */\n\nimport { forEach } from 'lodash';\nimport React, { Component } from 'react';\nimport classnames from 'classnames';\nimport { Path, KeyCodes } from '../../constants/ActorAppConstants';\nimport { emoji, getEmojiCategories } from '../../utils/EmojiUtils';\nimport isInside from '../../utils/isInside';\n\nimport { Element, Link } from 'react-scroll';\n\nlet emojiTabs = [];\nlet emojis = [];\n\nexport default class EmojiDropdown extends Component {\n  static propTypes = {\n    isOpen: React.PropTypes.bool.isRequired,\n    onClose: React.PropTypes.func.isRequired,\n    onSelect: React.PropTypes.func.isRequired\n  };\n\n  constructor(props) {\n    super(props);\n\n    const emojiCategories = getEmojiCategories();\n\n    forEach(emojiCategories, (category, index) => {\n      let currentCategoryEmojis = [];\n\n      emoji.change_replace_mode('css');\n      const categoryIcon = emoji.replace_colons(category.icon);\n\n      emojiTabs.push(\n        <Link to={category.title}\n              spy smooth\n              offset={30}\n              duration={250}\n              key={index}\n              onSetActive={() => this.changeDropdownTitle(category.title)}\n              containerId=\"emojiContainer\"\n              className=\"emoji-dropdown__header__tabs__tab\"\n              activeClass=\"emoji-dropdown__header__tabs__tab--active\">\n          <span dangerouslySetInnerHTML={{__html: categoryIcon}}/>\n        </Link>\n      );\n\n      forEach(category.data, (emojiChar, index) => {\n        emoji.change_replace_mode('css');\n        const convertedChar = emoji.replace_unified(emojiChar);\n        emoji.colons_mode = true;\n        const emojiColon = emoji.replace_unified(emojiChar);\n        emoji.colons_mode = false;\n\n        currentCategoryEmojis.push(\n          <a onClick={() => this.onSelect(emojiColon)} key={index} dangerouslySetInnerHTML={{__html: convertedChar}}/>\n        );\n      });\n\n      emojis.push(\n        <Element name={category.title} key={index}>\n          <p>{category.title}</p>\n          {currentCategoryEmojis}\n        </Element>\n      );\n    });\n\n    this.state = {\n      isOpen: props.isOpen,\n      dropdownTitle: 'Emoji'\n    };\n  }\n\n  componentWillReceiveProps(props) {\n    const { isOpen } = props;\n    this.setState({isOpen});\n\n    if (isOpen) {\n      document.addEventListener('click', this.onDocumentClick, false);\n      document.addEventListener('keydown', this.onKeyDown, false);\n    } else {\n      document.removeEventListener('click', this.onDocumentClick, false);\n      document.removeEventListener('keydown', this.onKeyDown, false);\n      this.setState({dropdownTitle: 'Emoji'});\n    }\n  }\n\n  onKeyDown = () => {\n    if (event.keyCode === KeyCodes.ESC) {\n      event.preventDefault();\n      this.onClose();\n    }\n  };\n\n  onClose = () => this.props.onClose();\n  onSelect = (emoji) => {\n    this.onClose();\n    this.props.onSelect(emoji)\n  };\n\n  onDocumentClick = (event) => {\n    const emojiDropdown = React.findDOMNode(this.refs.emojiDropdown);\n    const emojiRect = emojiDropdown.getBoundingClientRect();\n    const coords = {\n      x: event.pageX || event.clientX,\n      y: event.pageY || event.clientY\n    };\n\n    if (!isInside(coords, emojiRect)) {\n      this.onClose();\n    }\n  };\n\n  changeDropdownTitle = (title) => this.setState({dropdownTitle: title});\n\n  render() {\n    const { isOpen, dropdownTitle } = this.state;\n\n    const emojiDropdownClassName = classnames('emoji-dropdown', {\n      'emoji-dropdown--opened': isOpen\n    });\n\n    return (\n      <div className={emojiDropdownClassName}>\n        <div className=\"emoji-dropdown__wrapper\" ref=\"emojiDropdown\">\n          <header className=\"emoji-dropdown__header\">\n            <p className=\"emoji-dropdown__header__title\">{dropdownTitle}</p>\n\n            <div className=\"emoji-dropdown__header__tabs pull-right\">\n              {emojiTabs}\n            </div>\n          </header>\n          <div className=\"emoji-dropdown__body\" id=\"emojiContainer\">\n            {emojis}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n"]}