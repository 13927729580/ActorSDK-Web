{"version":3,"sources":["../../../src/components/common/Scrollbar.react.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAQM,SAAS;YAAT,SAAS;;AAWb,WAXI,SAAS,CAWD,KAAK,EAAE;0BAXf,SAAS;;uEAAT,SAAS,aAYL,KAAK;;UASb,YAAY,GAAG,UAAC,KAAK,EAAK;UAChB,QAAQ,GAAK,MAAK,KAAK,CAAvB,QAAQ;;AAChB,cAAQ,IAAI,QAAQ,CAAC,KAAK,CAAC,CAAC;KAC7B;;UAED,QAAQ,GAAG,UAAC,EAAE,EAAK;AACjB,UAAM,UAAU,GAAG,gBAAM,WAAW,CAAC,MAAK,IAAI,CAAC,MAAM,CAAC,CAAC;AACvD,YAAK,SAAS,CAAC,QAAQ,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;KACzC;;AAhBC,UAAK,SAAS,GAAG,+BAAkB,CAAC;;GACrC;;eAdG,SAAS;;wCAgBO;AAClB,UAAM,UAAU,GAAG,gBAAM,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACvD,UAAI,CAAC,SAAS,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;KACxC;;;6BAYQ;mBACyB,IAAI,CAAC,KAAK;UAAlC,QAAQ,UAAR,QAAQ;UAAE,SAAS,UAAT,SAAS;;AAC3B,UAAM,gBAAgB,GAAG,0BAAW,gBAAgB,EAAE,SAAS,CAAC,CAAC;;AAEjE,aACE;;UAAK,SAAS,EAAE,gBAAgB,AAAC,EAAC,GAAG,EAAC,QAAQ,EAAC,QAAQ,EAAE,IAAI,CAAC,YAAY,AAAC;QACxE,QAAQ;OACL,CACN;KACH;;;SAxCG,SAAS;UAJC,SAAS;;AAInB,SAAS,CACN,SAAS,GAAG;AACjB,UAAQ,EAAE,OANa,SAAS,CAMZ,SAAS,CAAC,CAC5B,OAPqB,SAAS,CAOpB,OAAO,EACjB,OARqB,SAAS,CAQpB,KAAK,CAChB,CAAC;AACF,WAAS,EAAE,OAVY,SAAS,CAUX,MAAM;;AAE3B,UAAQ,EAAE,OAZa,SAAS,CAYZ,IAAI;CACzB;kBAkCY,SAAS","file":"Scrollbar.react.js","sourcesContent":["/*\n * Copyright (C) 2016 Actor LLC. <https://actor.im>\n */\n\nimport React, { Component, PropTypes } from 'react';\nimport classnames from 'classnames';\nimport SimpleScroll from 'simple-scrollbar';\n\nclass Scrollbar extends Component {\n  static propTypes = {\n    children: PropTypes.oneOfType([\n      PropTypes.element,\n      PropTypes.array\n    ]),\n    className: PropTypes.string,\n\n    onScroll: PropTypes.func\n  };\n\n  constructor(props) {\n    super(props);\n    this.scrollbar = new SimpleScroll();\n  }\n\n  componentDidMount() {\n    const scrollNode = React.findDOMNode(this.refs.scroll);\n    this.scrollbar.initElement(scrollNode);\n  }\n\n  handleScroll = (event) => {\n    const { onScroll } = this.props;\n    onScroll && onScroll(event);\n  };\n\n  scrollTo = (to) => {\n    const scrollNode = React.findDOMNode(this.refs.scroll);\n    this.scrollbar.scrollTo(scrollNode, to);\n  };\n\n  render() {\n    const { children, className } = this.props;\n    const wrapperClassName = classnames('scroll-wrapper', className);\n\n    return (\n      <div className={wrapperClassName} ref=\"scroll\" onScroll={this.handleScroll}>\n        {children}\n      </div>\n    );\n  }\n}\n\nexport default Scrollbar;\n"]}