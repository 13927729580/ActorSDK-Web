{"version":3,"sources":["../../../src/components/common/Scrollbar.react.js"],"names":[],"mappings":";;;;;;AAIA;;;;AACA;;AACA;;;;AACA;;;;;;;;;;;;;;IAEM,S;;;AAYJ,qBAAY,KAAZ,EAAmB;AAAA;;AAAA,iDACjB,sBAAM,KAAN,CADiB;;AAAA,UAUnB,YAVmB,GAUJ,UAAC,KAAD,EAAW;AAAA,UAChB,QADgB,GACH,MAAK,KADF,CAChB,QADgB;;AAExB,kBAAY,SAAS,KAAT,CAAZ;AACD,KAbkB;;AAAA,UAenB,QAfmB,GAeR,UAAC,EAAD,EAAQ;AACjB,UAAM,aAAa,2BAAY,MAAK,IAAL,CAAU,MAAtB,CAAnB;AACA,YAAK,SAAL,CAAe,QAAf,CAAwB,UAAxB,EAAoC,EAApC;AACD,KAlBkB;;AAEjB,UAAK,SAAL,GAAiB,+BAAjB;AAFiB;AAGlB;;sBAED,iB,gCAAoB;AAClB,QAAM,aAAa,2BAAY,KAAK,IAAL,CAAU,MAAtB,CAAnB;AACA,SAAK,SAAL,CAAe,WAAf,CAA2B,UAA3B;AACD,G;;sBAYD,M,qBAAS;AAAA,iBACgC,KAAK,KADrC;AAAA,QACC,QADD,UACC,QADD;AAAA,QACW,SADX,UACW,SADX;AAAA,QACsB,KADtB,UACsB,KADtB;;AAEP,QAAM,mBAAmB,0BAAW,gBAAX,EAA6B,SAA7B,CAAzB;;AAEA,WACE;AAAA;AAAA,QAAK,WAAW,gBAAhB,EAAkC,KAAI,QAAtC,EAA+C,UAAU,KAAK,YAA9D,EAA4E,oBAAY,KAAZ,CAA5E;AACG;AADH,KADF;AAKD,G;;;;;AAzCG,S,CACG,S,GAAY;AACjB,YAAU,iBAAU,SAAV,CAAoB,CAC5B,iBAAU,OADkB,EAE5B,iBAAU,KAFkB,CAApB,CADO;AAKjB,aAAW,iBAAU,MALJ;AAMjB,SAAO,iBAAU,MANA;;AAQjB,YAAU,iBAAU;AARH,C;kBA2CN,S","file":"Scrollbar.react.js","sourcesContent":["/*\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\n */\n\nimport React, { Component, PropTypes } from 'react';\nimport { findDOMNode } from 'react-dom';\nimport classnames from 'classnames';\nimport SimpleScroll from 'simple-scrollbar';\n\nclass Scrollbar extends Component {\n  static propTypes = {\n    children: PropTypes.oneOfType([\n      PropTypes.element,\n      PropTypes.array\n    ]),\n    className: PropTypes.string,\n    style: PropTypes.object,\n\n    onScroll: PropTypes.func\n  };\n\n  constructor(props) {\n    super(props);\n    this.scrollbar = new SimpleScroll();\n  }\n\n  componentDidMount() {\n    const scrollNode = findDOMNode(this.refs.scroll);\n    this.scrollbar.initElement(scrollNode);\n  }\n\n  handleScroll = (event) => {\n    const { onScroll } = this.props;\n    onScroll && onScroll(event);\n  };\n\n  scrollTo = (to) => {\n    const scrollNode = findDOMNode(this.refs.scroll);\n    this.scrollbar.scrollTo(scrollNode, to);\n  };\n\n  render() {\n    const { children, className, style } = this.props;\n    const wrapperClassName = classnames('scroll-wrapper', className);\n\n    return (\n      <div className={wrapperClassName} ref=\"scroll\" onScroll={this.handleScroll} style={{ ...style }}>\n        {children}\n      </div>\n    );\n  }\n}\n\nexport default Scrollbar;\n"]}