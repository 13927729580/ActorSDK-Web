{"version":3,"sources":["../../../src/components/common/Scrollbar.react.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IASM,SAAS;YAAT,SAAS;;AAYb,WAZI,SAAS,CAYD,KAAK,EAAE;0BAZf,SAAS;;iDAaX,sBAAM,KAAK,CAAC;;UASd,YAAY,GAAG,UAAC,KAAK,EAAK;UAChB,QAAQ,GAAK,MAAK,KAAK,CAAvB,QAAQ;;AAChB,cAAQ,IAAI,QAAQ,CAAC,KAAK,CAAC,CAAC;KAC7B;;UAED,QAAQ,GAAG,UAAC,EAAE,EAAK;AACjB,UAAM,UAAU,GAAG,2BAAY,MAAK,IAAI,CAAC,MAAM,CAAC,CAAC;AACjD,YAAK,SAAS,CAAC,QAAQ,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;KACzC;;AAhBC,UAAK,SAAS,GAAG,+BAAkB,CAAC;;GACrC;;AAfG,WAAS,WAiBb,iBAAiB,gCAAG;AAClB,QAAM,UAAU,GAAG,2BAAY,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACjD,QAAI,CAAC,SAAS,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;GACxC;;AApBG,WAAS,WAgCb,MAAM,qBAAG;iBACgC,IAAI,CAAC,KAAK;QAAzC,QAAQ,UAAR,QAAQ;QAAE,SAAS,UAAT,SAAS;QAAE,KAAK,UAAL,KAAK;;AAClC,QAAM,gBAAgB,GAAG,0BAAW,gBAAgB,EAAE,SAAS,CAAC,CAAC;;AAEjE,WACE;;QAAK,SAAS,EAAE,gBAAgB,AAAC,EAAC,GAAG,EAAC,QAAQ,EAAC,QAAQ,EAAE,IAAI,CAAC,YAAY,AAAC,EAAC,KAAK,eAAM,KAAK,CAAE;MAC3F,QAAQ;KACL,CACN;GACH;;SAzCG,SAAS;;;AAAT,SAAS,CACN,SAAS,GAAG;AACjB,UAAQ,EAAE,iBAAU,SAAS,CAAC,CAC5B,iBAAU,OAAO,EACjB,iBAAU,KAAK,CAChB,CAAC;AACF,WAAS,EAAE,iBAAU,MAAM;AAC3B,OAAK,EAAE,iBAAU,MAAM;;AAEvB,UAAQ,EAAE,iBAAU,IAAI;CACzB;kBAkCY,SAAS","file":"Scrollbar.react.js","sourcesContent":["/*\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\n */\n\nimport React, { Component, PropTypes } from 'react';\nimport { findDOMNode } from 'react-dom';\nimport classnames from 'classnames';\nimport SimpleScroll from 'simple-scrollbar';\n\nclass Scrollbar extends Component {\n  static propTypes = {\n    children: PropTypes.oneOfType([\n      PropTypes.element,\n      PropTypes.array\n    ]),\n    className: PropTypes.string,\n    style: PropTypes.object,\n\n    onScroll: PropTypes.func\n  };\n\n  constructor(props) {\n    super(props);\n    this.scrollbar = new SimpleScroll();\n  }\n\n  componentDidMount() {\n    const scrollNode = findDOMNode(this.refs.scroll);\n    this.scrollbar.initElement(scrollNode);\n  }\n\n  handleScroll = (event) => {\n    const { onScroll } = this.props;\n    onScroll && onScroll(event);\n  };\n\n  scrollTo = (to) => {\n    const scrollNode = findDOMNode(this.refs.scroll);\n    this.scrollbar.scrollTo(scrollNode, to);\n  };\n\n  render() {\n    const { children, className, style } = this.props;\n    const wrapperClassName = classnames('scroll-wrapper', className);\n\n    return (\n      <div className={wrapperClassName} ref=\"scroll\" onScroll={this.handleScroll} style={{...style}}>\n        {children}\n      </div>\n    );\n  }\n}\n\nexport default Scrollbar;\n"]}