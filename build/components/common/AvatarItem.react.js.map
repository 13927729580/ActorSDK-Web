{"version":3,"sources":["../../../src/components/common/AvatarItem.react.js"],"names":[],"mappings":";;;;AAIA;;;;AACA;;;;;;;;;;;;;;AAEA,IAAM,cAAc;AAClB,QAAM,EADY;AAElB,SAAO,EAFW;AAGlB,UAAQ,EAHU;AAIlB,UAAQ,EAJU;AAKlB,SAAO,EALW;AAMlB,OAAK,GANa;AAOlB,QAAM;AAPY,CAApB;;IAUM,U;;;;;;;;;uBAcJ,qB,kCAAsB,S,EAAW;AAC/B,WAAO,UAAU,KAAV,KAAoB,KAAK,KAAL,CAAW,KAA/B,IACA,UAAU,WAAV,KAA0B,KAAK,KAAL,CAAW,WADrC,IAEA,UAAU,KAAV,KAAoB,KAAK,KAAL,CAAW,KAF/B,IAGA,UAAU,IAAV,KAAmB,KAAK,KAAL,CAAW,IAH9B,IAIA,UAAU,SAAV,KAAwB,KAAK,KAAL,CAAW,SAJ1C;AAKD,G;;uBAED,Y,2BAAe;AAAA,QACL,KADK,GACK,KAAK,KADV,CACL,KADK;;AAEb,QAAM,iBAAiB,kCAAvB;;AAEA,QAAI,MAAM,MAAN,IAAgB,CAApB,EAAuB;AACrB,aAAO,GAAP;AACD;;AAED,WAAO,MAAM,CAAN,EAAS,KAAT,CAAe,cAAf,IAAiC,GAAjC,GAAuC,MAAM,CAAN,CAA9C;AACD,G;;uBAED,M,qBAAS;AAAA,iBAC8C,KAAK,KADnD;AAAA,QACC,KADD,UACC,KADD;AAAA,QACQ,WADR,UACQ,WADR;AAAA,QACqB,KADrB,UACqB,KADrB;AAAA,QAC4B,IAD5B,UAC4B,IAD5B;AAAA,QACkC,OADlC,UACkC,OADlC;;;AAGP,QAAI,KAAJ,EAAW;AACT,UAAM,aAAY,0BAChB,eADgB,EAEhB,EAAE,qBAAqB,OAAvB,EAFgB,EAGhB,KAAK,KAAL,CAAW,SAHK,CAAlB;;AAMA,UAAM,UAAU,YAAY,IAAZ,CAAhB;;AAEA,aACE;AACE,mBAAW,UADb;AAEE,aAAK,KAFP;AAGE,eAAO,OAHT;AAIE,gBAAQ,OAJV;AAKE,aAAK,KALP;AAME,iBAAS;AANX,QADF;AAUD;;AAED,QAAM,YAAY,0BAChB,qBADgB,4BAEQ,IAFR,4BAGQ,WAHR,EAIhB,KAAK,KAAL,CAAW,SAJK,EAKhB,EAAE,qBAAqB,OAAvB,EALgB,CAAlB;;AAQA,WACE;AAAA;AAAA,QAAK,WAAW,SAAhB,EAA2B,SAAS,OAApC,EAA6C,OAAO,KAApD;AACG,WAAK,YAAL;AADH,KADF;AAKD,G;;;;;AAtEG,U,CACG,S,GAAY;AACjB,SAAO,iBAAU,MADA;AAEjB,eAAa,iBAAU,MAAV,CAAiB,UAFb;AAGjB,SAAO,iBAAU,MAAV,CAAiB,UAHP;AAIjB,QAAM,iBAAU,KAAV,CAAgB,OAAO,IAAP,CAAY,WAAZ,CAAhB,EAA0C,UAJ/B;AAKjB,aAAW,iBAAU,MALJ;AAMjB,WAAS,iBAAU;AANF,C;AADf,U,CAUG,Y,GAAe;AACpB,QAAM;AADc,C;kBA+DT,U","file":"AvatarItem.react.js","sourcesContent":["/*\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\n */\n\nimport React, { Component, PropTypes } from 'react';\nimport classNames from 'classnames';\n\nconst AvatarSizes = {\n  tiny: 24,\n  small: 32,\n  normal: 36,\n  medium: 44,\n  large: 60,\n  big: 120,\n  huge: 200\n};\n\nclass AvatarItem extends Component {\n  static propTypes = {\n    image: PropTypes.string,\n    placeholder: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    size: PropTypes.oneOf(Object.keys(AvatarSizes)).isRequired,\n    className: PropTypes.string,\n    onClick: PropTypes.func\n  };\n\n  static defaultProps = {\n    size: 'normal'\n  };\n\n  shouldComponentUpdate(prevProps) {\n    return prevProps.image !== this.props.image ||\n           prevProps.placeholder !== this.props.placeholder ||\n           prevProps.title !== this.props.title ||\n           prevProps.size !== this.props.size ||\n           prevProps.className !== this.props.className;\n  }\n\n  getFirstChar() {\n    const { title } = this.props;\n    const emojiFirstChar = /([\\uE000-\\uF8FF]|\\uD83C|\\uD83D)/g;\n\n    if (title.length == 0) {\n      return '#';\n    }\n\n    return title[0].match(emojiFirstChar) ? '#' : title[0];\n  }\n\n  render() {\n    const { image, placeholder, title, size, onClick } = this.props;\n\n    if (image) {\n      const className = classNames(\n        'avatar__image',\n        { 'avatar--clickable': onClick },\n        this.props.className\n      );\n\n      const imgSize = AvatarSizes[size];\n\n      return (\n        <img\n          className={className}\n          src={image}\n          width={imgSize}\n          height={imgSize}\n          alt={title}\n          onClick={onClick}\n        />\n      );\n    }\n\n    const className = classNames(\n      'avatar__placeholder',\n      `avatar__placeholder--${size}`,\n      `avatar__placeholder--${placeholder}`,\n      this.props.className,\n      { 'avatar--clickable': onClick }\n    );\n\n    return (\n      <div className={className} onClick={onClick} title={title}>\n        {this.getFirstChar()}\n      </div>\n    );\n  }\n}\n\nexport default AvatarItem;\n"]}