{"version":3,"sources":["../../../src/components/common/AvatarItem.react.js"],"names":[],"mappings":";;;;AAIA;;;;AACA;;;;;;;;;;;;;;IAEqB,U;;;AAWnB,sBAAY,KAAZ,EAAmB;AAAA;;AAAA,iDACjB,sBAAM,KAAN,CADiB;;AAAA,UAInB,WAJmB,GAIL,UAAC,KAAD,EAAW;AAAA,UACf,OADe,GACH,MAAK,KADF,CACf,OADe;;AAEvB,iBAAW,QAAQ,KAAR,CAAX;AACD,KAPkB;;AAAA;AAElB;;uBAOD,M,qBAAS;AAAA,iBACgD,KAAK,KADrD;AAAA,QACC,KADD,UACC,KADD;AAAA,QACQ,SADR,UACQ,SADR;AAAA,QACmB,KADnB,UACmB,KADnB;AAAA,QAC0B,IAD1B,UAC0B,IAD1B;AAAA,QACgC,WADhC,UACgC,WADhC;;;AAGP,QAAM,uBAAuB,0BAAW,qBAAX,4BAA0D,WAA1D,CAA7B;AACA,QAAM,kBAAkB,0BAAW,QAAX,EAAqB;AAC3C,sBAAgB,SAAS,MADkB;AAE3C,uBAAiB,SAAS,OAFiB;AAG3C,wBAAkB,SAAS,QAHgB;AAI3C,uBAAiB,SAAS,OAJiB;AAK3C,qBAAe,SAAS,KALmB;AAM3C,sBAAgB,SAAS,MANkB;AAO3C,gCAA0B,CAAC;AAPgB,KAArB,EAQrB,SARqB,CAAxB;;AAUA,QAAM,SAAS,QAAQ,uCAAK,KAAK,KAAV,EAAiB,WAAU,eAA3B,EAA2C,KAAK,KAAhD,GAAR,GAAmE,IAAlF;;AAEA,QAAM,iBAAiB,kCAAvB;;AAEA,QAAI,wBAAJ;AACA,QAAI,MAAM,MAAN,IAAgB,CAApB,EAAuB;AACrB,wBAAkB,GAAlB;AACD,KAFD,MAEO;AACL,wBAAkB,MAAM,CAAN,EAAS,KAAT,CAAe,cAAf,IAAiC,GAAjC,GAAuC,MAAM,CAAN,CAAzD;AACD;;AAED,WACE;AAAA;MAAA,EAAK,WAAW,eAAhB,EAAiC,SAAS,KAAK,WAA/C;MACG,MADH;MAEE;AAAA;QAAA,EAAM,WAAW,oBAAjB;QAAwC;AAAxC;AAFF,KADF;AAMD,G;;;;;AAnDkB,U,CACZ,S,GAAY;AACjB,aAAW,iBAAU,MADJ;AAEjB,SAAO,iBAAU,MAFA;AAGjB,eAAa,iBAAU,MAAV,CAAiB,UAHb;AAIjB,QAAM,iBAAU,MAJC;AAKjB,SAAO,iBAAU,MAAV,CAAiB,UALP;;AAOjB,WAAS,iBAAU;AAPF,C;kBADA,U","file":"AvatarItem.react.js","sourcesContent":["/*\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\n */\n\nimport React, { Component, PropTypes } from 'react';\nimport classnames from 'classnames';\n\nexport default class AvatarItem extends Component {\n  static propTypes = {\n    className: PropTypes.string,\n    image: PropTypes.string,\n    placeholder: PropTypes.string.isRequired,\n    size: PropTypes.string,\n    title: PropTypes.string.isRequired,\n\n    onClick: PropTypes.func\n  };\n\n  constructor(props) {\n    super(props);\n  }\n\n  handleClick = (event) => {\n    const { onClick } = this.props;\n    onClick && onClick(event);\n  };\n\n  render() {\n    const { title, className, image, size, placeholder } = this.props;\n\n    const placeholderClassName = classnames('avatar__placeholder', `avatar__placeholder--${placeholder}`);\n    const avatarClassName = classnames('avatar', {\n      'avatar--tiny': size === 'tiny',\n      'avatar--small': size === 'small',\n      'avatar--medium': size === 'medium',\n      'avatar--large': size === 'large',\n      'avatar--big': size === 'big',\n      'avatar--huge': size === 'huge',\n      'avatar--without-shadow': !image\n    }, className);\n\n    const avatar = image ? <img alt={title} className=\"avatar__image\" src={image}/> : null;\n\n    const emojiFirstChar = /([\\uE000-\\uF8FF]|\\uD83C|\\uD83D)/g;\n\n    let placeholderChar;\n    if (title.length == 0) {\n      placeholderChar = '#'\n    } else {\n      placeholderChar = title[0].match(emojiFirstChar) ? '#' : title[0];\n    }\n\n    return (\n      <div className={avatarClassName} onClick={this.handleClick}>\n        {avatar}\n        <span className={placeholderClassName}>{placeholderChar}</span>\n      </div>\n    );\n  }\n}\n"]}