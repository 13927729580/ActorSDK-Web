{"version":3,"sources":["../../../src/components/messageArt/Emojis.react.js"],"names":[],"mappings":";;;;AAIA;;;;AACA;;AACA;;;;;;;;;;;;AAEA,IAAI,YAAY,EAAhB;AACA,IAAI,SAAS,EAAb;;IAEM,M;;;AAKJ,kBAAY,KAAZ,EAAmB;AAAA;;AAAA,iDACjB,sBAAM,KAAN,CADiB;;AAAA,UAsDnB,mBAtDmB,GAsDG,UAAC,KAAD;AAAA,aAAW,MAAK,QAAL,CAAc,EAAE,eAAe,KAAjB,EAAd,CAAX;AAAA,KAtDH;;AAAA,UAwDnB,wBAxDmB,GAwDQ,UAAC,KAAD,EAAW;AACpC,YAAM,eAAN;AACA,YAAM,cAAN;AACA,YAAM,MAAN,CAAa,KAAb;AACD,KA5DkB;;AAGjB,UAAK,KAAL,GAAa;AACX,qBAAe;AADJ,KAAb;;AAIA,QAAM,kBAAkB,qCAAxB;;AAEA,oBAAgB,OAAhB,CAAwB,UAAC,QAAD,EAAW,KAAX,EAAqB;AAC3C,UAAI,wBAAwB,EAA5B;;AAEA,wBAAM,mBAAN,CAA0B,KAA1B;AACA,UAAM,eAAe,kBAAM,cAAN,CAAqB,SAAS,IAA9B,CAArB;;AAEA,gBAAU,IAAV,CACE;AAAA;QAAA;AACE,cAAI,SAAS,KADf;AAEE,mBAFF;AAGE,kBAAQ,EAHV;AAIE,oBAAU,GAJZ;AAKE,eAAK,KALP;AAME,uBAAa;AAAA,mBAAM,MAAK,mBAAL,CAAyB,SAAS,KAAlC,CAAN;AAAA,WANf;AAOE,wBAAc,MAAK,wBAPrB;AAQE,uBAAY,gBARd;AASE,qBAAU,2BATZ;AAUE,uBAAY;AAVd;QAYE,wCAAM,yBAAyB,EAAE,QAAQ,YAAV,EAA/B;AAZF,OADF;;AAiBA,eAAS,IAAT,CAAc,OAAd,CAAsB,UAAC,SAAD,EAAY,KAAZ,EAAsB;AAC1C,0BAAM,mBAAN,CAA0B,KAA1B;AACA,YAAM,gBAAgB,kBAAM,eAAN,CAAsB,SAAtB,CAAtB;AACA,0BAAM,WAAN,GAAoB,IAApB;AACA,YAAM,aAAa,kBAAM,eAAN,CAAsB,SAAtB,CAAnB;AACA,0BAAM,WAAN,GAAoB,KAApB;;AAEA,8BAAsB,IAAtB,CACE,qCAAG,SAAS;AAAA,mBAAM,MAAM,QAAN,CAAe,UAAf,CAAN;AAAA,WAAZ,EAA8C,KAAK,KAAnD,EAA0D,yBAAyB,EAAE,QAAQ,aAAV,EAAnF,GADF;AAGD,OAVD;;AAYA,aAAO,IAAP,CACE;AAAA;QAAA,EAAS,MAAM,SAAS,KAAxB,EAA+B,KAAK,KAApC;QACE;AAAA;UAAA;UAAI,SAAS;AAAb,SADF;QAEG;AAFH,OADF;AAMD,KAzCD;;AATiB;AAoDlB;;mBAUD,M,qBAAS;AAAA,QACC,aADD,GACmB,KAAK,KADxB,CACC,aADD;;;AAGP,WACE;AAAA;MAAA,EAAK,WAAU,QAAf;MACE;AAAA;QAAA,EAAQ,WAAU,gBAAlB;QACE;AAAA;UAAA,EAAG,WAAU,uBAAb;UAAsC,iBAAiB;AAAvD,SADF;QAGE;AAAA;UAAA,EAAK,WAAU,iCAAf;UACG;AADH;AAHF,OADF;MAQE;AAAA;QAAA,EAAK,WAAU,cAAf,EAA8B,IAAG,gBAAjC;QACG;AADH;AARF,KADF;AAcD,G;;;;;AApFG,M,CACG,S,GAAY;AACjB,YAAU,iBAAU,IAAV,CAAe;AADR,C;kBAsFN,M","file":"Emojis.react.js","sourcesContent":["/*\n * Copyright (C) 2016 Actor LLC. <https://actor.im>\n */\n\nimport React, { Component, PropTypes } from 'react';\nimport { emoji, getEmojiCategories } from '../../utils/EmojiUtils';\nimport { Element, Link } from 'react-scroll';\n\nlet emojiTabs = [];\nlet emojis = [];\n\nclass Emojis extends Component {\n  static propTypes = {\n    onSelect: PropTypes.func.isRequired\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      dropdownTitle: ''\n    }\n\n    const emojiCategories = getEmojiCategories();\n\n    emojiCategories.forEach((category, index) => {\n      let currentCategoryEmojis = [];\n\n      emoji.change_replace_mode('css');\n      const categoryIcon = emoji.replace_colons(category.icon);\n\n      emojiTabs.push(\n        <Link\n          to={category.title}\n          spy\n          offset={30}\n          duration={300}\n          key={index}\n          onSetActive={() => this.changeDropdownTitle(category.title)}\n          onMouseEnter={this.handleEmojiTabMouseEnter}\n          containerId=\"emojiContainer\"\n          className=\"emojis__header__tabs__tab\"\n          activeClass=\"emojis__header__tabs__tab--active\"\n        >\n          <span dangerouslySetInnerHTML={{ __html: categoryIcon }}/>\n        </Link>\n      );\n\n      category.data.forEach((emojiChar, index) => {\n        emoji.change_replace_mode('css');\n        const convertedChar = emoji.replace_unified(emojiChar);\n        emoji.colons_mode = true;\n        const emojiColon = emoji.replace_unified(emojiChar);\n        emoji.colons_mode = false;\n\n        currentCategoryEmojis.push(\n          <a onClick={() => props.onSelect(emojiColon)} key={index} dangerouslySetInnerHTML={{ __html: convertedChar }}/>\n        );\n      });\n\n      emojis.push(\n        <Element name={category.title} key={index}>\n          <p>{category.title}</p>\n          {currentCategoryEmojis}\n        </Element>\n      );\n    });\n\n  }\n\n  changeDropdownTitle = (title) => this.setState({ dropdownTitle: title });\n\n  handleEmojiTabMouseEnter = (event) => {\n    event.stopPropagation();\n    event.preventDefault();\n    event.target.click();\n  };\n\n  render() {\n    const { dropdownTitle } = this.state;\n\n    return (\n      <div className=\"emojis\">\n        <header className=\"emojis__header\">\n          <p className=\"emojis__header__title\">{dropdownTitle || 'Emoji'}</p>\n\n          <div className=\"emojis__header__tabs pull-right\">\n            {emojiTabs}\n          </div>\n        </header>\n        <div className=\"emojis__body\" id=\"emojiContainer\">\n          {emojis}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Emojis;\n"]}