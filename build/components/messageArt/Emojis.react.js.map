{"version":3,"sources":["../../../src/components/messageArt/Emojis.react.js"],"names":[],"mappings":";;;;AAIA;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;;;IAEM,M;;;AAKJ,kBAAY,KAAZ,EAAmB;AAAA;;AAAA,iDACjB,sBAAM,KAAN,CADiB;;AAGjB,UAAK,KAAL,GAAa;AACX,aAAO;AADI,KAAb;;AAIA,UAAK,WAAL,GAAmB,MAAK,WAAL,CAAiB,IAAjB,OAAnB;AAPiB;AAQlB;;mBAED,qB,kCAAsB,S,EAAW,S,EAAW;AAC1C,WAAO,UAAU,KAAV,KAAoB,KAAK,KAAL,CAAW,KAAtC;AACD,G;;mBAED,W,wBAAY,K,EAAO;AACjB,SAAK,QAAL,CAAc,EAAE,YAAF,EAAd;AACD,G;;mBAED,M,qBAAS;AAAA;;AAAA,QACC,KADD,GACW,KAAK,KADhB,CACC,KADD;;;AAGP,QAAM,SAAS,EAAf;AACA,QAAM,YAAY,EAAlB;;AAEA,wBAAU,OAAV,CAAkB,UAAC,QAAD,EAAW,IAAX,EAAoB;AACpC,gBAAU,IAAV,CACE,oDAAU,KAAK,IAAf,EAAqB,UAAU,QAA/B,EAAyC,UAAU,OAAK,WAAxD,GADF;;AAIA,UAAM,QAAQ,SAAS,KAAT,CAAe,GAAf,CAAmB,UAAC,KAAD,EAAQ,IAAR,EAAiB;AAChD,eACE,qDAAW,KAAK,IAAhB,EAAsB,OAAO,KAA7B,EAAoC,UAAU,OAAK,KAAL,CAAW,QAAzD,GADF;AAGD,OAJa,CAAd;;AAMA,aAAO,IAAP,CACE;AAAA;QAAA,EAAS,MAAM,SAAS,KAAxB,EAA+B,KAAK,IAApC;QACE;AAAA;UAAA;UAAI,SAAS;AAAb,SADF;QAEG;AAFH,OADF;AAMD,KAjBD;;AAmBA,WACE;AAAA;MAAA,EAAK,WAAU,QAAf;MACE;AAAA;QAAA,EAAQ,WAAU,gBAAlB;QACE;AAAA;UAAA,EAAG,WAAU,uBAAb;UACG;AADH,SADF;QAIE;AAAA;UAAA,EAAK,WAAU,sBAAf;UACG;AADH;AAJF,OADF;MASE;AAAA;QAAA,EAAK,WAAU,cAAf,EAA8B,IAAG,gBAAjC;QACG;AADH;AATF,KADF;AAeD,G;;;;;AA/DG,M,CACG,S,GAAY;AACjB,YAAU,iBAAU,IAAV,CAAe;AADR,C;kBAiEN,M","file":"Emojis.react.js","sourcesContent":["/*\n * Copyright (C) 2016 Actor LLC. <https://actor.im>\n */\n\nimport React, { Component, PropTypes } from 'react';\nimport { Element } from 'actor-react-scroll';\nimport EmojiTab from './EmojiTab.react';\nimport EmojiItem from './EmojiItem.react';\nimport emojiData from './emojiData';\n\nclass Emojis extends Component {\n  static propTypes = {\n    onSelect: PropTypes.func.isRequired\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      title: 'Emoji'\n    };\n\n    this.onSetActive = this.onSetActive.bind(this);\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return nextState.title !== this.state.title;\n  }\n\n  onSetActive(title) {\n    this.setState({ title });\n  }\n\n  render() {\n    const { title } = this.state;\n\n    const emojis = [];\n    const emojiTabs = [];\n\n    emojiData.forEach((category, cKey) => {\n      emojiTabs.push(\n        <EmojiTab key={cKey} category={category} onSelect={this.onSetActive} />\n      );\n\n      const items = category.items.map((emoji, iKey) => {\n        return (\n          <EmojiItem key={iKey} emoji={emoji} onSelect={this.props.onSelect} />\n        );\n      });\n\n      emojis.push(\n        <Element name={category.title} key={cKey}>\n          <p>{category.title}</p>\n          {items}\n        </Element>\n      );\n    });\n\n    return (\n      <div className=\"emojis\">\n        <header className=\"emojis__header\">\n          <p className=\"emojis__header__title\">\n            {title}\n          </p>\n          <div className=\"emojis__header__tabs\">\n            {emojiTabs}\n          </div>\n        </header>\n        <div className=\"emojis__body\" id=\"emojiContainer\">\n          {emojis}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Emojis;\n"]}