{"version":3,"sources":["../../../src/components/messageArt/Emojis.react.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAIA;;;;AACA;;AACA;;;;AAEA,IAAI,YAAY,EAAZ;;;;AACJ,IAAI,SAAS,EAAT;;IAEE;;;AAKJ,WALI,MAKJ,CAAY,KAAZ,EAAmB;wCALf,QAKe;;+DACjB,sBAAM,KAAN,GADiB;;UAsDnB,sBAAsB,UAAC,KAAD;aAAW,MAAK,QAAL,CAAc,EAAC,eAAe,KAAf,EAAf;KAAX,CAtDH;;UAwDnB,2BAA2B,UAAC,KAAD,EAAW;AACpC,YAAM,eAAN,GADoC;AAEpC,YAAM,cAAN,GAFoC;AAGpC,YAAM,MAAN,CAAa,KAAb,GAHoC;KAAX,CAxDR;;AAGjB,UAAK,KAAL,GAAa;AACX,qBAAe,EAAf;KADF,CAHiB;;AAOjB,QAAM,kBAAkB,qCAAlB,CAPW;;AASjB,oBAAgB,OAAhB,CAAwB,UAAC,QAAD,EAAW,KAAX,EAAqB;AAC3C,UAAI,wBAAwB,EAAxB,CADuC;;AAG3C,wBAAM,mBAAN,CAA0B,KAA1B,EAH2C;AAI3C,UAAM,eAAe,kBAAM,cAAN,CAAqB,SAAS,IAAT,CAApC,CAJqC;;AAM3C,gBAAU,IAAV,CACE;;;AACE,cAAI,SAAS,KAAT;AACJ;AACA,kBAAQ,EAAR;AACA,oBAAU,GAAV;AACA,eAAK,KAAL;AACA,uBAAa;mBAAM,MAAK,mBAAL,CAAyB,SAAS,KAAT;WAA/B;AACb,wBAAc,MAAK,wBAAL;AACd,uBAAY,gBAAZ;AACA,qBAAU,2BAAV;AACA,uBAAY,mCAAZ;SAVF;QAYE,wCAAM,yBAAyB,EAAC,QAAQ,YAAR,EAA1B,EAAN,CAZF;OADF,EAN2C;;AAuB3C,eAAS,IAAT,CAAc,OAAd,CAAsB,UAAC,SAAD,EAAY,KAAZ,EAAsB;AAC1C,0BAAM,mBAAN,CAA0B,KAA1B,EAD0C;AAE1C,YAAM,gBAAgB,kBAAM,eAAN,CAAsB,SAAtB,CAAhB,CAFoC;AAG1C,0BAAM,WAAN,GAAoB,IAApB,CAH0C;AAI1C,YAAM,aAAa,kBAAM,eAAN,CAAsB,SAAtB,CAAb,CAJoC;AAK1C,0BAAM,WAAN,GAAoB,KAApB,CAL0C;;AAO1C,8BAAsB,IAAtB,CACE,qCAAG,SAAS;mBAAM,MAAM,QAAN,CAAe,UAAf;WAAN,EAAkC,KAAK,KAAL,EAAY,yBAAyB,EAAC,QAAQ,aAAR,EAA1B,EAA1D,CADF,EAP0C;OAAtB,CAAtB,CAvB2C;;AAmC3C,aAAO,IAAP,CACE;;UAAS,MAAM,SAAS,KAAT,EAAgB,KAAK,KAAL,EAA/B;QACE;;;UAAI,SAAS,KAAT;SADN;QAEG,qBAFH;OADF,EAnC2C;KAArB,CAAxB,CATiB;;;GAAnB;;AALI,mBAmEJ,2BAAS;QACC,gBAAkB,KAAK,KAAL,CAAlB,cADD;;;AAGP,WACE;;QAAK,WAAU,QAAV,EAAL;MACE;;UAAQ,WAAU,gBAAV,EAAR;QACE;;YAAG,WAAU,uBAAV,EAAH;UAAsC,iBAAiB,OAAjB;SADxC;QAGE;;YAAK,WAAU,iCAAV,EAAL;UACG,SADH;SAHF;OADF;MAQE;;UAAK,WAAU,cAAV,EAAyB,IAAG,gBAAH,EAA9B;QACG,MADH;OARF;KADF,CAHO;;;SAnEL;;;OACG,YAAY;AACjB,YAAU,iBAAU,IAAV,CAAe,UAAf;;kBAqFC","file":"Emojis.react.js","sourcesContent":["/*\n * Copyright (C) 2016 Actor LLC. <https://actor.im>\n */\n\nimport React, { Component, PropTypes } from 'react';\nimport { emoji, getEmojiCategories } from '../../utils/EmojiUtils';\nimport { Element, Link } from 'react-scroll';\n\nlet emojiTabs = [];\nlet emojis = [];\n\nclass Emojis extends Component {\n  static propTypes = {\n    onSelect: PropTypes.func.isRequired\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      dropdownTitle: ''\n    }\n\n    const emojiCategories = getEmojiCategories();\n\n    emojiCategories.forEach((category, index) => {\n      let currentCategoryEmojis = [];\n\n      emoji.change_replace_mode('css');\n      const categoryIcon = emoji.replace_colons(category.icon);\n\n      emojiTabs.push(\n        <Link\n          to={category.title}\n          spy\n          offset={30}\n          duration={300}\n          key={index}\n          onSetActive={() => this.changeDropdownTitle(category.title)}\n          onMouseEnter={this.handleEmojiTabMouseEnter}\n          containerId=\"emojiContainer\"\n          className=\"emojis__header__tabs__tab\"\n          activeClass=\"emojis__header__tabs__tab--active\"\n        >\n          <span dangerouslySetInnerHTML={{__html: categoryIcon}}/>\n        </Link>\n      );\n\n      category.data.forEach((emojiChar, index) => {\n        emoji.change_replace_mode('css');\n        const convertedChar = emoji.replace_unified(emojiChar);\n        emoji.colons_mode = true;\n        const emojiColon = emoji.replace_unified(emojiChar);\n        emoji.colons_mode = false;\n\n        currentCategoryEmojis.push(\n          <a onClick={() => props.onSelect(emojiColon)} key={index} dangerouslySetInnerHTML={{__html: convertedChar}}/>\n        );\n      });\n\n      emojis.push(\n        <Element name={category.title} key={index}>\n          <p>{category.title}</p>\n          {currentCategoryEmojis}\n        </Element>\n      );\n    });\n\n  }\n\n  changeDropdownTitle = (title) => this.setState({dropdownTitle: title});\n\n  handleEmojiTabMouseEnter = (event) => {\n    event.stopPropagation();\n    event.preventDefault();\n    event.target.click();\n  };\n\n  render() {\n    const { dropdownTitle } = this.state;\n\n    return (\n      <div className=\"emojis\">\n        <header className=\"emojis__header\">\n          <p className=\"emojis__header__title\">{dropdownTitle || 'Emoji'}</p>\n\n          <div className=\"emojis__header__tabs pull-right\">\n            {emojiTabs}\n          </div>\n        </header>\n        <div className=\"emojis__body\" id=\"emojiContainer\">\n          {emojis}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Emojis;\n"]}