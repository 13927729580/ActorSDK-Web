{"version":3,"sources":["../../src/components/ToolbarSection.react.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAaA,IAAM,kBAAkB,GAAG,SAArB,kBAAkB,GAAS;AAC/B,SAAO;AACL,cAAU,EAAE,sBAAY,OAAO,EAAE;AACjC,kBAAc,EAAE,wBAAc,MAAM,EAAE;GACvC,CAAC;CACH,CAAC;;IAEI,cAAc;YAAd,cAAc;;AAClB,WADI,cAAc,CACN,KAAK,EAAE;0BADf,cAAc;;uEAAd,cAAc,aAEV,KAAK;;UAWb,OAAO,GAAG,YAAM;AACd,UAAI,CAAC,MAAK,KAAK,CAAC,cAAc,EAAE;AAC9B,yCAAuB,IAAI,EAAE,CAAC;OAC/B,MAAM;AACL,yCAAuB,IAAI,EAAE,CAAC;OAC/B;KACF;;UAED,QAAQ,GAAG;aAAM,MAAK,QAAQ,CAAC,kBAAkB,EAAE,CAAC;KAAA;;AAjBlD,UAAK,KAAK,GAAG;AACX,gBAAU,EAAE,IAAI;AAChB,oBAAc,EAAE,KAAK;KACtB,CAAC;;AAEF,0BAAY,WAAW,CAAC,MAAK,QAAQ,CAAC,CAAC;AACvC,4BAAc,WAAW,CAAC,MAAK,QAAQ,CAAC,CAAC;;GAC1C;;eAXG,cAAc;;6BAuBT;mBACgC,IAAI,CAAC,KAAK;UAAzC,UAAU,UAAV,UAAU;UAAE,cAAc,UAAd,cAAc;;AAElC,UAAM,mBAAmB,GAAG,0BAAW,qBAAqB,EAAE;AAC5D,gBAAQ,EAAE,cAAc;OACzB,CAAC,CAAC;;AAEH,UAAI,UAAU,KAAK,IAAI,EAAE;AACvB,eACE;;YAAQ,SAAS,EAAC,aAAa;UAC7B;;cAAK,SAAS,EAAC,sBAAsB;YACnC,wCAAM,SAAS,EAAC,sBAAsB,EAAC,uBAAuB,EAAE,EAAC,MAAM,EAAE,gBAhD5E,eAAe,EAgD6E,UAAU,CAAC,IAAI,CAAC,EAAC,AAAC,GAAE;YAC7G;;gBAAM,SAAS,EAAC,yBAAyB;cAAE,UAAU,CAAC,QAAQ;aAAQ;WAClE;UAEN;;cAAK,SAAS,EAAC,mBAAmB;YAChC;;gBAAK,SAAS,EAAC,uCAAuC;cACpD;;kBAAQ,SAAS,EAAE,mBAAmB,AAAC,EAAC,OAAO,EAAE,IAAI,CAAC,OAAO,AAAC;gBAC5D;;oBAAG,SAAS,EAAC,gBAAgB;;iBAAS;eAC/B;cACT;;kBAAQ,SAAS,EAAC,0BAA0B;gBAC1C;;oBAAG,SAAS,EAAC,gBAAgB;;iBAAc;eACpC;aACL;WACF;SACC,CACT;OACH,MAAM;AACL,eACE,0CAAQ,SAAS,EAAC,SAAS,GAAE,CAC7B;OACH;KACF;;;SAvDG,cAAc;UAhBJ,SAAS;;kBA0EV,cAAc","file":"ToolbarSection.react.js","sourcesContent":["/*\n * Copyright (C) 2015 Actor LLC. <https://actor.im>\n */\n\nimport React, { Component } from 'react';\nimport classnames from 'classnames';\nimport { escapeWithEmoji } from '../utils/EmojiUtils';\n\nimport ActivityActionCreators from '../actions/ActivityActionCreators';\n\nimport DialogStore from '../stores/DialogStore';\nimport ActivityStore from '../stores/ActivityStore';\n\nconst getStateFromStores = () => {\n  return {\n    dialogInfo: DialogStore.getInfo(),\n    isActivityOpen: ActivityStore.isOpen()\n  };\n};\n\nclass ToolbarSection extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      dialogInfo: null,\n      isActivityOpen: false\n    };\n\n    DialogStore.addListener(this.onChange);\n    ActivityStore.addListener(this.onChange);\n  }\n\n  onClick = () => {\n    if (!this.state.isActivityOpen) {\n      ActivityActionCreators.show();\n    } else {\n      ActivityActionCreators.hide();\n    }\n  };\n\n  onChange = () => this.setState(getStateFromStores());\n\n  render() {\n    const { dialogInfo, isActivityOpen } = this.state;\n\n    const infoButtonClassName = classnames('button button--icon', {\n      'active': isActivityOpen\n    });\n\n    if (dialogInfo !== null) {\n      return (\n        <header className=\"toolbar row\">\n          <div className=\"toolbar__peer col-xs\">\n            <span className=\"toolbar__peer__title\" dangerouslySetInnerHTML={{__html: escapeWithEmoji(dialogInfo.name)}}/>\n            <span className=\"toolbar__peer__presence\">{dialogInfo.presence}</span>\n          </div>\n\n          <div className=\"toolbar__controls\">\n            <div className=\"toolbar__controls__buttons pull-right\">\n              <button className={infoButtonClassName} onClick={this.onClick}>\n                <i className=\"material-icons\">info</i>\n              </button>\n              <button className=\"button button--icon hide\">\n                <i className=\"material-icons\">more_vert</i>\n              </button>\n            </div>\n          </div>\n        </header>\n      );\n    } else {\n      return (\n        <header className=\"toolbar\"/>\n      );\n    }\n  }\n}\n\nexport default ToolbarSection;\n"]}