{"version":3,"sources":["../../../src/components/activity/UserProfile.react.js"],"names":[],"mappings":"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","file":"UserProfile.react.js","sourcesContent":["/*\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\n */\n\nimport React, { Component, PropTypes } from 'react';\nimport { Container } from 'flux/utils';\nimport { FormattedMessage } from 'react-intl';\nimport { lightbox } from '../../utils/ImageUtils';\n\nimport { escapeWithEmoji } from '../../utils/EmojiUtils';\n\nimport NotificationsActionCreators from '../../actions/NotificationsActionCreators';\n\nimport UserStore from '../../stores/UserStore';\nimport NotificationsStore from '../../stores/NotificationsStore';\nimport OnlineStore from '../../stores/OnlineStore';\n\nimport AvatarItem from '../common/AvatarItem.react';\nimport ContactDetails from '../common/ContactDetails.react';\nimport ToggleNotifications from '../common/ToggleNotifications.react';\n\nclass UserProfile extends Component {\n  static contextTypes = {\n    delegate: PropTypes.object.isRequired\n  };\n\n  static propTypes = {\n    user: PropTypes.object.isRequired\n  };\n\n  static getStores() {\n    return [NotificationsStore, OnlineStore];\n  }\n\n  static calculateState(prevState, nextProps) {\n    const uid = nextProps.user.id;\n    const peer = uid ? UserStore.getUser(uid) : null;\n\n    return {\n      ...prevState,\n      peer,\n      isNotificationsEnabled: peer ? NotificationsStore.isNotificationsEnabled(peer) : true,\n      message: OnlineStore.getMessage()\n    };\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.onNotificationChange = this.onNotificationChange.bind(this);\n    this.handleAvatarClick = this.handleAvatarClick.bind(this);\n  }\n\n  onNotificationChange(event) {\n    const { peer } = this.state;\n    NotificationsActionCreators.changeNotificationsEnabled(peer, event.target.checked);\n  }\n\n  handleAvatarClick() {\n    lightbox.open(this.props.user.bigAvatar)\n  }\n\n  renderAbout() {\n    const { about } = this.props.user;\n    if (!about) return null;\n\n    return (\n      <div\n        className=\"user_profile__meta__about\"\n        dangerouslySetInnerHTML={{ __html: escapeWithEmoji(about).replace(/\\n/g, '<br/>') }}/>\n    )\n  }\n\n  renderToggleContact() {\n    const { isContact } = this.props.user;\n\n    if (isContact) {\n      return (\n        <li className=\"dropdown__menu__item\" onClick={this.onRemoveFromContacts}>\n          <FormattedMessage id=\"removeFromContacts\"/>\n        </li>\n      );\n    }\n\n    return (\n      <li className=\"dropdown__menu__item\" onClick={this.onAddToContacts}>\n        <FormattedMessage id=\"addToContacts\"/>\n      </li>\n    );\n  }\n\n  renderBlockUser() {\n    if (!this.context.delegate.features.blocking) {\n      return null;\n    }\n\n    return (\n      <li className=\"dropdown__menu__item\" onClick={this.onBlockUser}>\n        <FormattedMessage id=\"blockUser\"/>\n      </li>\n    );\n  }\n\n  render() {\n    const { user } = this.props;\n    const { isNotificationsEnabled, message } = this.state;\n\n    return (\n      <div className=\"activity__body user_profile\">\n\n        <ul className=\"profile__list\">\n          <li className=\"profile__list__item user_profile__meta\">\n            <header>\n              <AvatarItem\n                className=\"profile__avatar\"\n                size=\"large\"\n                image={user.bigAvatar}\n                placeholder={user.placeholder}\n                title={user.name}\n                onClick={this.handleAvatarClick}\n              />\n\n              <h3 className=\"user_profile__meta__title\" dangerouslySetInnerHTML={{ __html: escapeWithEmoji(user.name) }}/>\n              <div className=\"user_profile__meta__message\">{message}</div>\n            </header>\n\n            {this.renderAbout()}\n          </li>\n\n          <li className=\"profile__list__item user_profile__contact_info no-p\">\n            <ContactDetails peerInfo={user}/>\n          </li>\n\n          <li className=\"profile__list__item user_profile__notifications no-p\">\n            <ToggleNotifications\n              isNotificationsEnabled={isNotificationsEnabled}\n              onNotificationChange={this.onNotificationChange}/>\n          </li>\n\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default Container.create(UserProfile, { withProps: true, pure: false });\n"]}