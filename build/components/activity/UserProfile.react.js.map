{"version":3,"sources":["../../../src/components/activity/UserProfile.react.js"],"names":[],"mappings":"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","file":"UserProfile.react.js","sourcesContent":["/*\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\n */\n\nimport { assign } from 'lodash';\nimport React, { Component, PropTypes } from 'react';\nimport { Container } from 'flux/utils';\nimport { FormattedMessage } from 'react-intl';\nimport classnames from 'classnames';\nimport { lightbox } from '../../utils/ImageUtils';\n\nimport ActorClient from '../../utils/ActorClient';\nimport confirm from '../../utils/confirm'\nimport { escapeWithEmoji } from '../../utils/EmojiUtils';\n\nimport ContactActionCreators from '../../actions/ContactActionCreators';\nimport DialogActionCreators from '../../actions/DialogActionCreators';\nimport NotificationsActionCreators from '../../actions/NotificationsActionCreators';\nimport CallActionCreators from '../../actions/CallActionCreators';\n\nimport PeerStore from '../../stores/PeerStore';\nimport DialogStore from '../../stores/DialogStore';\nimport NotificationsStore from '../../stores/NotificationsStore';\nimport OnlineStore from '../../stores/OnlineStore';\n\nimport AvatarItem from '../common/AvatarItem.react';\nimport Fold from '../common/Fold.react';\n\nconst getStateFromStores = (uid) => {\n  const thisPeer = uid ? GroupStore.getGroup(uid) : null;\n  return {\n    thisPeer: thisPeer,\n    isNotificationsEnabled: thisPeer ? NotificationsStore.isNotificationsEnabled(thisPeer) : true,\n    message: OnlineStore.getMessage()\n  };\n};\n\nclass UserProfile extends Component {\n  static propTypes = {\n    user: PropTypes.object.isRequired\n  };\n\n  static getStores() {\n    return [NotificationsStore, OnlineStore];\n  }\n\n  static calculateState(prevState) {\n    return getStateFromStores((prevState && prevState.user) ? prevState.user.id : null);\n  }\n\n  static contextTypes = {\n    intl: PropTypes.object\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isMoreDropdownOpen: false,\n      user: props.user // hack to be able to access userId in getStateFromStores\n    }\n  }\n\n  addToContacts = () => ContactActionCreators.addContact(this.props.user.id);\n\n  removeFromContacts = () => {\n    const { user } = this.props;\n    const { intl } = this.context;\n    confirm(<FormattedMessage id=\"modal.confirm.removeContact\" values={{name: user.name}}/>, {\n      abortLabel: intl.messages['button.cancel'],\n      confirmLabel: intl.messages['button.ok']\n    }).then(\n      () => ContactActionCreators.removeContact(user.id),\n      () => {}\n    );\n  };\n\n  onNotificationChange = (event) => {\n    const { thisPeer } = this.state;\n    NotificationsActionCreators.changeNotificationsEnabled(thisPeer, event.target.checked);\n  };\n\n  onChange = () => {\n    const { user } = this.props;\n    this.setState(getStateFromStores(user.id));\n  };\n\n  toggleActionsDropdown = () => {\n    const { isActionsDropdownOpen } = this.state;\n\n    if (!isActionsDropdownOpen) {\n      this.setState({isActionsDropdownOpen: true});\n      document.addEventListener('click', this.closeActionsDropdown, false);\n    } else {\n      this.closeActionsDropdown();\n    }\n  };\n\n  closeActionsDropdown = () => {\n    this.setState({isActionsDropdownOpen: false});\n    document.removeEventListener('click', this.closeActionsDropdown, false);\n  };\n\n  clearChat = (uid) => {\n    const { intl } = this.context;\n    confirm(intl.messages['modal.confirm.clear'], {\n      abortLabel: intl.messages['button.cancel'],\n      confirmLabel: intl.messages['button.ok']\n    }).then(\n      () => {\n        const peer = ActorClient.getUserPeer(uid);\n        DialogActionCreators.clearChat(peer);\n      },\n      () => {}\n    );\n  };\n\n  deleteChat = (uid) => {\n    const { intl } = this.context;\n    confirm(intl.messages['modal.confirm.delete'], {\n      abortLabel: intl.messages['button.cancel'],\n      confirmLabel: intl.messages['button.ok']\n    }).then(\n      () => {\n        const peer = ActorClient.getUserPeer(uid);\n        DialogActionCreators.deleteChat(peer);\n      },\n      () => {}\n    );\n  };\n\n  handleAvatarClick = () => lightbox.open(this.props.user.bigAvatar);\n\n  makeCall = () => {\n    const { user } = this.props;\n    CallActionCreators.makeCall(user.id);\n  };\n\n  render() {\n    const { user } = this.props;\n    const { intl } = this.context;\n    const { isNotificationsEnabled, isActionsDropdownOpen, message } = this.state;\n\n    const dropdownClassNames = classnames('dropdown', {\n      'dropdown--opened': isActionsDropdownOpen\n    });\n\n    const nickname = user.nick ? (\n      <li>\n        <svg className=\"icon icon--pink\"\n             dangerouslySetInnerHTML={{__html: '<use xlink:href=\"assets/images/icons.svg#username\"/>'}}/>\n        <span className=\"title\">{user.nick}</span>\n        <span className=\"description\">{intl.messages['profile.nickname']}</span>\n      </li>\n    ) : null;\n\n    const email = user.emails[0] ? (\n      <li>\n        <svg className=\"icon icon--blue\"\n             dangerouslySetInnerHTML={{__html: '<use xlink:href=\"assets/images/icons.svg#envelope\"/>'}}/>\n        <span className=\"title\"><a href={'mailto:' + user.emails[0].email}>{user.emails[0].email}</a></span>\n        <span className=\"description\">{intl.messages['profile.email']}</span>\n      </li>\n    ) : null;\n\n    const phone = user.phones[0] ? (\n      <li>\n        <i className=\"material-icons icon icon--green\">call</i>\n        <span className=\"title\"><a href={'tel:+' + user.phones[0].number}>{'+' + user.phones[0].number}</a></span>\n        <span className=\"description\">{intl.messages['profile.phone']}</span>\n      </li>\n    ) : null;\n\n    return (\n      <div className=\"activity__body user_profile\">\n\n        <ul className=\"profile__list\">\n          <li className=\"profile__list__item user_profile__meta\">\n            <header>\n              <AvatarItem image={user.bigAvatar}\n                          placeholder={user.placeholder}\n                          size=\"large\"\n                          title={user.name}\n                          onClick={this.handleAvatarClick}/>\n\n              <h3 className=\"user_profile__meta__title\" dangerouslySetInnerHTML={{__html: escapeWithEmoji(user.name)}}/>\n              <div className=\"user_profile__meta__message\">{message}</div>\n            </header>\n\n            {\n              user.about\n                ? <div className=\"user_profile__meta__about\"\n                       dangerouslySetInnerHTML={{__html: escapeWithEmoji(user.about).replace(/\\n/g, '<br/>')}}/>\n                : null\n            }\n\n            <footer className=\"row\">\n              <div className=\"col-xs\">\n                <button className=\"button button--green button--wide\" onClick={this.makeCall}>\n                  <i className=\"material-icons\">phone</i>\n                  {intl.messages['button.call']}\n                </button>\n              </div>\n              <div style={{width: 10}}/>\n              <div className=\"col-xs\">\n                <div className={dropdownClassNames}>\n                  <button className=\"dropdown__button button button--flat button--wide\" onClick={this.toggleActionsDropdown}>\n                    <i className=\"material-icons\">more_horiz</i>\n                    {intl.messages['actions']}\n                  </button>\n                  <ul className=\"dropdown__menu dropdown__menu--right\">\n                    {\n                      user.isContact\n                        ? <li className=\"dropdown__menu__item\" onClick={this.removeFromContacts}>\n                            {intl.messages['removeFromContacts']}\n                          </li>\n                        : <li className=\"dropdown__menu__item\" onClick={this.addToContacts}>\n                            {intl.messages['addToContacts']}\n                          </li>\n                    }\n                    <li className=\"dropdown__menu__item\" onClick={() => this.clearChat(user.id)}>\n                      {intl.messages['clearConversation']}\n                    </li>\n                    <li className=\"dropdown__menu__item\" onClick={() => this.deleteChat(user.id)}>\n                      {intl.messages['deleteConversation']}\n                    </li>\n                  </ul>\n                </div>\n              </div>\n            </footer>\n          </li>\n\n          <li className=\"profile__list__item user_profile__contact_info no-p\">\n            <ul className=\"user_profile__contact_info__list\">\n              {phone}\n              {email}\n              {nickname}\n            </ul>\n          </li>\n\n          <li className=\"profile__list__item user_profile__media no-p hide\">\n            <Fold icon=\"attach_file\" iconClassName=\"icon--gray\" title={intl.messages['sharedMedia']}>\n              <ul>\n                <li><a>230 Shared Photos and Videos</a></li>\n                <li><a>49 Shared Links</a></li>\n                <li><a>49 Shared Files</a></li>\n              </ul>\n            </Fold>\n          </li>\n\n          <li className=\"profile__list__item user_profile__notifications no-p\">\n            <label htmlFor=\"notifications\">\n              <i className=\"material-icons icon icon--squash\">notifications_none</i>\n              {intl.messages['notifications']}\n              <div className=\"switch pull-right\">\n                <input checked={isNotificationsEnabled}\n                       id=\"notifications\"\n                       onChange={this.onNotificationChange}\n                       type=\"checkbox\"/>\n                <label htmlFor=\"notifications\"/>\n              </div>\n            </label>\n          </li>\n\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default Container.create(UserProfile);\n"]}