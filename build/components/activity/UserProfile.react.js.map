{"version":3,"sources":["../../../src/components/activity/UserProfile.react.js"],"names":[],"mappings":"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","file":"UserProfile.react.js","sourcesContent":["/*\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\n */\n\nimport { assign } from 'lodash';\nimport React, { Component, PropTypes } from 'react';\nimport ReactMixin from 'react-mixin';\nimport { IntlMixin, FormattedMessage } from 'react-intl';\nimport classnames from 'classnames';\nimport { lightbox } from '../../utils/ImageUtils';\n\nimport ActorClient from '../../utils/ActorClient';\nimport confirm from '../../utils/confirm'\nimport { escapeWithEmoji } from '../../utils/EmojiUtils';\n\nimport ContactActionCreators from '../../actions/ContactActionCreators';\nimport DialogActionCreators from '../../actions/DialogActionCreators';\nimport NotificationsActionCreators from '../../actions/NotificationsActionCreators';\n\nimport PeerStore from '../../stores/PeerStore';\nimport DialogStore from '../../stores/DialogStore';\nimport NotificationsStore from '../../stores/NotificationsStore';\nimport OnlineStore from '../../stores/OnlineStore';\n\nimport AvatarItem from '../common/AvatarItem.react';\nimport Fold from '../common/Fold.React';\n\nconst getStateFromStores = (userId) => {\n  const thisPeer = PeerStore.getUserPeer(userId);\n  return {\n    thisPeer: thisPeer,\n    isNotificationsEnabled: NotificationsStore.isNotificationsEnabled(thisPeer),\n    message: OnlineStore.getMessage()\n  };\n};\n\nclass UserProfile extends Component {\n  static propTypes = {\n    user: PropTypes.object.isRequired\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = assign({\n      isActionsDropdownOpen: false\n    }, getStateFromStores(props.user.id));\n\n    NotificationsStore.addListener(this.onChange);\n    DialogStore.addListener(this.onChange);\n    OnlineStore.addListener(this.onChange);\n  }\n\n  addToContacts = () => ContactActionCreators.addContact(this.props.user.id);\n\n  removeFromContacts = () => {\n    const { user } = this.props;\n    const confirmText = (\n      <FormattedMessage message={this.getIntlMessage('modal.confirm.removeContact')}\n                        name={user.name}/>\n    );\n    confirm(confirmText, {\n      abortLabel: this.getIntlMessage('button.cancel'),\n      confirmLabel: this.getIntlMessage('button.ok')\n    }).then(\n      () => ContactActionCreators.removeContact(user.id),\n      () => {}\n    );\n  };\n\n  onNotificationChange = (event) => {\n    const { thisPeer } = this.state;\n    NotificationsActionCreators.changeNotificationsEnabled(thisPeer, event.target.checked);\n  };\n\n  onChange = () => {\n    const { user } = this.props;\n    this.setState(getStateFromStores(user.id));\n  };\n\n  toggleActionsDropdown = () => {\n    const { isActionsDropdownOpen } = this.state;\n\n    if (!isActionsDropdownOpen) {\n      this.setState({isActionsDropdownOpen: true});\n      document.addEventListener('click', this.closeActionsDropdown, false);\n    } else {\n      this.closeActionsDropdown();\n    }\n  };\n\n  closeActionsDropdown = () => {\n    this.setState({isActionsDropdownOpen: false});\n    document.removeEventListener('click', this.closeActionsDropdown, false);\n  };\n\n  clearChat = (uid) => {\n    confirm(this.getIntlMessage('modal.confirm.clear'), {\n      abortLabel: this.getIntlMessage('button.cancel'),\n      confirmLabel: this.getIntlMessage('button.ok')\n    }).then(\n      () => {\n        const peer = ActorClient.getUserPeer(uid);\n        DialogActionCreators.clearChat(peer);\n      },\n      () => {}\n    );\n  };\n\n  deleteChat = (uid) => {\n    confirm(this.getIntlMessage('modal.confirm.delete'), {\n      abortLabel: this.getIntlMessage('button.cancel'),\n      confirmLabel: this.getIntlMessage('button.ok')\n    }).then(\n      () => {\n        const peer = ActorClient.getUserPeer(uid);\n        DialogActionCreators.deleteChat(peer);\n      },\n      () => {}\n    );\n  };\n\n  handleAvatarClick = () => lightbox.open(this.props.user.bigAvatar);\n\n  render() {\n    const { user } = this.props;\n    const { isNotificationsEnabled, isActionsDropdownOpen, message } = this.state;\n\n    const dropdownClassNames = classnames('dropdown pull-left', {\n      'dropdown--opened': isActionsDropdownOpen\n    });\n\n    const nickname = user.nick ? (\n      <li>\n        <svg className=\"icon icon--pink\"\n             dangerouslySetInnerHTML={{__html: '<use xlink:href=\"assets/images/icons.svg#username\"/>'}}/>\n        <span className=\"title\">{user.nick}</span>\n        <span className=\"description\">{this.getIntlMessage('profile.nickname')}</span>\n      </li>\n    ) : null;\n\n    const email = user.emails[0] ? (\n      <li>\n        <svg className=\"icon icon--blue\"\n             dangerouslySetInnerHTML={{__html: '<use xlink:href=\"assets/images/icons.svg#envelope\"/>'}}/>\n        <span className=\"title\"><a href={'mailto:' + user.emails[0].email}>{user.emails[0].email}</a></span>\n        <span className=\"description\">{this.getIntlMessage('profile.email')}</span>\n      </li>\n    ) : null;\n\n    const phone = user.phones[0] ? (\n      <li>\n        <i className=\"material-icons icon icon--green\">call</i>\n        <span className=\"title\"><a href={'tel:+' + user.phones[0].number}>{'+' + user.phones[0].number}</a></span>\n        <span className=\"description\">{this.getIntlMessage('profile.phone')}</span>\n      </li>\n    ) : null;\n\n    return (\n      <div className=\"activity__body user_profile\">\n\n        <ul className=\"profile__list\">\n          <li className=\"profile__list__item user_profile__meta\">\n            <header>\n              <AvatarItem image={user.bigAvatar}\n                          placeholder={user.placeholder}\n                          size=\"large\"\n                          title={user.name}\n                          onClick={this.handleAvatarClick}/>\n\n              <h3 className=\"user_profile__meta__title\" dangerouslySetInnerHTML={{__html: escapeWithEmoji(user.name)}}/>\n              <div className=\"user_profile__meta__message\">{message}</div>\n            </header>\n\n            {\n              user.about\n                ? <div className=\"user_profile__meta__about\"\n                       dangerouslySetInnerHTML={{__html: escapeWithEmoji(user.about).replace(/\\n/g, '<br/>')}}/>\n                : null\n            }\n\n            <footer>\n              <div className={dropdownClassNames}>\n                <button className=\"dropdown__button button button--flat\" onClick={this.toggleActionsDropdown}>\n                  <i className=\"material-icons\">more_horiz</i>\n                  {this.getIntlMessage('actions')}\n                </button>\n                <ul className=\"dropdown__menu dropdown__menu--left\">\n                  {\n                    user.isContact\n                      ? <li className=\"dropdown__menu__item\" onClick={this.removeFromContacts}>\n                          {this.getIntlMessage('removeFromContacts')}\n                        </li>\n                      : <li className=\"dropdown__menu__item\" onClick={this.addToContacts}>\n                          {this.getIntlMessage('addToContacts')}\n                        </li>\n                  }\n                  <li className=\"dropdown__menu__item\" onClick={() => this.clearChat(user.id)}>\n                    {this.getIntlMessage('clearConversation')}\n                  </li>\n                  <li className=\"dropdown__menu__item\" onClick={() => this.deleteChat(user.id)}>\n                    {this.getIntlMessage('deleteConversation')}\n                  </li>\n                </ul>\n              </div>\n            </footer>\n          </li>\n\n          <li className=\"profile__list__item user_profile__contact_info no-p\">\n            <ul className=\"user_profile__contact_info__list\">\n              {phone}\n              {email}\n              {nickname}\n            </ul>\n          </li>\n\n          <li className=\"profile__list__item user_profile__media no-p hide\">\n            <Fold icon=\"attach_file\" iconClassName=\"icon--gray\" title={this.getIntlMessage('sharedMedia')}>\n              <ul>\n                <li><a>230 Shared Photos and Videos</a></li>\n                <li><a>49 Shared Links</a></li>\n                <li><a>49 Shared Files</a></li>\n              </ul>\n            </Fold>\n          </li>\n\n          <li className=\"profile__list__item user_profile__notifications no-p\">\n            <label htmlFor=\"notifications\">\n              <i className=\"material-icons icon icon--squash\">notifications_none</i>\n              {this.getIntlMessage('notifications')}\n              <div className=\"switch pull-right\">\n                <input checked={isNotificationsEnabled}\n                       id=\"notifications\"\n                       onChange={this.onNotificationChange}\n                       type=\"checkbox\"/>\n                <label htmlFor=\"notifications\"/>\n              </div>\n            </label>\n          </li>\n\n        </ul>\n      </div>\n    );\n  }\n}\n\nReactMixin.onClass(UserProfile, IntlMixin);\n\nexport default UserProfile;\n"]}