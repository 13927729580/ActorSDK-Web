{"version":3,"sources":["../../../src/components/activity/GroupProfile.react.js"],"names":[],"mappings":"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","file":"GroupProfile.react.js","sourcesContent":["/*\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\n */\n\nimport { assign } from 'lodash';\nimport React, { Component, PropTypes } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport classnames from 'classnames';\nimport { lightbox } from '../../utils/ImageUtils';\nimport { Container } from 'flux/utils';\nimport Scrollbar from '../common/Scrollbar.react';\n\nimport ActorClient from '../../utils/ActorClient';\nimport confirm from '../../utils/confirm'\nimport { escapeWithEmoji } from '../../utils/EmojiUtils'\n\nimport DialogActionCreators from '../../actions/DialogActionCreators';\nimport InviteUserActions from '../../actions/InviteUserActions';\nimport EditGroupActionCreators from '../../actions/EditGroupActionCreators';\nimport NotificationsActionCreators from '../../actions/NotificationsActionCreators';\nimport CallActionCreators from '../../actions/CallActionCreators';\n\nimport DialogStore from '../../stores/DialogStore';\nimport NotificationsStore from '../../stores/NotificationsStore';\nimport GroupStore from '../../stores/GroupStore';\nimport UserStore from '../../stores/UserStore';\nimport OnlineStore from '../../stores/OnlineStore';\n\nimport AvatarItem from '../common/AvatarItem.react';\nimport GroupProfileMembers from '../activity/GroupProfileMembers.react';\nimport Fold from '../common/Fold.react';\n\nconst MAX_GROUP_CALL_SIZE = 25;\n\nconst getStateFromStores = (gid) => {\n  const thisPeer = gid ? GroupStore.getGroup(gid) : null;\n  return {\n    thisPeer,\n    // should not require to pass a peer\n    isNotificationsEnabled: thisPeer ? NotificationsStore.isNotificationsEnabled(thisPeer) : true,\n    integrationToken: GroupStore.getToken(),\n    message: OnlineStore.getMessage()\n  };\n};\n\nclass GroupProfile extends Component {\n  static propTypes = {\n    group: PropTypes.object.isRequired\n  };\n\n  static getStores() {\n    return [NotificationsStore, GroupStore, OnlineStore];\n  }\n\n  static calculateState(prevState, nextProps) {\n    return getStateFromStores(nextProps.group.id || null);\n  }\n\n  static contextTypes = {\n    intl: PropTypes.object\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isMoreDropdownOpen: false\n    }\n  }\n\n  onAddMemberClick = group => InviteUserActions.show(group);\n\n  onLeaveGroupClick = gid => {\n    const { intl } = this.context;\n    confirm(intl.messages['modal.confirm.leave']).then(\n      () => DialogActionCreators.leaveGroup(gid),\n      () => {}\n    );\n  };\n\n  onNotificationChange = event => {\n    const { thisPeer } = this.state;\n    NotificationsActionCreators.changeNotificationsEnabled(thisPeer, event.target.checked);\n  };\n\n  selectToken = (event) => event.target.select();\n\n  toggleMoreDropdown = () => {\n    const { isMoreDropdownOpen } = this.state;\n\n    if (!isMoreDropdownOpen) {\n      this.setState({isMoreDropdownOpen: true});\n      document.addEventListener('click', this.closeMoreDropdown, false);\n    } else {\n      this.closeMoreDropdown();\n    }\n  };\n\n  closeMoreDropdown = () => {\n    this.setState({isMoreDropdownOpen: false});\n    document.removeEventListener('click', this.closeMoreDropdown, false);\n  };\n\n  onClearGroupClick = (gid) => {\n    const { intl } = this.context;\n    confirm(intl.messages['modal.confirm.clear']).then(\n      () => {\n        const peer = ActorClient.getGroupPeer(gid);\n        DialogActionCreators.clearChat(peer)\n      },\n      () => {}\n    );\n  };\n\n  onDeleteGroupClick = (gid) => {\n    const { intl } = this.context;\n    confirm(intl.messages['modal.confirm.delete']).then(\n      () => {\n        const peer = ActorClient.getGroupPeer(gid);\n        DialogActionCreators.deleteChat(peer);\n      },\n      () => {}\n    );\n  };\n\n  onEditGroupClick = (gid) => EditGroupActionCreators.show(gid);\n\n  handleAvatarClick = () => lightbox.open(this.props.group.bigAvatar);\n\n  makeCall = () => {\n    const { group } = this.props;\n    CallActionCreators.makeCall(group.id);\n  };\n\n  render() {\n    const { group } = this.props;\n    const {\n      isNotificationsEnabled,\n      integrationToken,\n      isMoreDropdownOpen,\n      message\n    } = this.state;\n    const { intl } = this.context;\n\n    const myId = UserStore.getMyId();\n    const admin = UserStore.getUser(group.adminId);\n    const isMember = DialogStore.isMember();\n\n    const dropdownClassNames = classnames('dropdown', {\n      'dropdown--opened': isMoreDropdownOpen\n    });\n\n    const iconElement = (\n      <svg className=\"icon icon--green\"\n           dangerouslySetInnerHTML={{__html: '<use xlink:href=\"assets/images/icons.svg#members\"/>'}}/>\n    );\n\n    const groupMeta = [\n      <header key={1}>\n        <AvatarItem image={group.bigAvatar}\n                    placeholder={group.placeholder}\n                    size=\"large\"\n                    title={group.name}\n                    onClick={this.handleAvatarClick}/>\n\n        <h3 className=\"group_profile__meta__title\" dangerouslySetInnerHTML={{__html: escapeWithEmoji(group.name)}}/>\n        <div className=\"group_profile__meta__created\">\n          {intl.messages['createdBy']}\n          &nbsp;\n          <span dangerouslySetInnerHTML={{__html: escapeWithEmoji(admin.name)}}/>\n        </div>\n      </header>\n    ,\n      group.about ? (\n        <div className=\"group_profile__meta__description\" key={2}\n             dangerouslySetInnerHTML={{__html: escapeWithEmoji(group.about).replace(/\\n/g, '<br/>')}}/>\n      ) : null\n    ];\n\n    const token = (group.adminId === myId) ? (\n      <li className=\"profile__list__item group_profile__integration no-p\">\n        <Fold icon=\"power\" iconClassName=\"icon--pink\" title={intl.messages['integrationToken']}>\n          <div className=\"info info--light\">\n            <p>{intl.messages['integrationTokenHint']}</p>\n            <a href=\"https://actor.readme.io/docs/simple-integration\" target=\"_blank\">{intl.messages['integrationTokenHelp']}</a>\n          </div>\n          <textarea className=\"textarea\" onClick={this.selectToken} readOnly row=\"3\" value={integrationToken}/>\n        </Fold>\n      </li>\n    ) : null;\n\n    if (isMember) {\n      return (\n        <div className=\"activity__body group_profile\">\n          <Scrollbar>\n            <ul className=\"profile__list\">\n              <li className=\"profile__list__item group_profile__meta\">\n                {groupMeta}\n                <footer className=\"row\">\n                  <div className=\"col-xs\">\n                    {\n                      group.members.length < MAX_GROUP_CALL_SIZE\n                        ? <button className=\"button button--green button--wide\" onClick={this.makeCall}>\n                            <i className=\"material-icons\">phone</i>\n                            {intl.messages['button.call']}\n                          </button>\n                        : <button className=\"button button--flat button--wide\"\n                                  onClick={() => this.onAddMemberClick(group)}>\n                            <i className=\"material-icons\">person_add</i>\n                            {intl.messages['addPeople']}\n                          </button>\n                    }\n                  </div>\n                  <div style={{width: 10}}/>\n                  <div className=\"col-xs\">\n                    <div className={dropdownClassNames}>\n                      <button className=\"dropdown__button button button--flat button--wide\"\n                              onClick={this.toggleMoreDropdown}>\n                        <i className=\"material-icons\">more_horiz</i>\n                        {intl.messages['more']}\n                      </button>\n                      <ul className=\"dropdown__menu dropdown__menu--right\">\n                        <li className=\"dropdown__menu__item\" onClick={() => this.onEditGroupClick(group.id)}>\n                          <i className=\"material-icons\">mode_edit</i>\n                          {intl.messages['editGroup']}\n                        </li>\n                        {\n                          group.members.length < MAX_GROUP_CALL_SIZE\n                            ? <li className=\"dropdown__menu__item\" onClick={() => this.onAddMemberClick(group)}>\n                                <i className=\"material-icons\">person_add</i>\n                                {intl.messages['addPeople']}\n                              </li>\n                            : null\n                        }\n                        <li className=\"dropdown__menu__item\"\n                            onClick={() => this.onLeaveGroupClick(group.id)}>\n                          {intl.messages['leaveGroup']}\n                        </li>\n                        <li className=\"dropdown__menu__item\"\n                            onClick={() => this.onClearGroupClick(group.id)}>\n                          {intl.messages['clearGroup']}\n                        </li>\n                        <li className=\"dropdown__menu__item\"\n                            onClick={() => this.onDeleteGroupClick(group.id)}>\n                          {intl.messages['deleteGroup']}\n                        </li>\n                      </ul>\n                    </div>\n                  </div>\n                </footer>\n              </li>\n\n              <li className=\"profile__list__item group_profile__media no-p hide\">\n                <Fold icon=\"attach_file\" iconClassName=\"icon--gray\" title={intl.messages['sharedMedia']}>\n                  <ul>\n                    <li><a>230 Shared Photos and Videos</a></li>\n                    <li><a>49 Shared Links</a></li>\n                    <li><a>49 Shared Files</a></li>\n                  </ul>\n                </Fold>\n              </li>\n\n              <li className=\"profile__list__item group_profile__notifications no-p\">\n                <label htmlFor=\"notifications\">\n                  <i className=\"material-icons icon icon--squash\">notifications_none</i>\n                  {intl.messages['notifications']}\n\n                  <div className=\"switch pull-right\">\n                    <input checked={isNotificationsEnabled}\n                           id=\"notifications\"\n                           onChange={this.onNotificationChange}\n                           type=\"checkbox\"/>\n                    <label htmlFor=\"notifications\"/>\n                  </div>\n                </label>\n              </li>\n\n              <li className=\"profile__list__item group_profile__members no-p\">\n                <Fold iconElement={iconElement}\n                      title={message}>\n                  <GroupProfileMembers groupId={group.id} members={group.members}/>\n                </Fold>\n              </li>\n\n              {token}\n            </ul>\n          </Scrollbar>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"activity__body group_profile\">\n          <ul className=\"profile__list\">\n            <li className=\"profile__list__item group_profile__meta\">\n              {groupMeta}\n            </li>\n          </ul>\n        </div>\n      );\n    }\n\n  }\n}\n\nexport default Container.create(GroupProfile, {pure:false, withProps: true});\n"]}