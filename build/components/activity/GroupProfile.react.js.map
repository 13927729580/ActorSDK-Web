{"version":3,"sources":["../../../src/components/activity/GroupProfile.react.js"],"names":[],"mappings":"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","file":"GroupProfile.react.js","sourcesContent":["/*\n * Copyright (C) 2015 Actor LLC. <https://actor.im>\n */\n\nimport { assign } from 'lodash';\nimport React, { Component, PropTypes } from 'react';\nimport ReactMixin from 'react-mixin';\nimport { IntlMixin, FormattedMessage } from 'react-intl';\nimport classnames from 'classnames';\nimport { lightbox } from '../../utils/ImageUtils';\n\nimport ActorClient from '../../utils/ActorClient';\nimport confirm from '../../utils/confirm'\nimport { escapeWithEmoji } from '../../utils/EmojiUtils'\n\nimport DialogActionCreators from '../../actions/DialogActionCreators';\nimport GroupProfileActionCreators from '../../actions/GroupProfileActionCreators';\nimport InviteUserActions from '../../actions/InviteUserActions';\nimport EditGroupActionCreators from '../../actions/EditGroupActionCreators';\n\nimport PeerStore from '../../stores/PeerStore';\nimport DialogStore from '../../stores/DialogStore';\nimport GroupStore from '../../stores/GroupStore';\nimport UserStore from '../../stores/UserStore';\n\nimport AvatarItem from '../common/AvatarItem.react';\nimport InviteUser from '../modals/InviteUser.react';\nimport InviteByLink from '../modals/invite-user/InviteByLink.react';\nimport GroupProfileMembers from '../activity/GroupProfileMembers.react';\nimport Fold from '../common/Fold.React';\nimport EditGroup from '../modals/EditGroup.react';\n\nconst getStateFromStores = (gid) => {\n  const thisPeer = GroupStore.getGroup(gid);\n  return {\n    thisPeer,\n    isNotificationsEnabled: DialogStore.isNotificationsEnabled(thisPeer),\n    integrationToken: GroupStore.getToken()\n  };\n};\n\nclass GroupProfile extends Component {\n  static propTypes = {\n    group: PropTypes.object.isRequired\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = assign({\n      isMoreDropdownOpen: false\n    }, getStateFromStores(props.group.id));\n\n    DialogStore.addListener(this.onChange);\n    GroupStore.addListener(this.onChange);\n  }\n\n  onAddMemberClick = group => InviteUserActions.show(group);\n\n  onLeaveGroupClick = gid => {\n    confirm(this.getIntlMessage('modal.confirm.leave'), {\n      abortLabel: this.getIntlMessage('button.cancel'),\n      confirmLabel: this.getIntlMessage('button.ok')\n    }).then(\n      () => DialogActionCreators.leaveGroup(gid),\n      () => {}\n    );\n  };\n\n  onNotificationChange = event => {\n    const { thisPeer } = this.state;\n    DialogActionCreators.changeNotificationsEnabled(thisPeer, event.target.checked);\n  };\n\n  onChange = () => this.setState(getStateFromStores(this.props.group.id));\n  selectToken = (event) => event.target.select();\n\n  toggleMoreDropdown = () => {\n    const { isMoreDropdownOpen } = this.state;\n\n    if (!isMoreDropdownOpen) {\n      this.setState({isMoreDropdownOpen: true});\n      document.addEventListener('click', this.closeMoreDropdown, false);\n    } else {\n      this.closeMoreDropdown();\n    }\n  };\n\n  closeMoreDropdown = () => {\n    this.setState({isMoreDropdownOpen: false});\n    document.removeEventListener('click', this.closeMoreDropdown, false);\n  };\n\n  onClearGroupClick = (gid) => {\n    confirm(this.getIntlMessage('modal.confirm.clear'), {\n      abortLabel: this.getIntlMessage('button.cancel'),\n      confirmLabel: this.getIntlMessage('button.ok')\n    }).then(\n      () => {\n        const peer = ActorClient.getGroupPeer(gid);\n        DialogActionCreators.clearChat(peer)\n      },\n      () => {}\n    );\n  };\n\n  onDeleteGroupClick = (gid) => {\n    confirm(this.getIntlMessage('modal.confirm.delete'), {\n      abortLabel: this.getIntlMessage('button.cancel'),\n      confirmLabel: this.getIntlMessage('button.ok')\n    }).then(\n      () => {\n        const peer = ActorClient.getGroupPeer(gid);\n        DialogActionCreators.deleteChat(peer);\n      },\n      () => {}\n    );\n  };\n\n  onEditGroupClick = (gid) => EditGroupActionCreators.show(gid);\n\n  handleAvatarClick = () => lightbox.open(this.props.group.bigAvatar);\n\n  render() {\n    const { group } = this.props;\n    const {\n      isNotificationsEnabled,\n      integrationToken,\n      isMoreDropdownOpen\n    } = this.state;\n\n    const myId = UserStore.getMyId();\n    const admin = UserStore.getUser(group.adminId);\n    const isMember = DialogStore.isMember();\n\n    let adminControls;\n    if (group.adminId === myId) {\n      adminControls = [\n        <li className=\"dropdown__menu__item hide\">\n          <i className=\"material-icons\">photo_camera</i>\n          {this.getIntlMessage('setGroupPhoto')}\n        </li>\n      ,\n        <li className=\"dropdown__menu__item hide\">\n          <svg className=\"icon icon--dropdown\"\n               dangerouslySetInnerHTML={{__html: '<use xlink:href=\"assets/images/icons.svg#integration\"/>'}}/>\n          {this.getIntlMessage('addIntegration')}\n        </li>\n      ,\n        <li className=\"dropdown__menu__item\" onClick={() => this.onEditGroupClick(group.id)}>\n          <i className=\"material-icons\">mode_edit</i>\n          {this.getIntlMessage('editGroup')}\n        </li>\n      ];\n    }\n\n    const members = <FormattedMessage message={this.getIntlMessage('members')} numMembers={group.members.length}/>;\n\n    const dropdownClassNames = classnames('dropdown', {\n      'dropdown--opened': isMoreDropdownOpen\n    });\n\n    const iconElement = (\n      <svg className=\"icon icon--green\"\n           dangerouslySetInnerHTML={{__html: '<use xlink:href=\"assets/images/icons.svg#members\"/>'}}/>\n    );\n\n    const groupMeta = [\n      <header>\n        <AvatarItem image={group.bigAvatar}\n                    placeholder={group.placeholder}\n                    size=\"large\"\n                    title={group.name}\n                    onClick={this.handleAvatarClick}/>\n\n        <h3 className=\"group_profile__meta__title\" dangerouslySetInnerHTML={{__html: escapeWithEmoji(group.name)}}/>\n        <div className=\"group_profile__meta__created\">\n          {this.getIntlMessage('createdBy')}\n          &nbsp;\n          <span dangerouslySetInnerHTML={{__html: escapeWithEmoji(admin.name)}}/>\n        </div>\n      </header>\n    ,\n      group.about ? (\n        <div className=\"group_profile__meta__description\"\n             dangerouslySetInnerHTML={{__html: escapeWithEmoji(group.about).replace(/\\n/g, '<br/>')}}/>\n      ) : null\n    ];\n\n    const token = (group.adminId === myId) ? (\n      <li className=\"profile__list__item group_profile__integration no-p\">\n        <Fold icon=\"power\" iconClassName=\"icon--pink\" title={this.getIntlMessage('integrationToken')}>\n          <div className=\"info info--light\">\n            <p>{this.getIntlMessage('integrationTokenHint')}</p>\n            <a href=\"https://actor.readme.io/docs/simple-integration\" target=\"_blank\">{this.getIntlMessage('integrationTokenHelp')}</a>\n          </div>\n          <textarea className=\"textarea\" onClick={this.selectToken} readOnly row=\"3\" value={integrationToken}/>\n        </Fold>\n      </li>\n    ) : null;\n\n    if (isMember) {\n      return (\n        <div className=\"activity__body group_profile\">\n          <ul className=\"profile__list\">\n            <li className=\"profile__list__item group_profile__meta\">\n              {groupMeta}\n              <footer className=\"row\">\n                <div className=\"col-xs\">\n                  <button className=\"button button--flat button--wide\"\n                          onClick={() => this.onAddMemberClick(group)}>\n                    <i className=\"material-icons\">person_add</i>\n                    {this.getIntlMessage('addPeople')}\n                  </button>\n                </div>\n                <div style={{width: 10}}/>\n                <div className=\"col-xs\">\n                  <div className={dropdownClassNames}>\n                    <button className=\"dropdown__button button button--flat button--wide\"\n                            onClick={this.toggleMoreDropdown}>\n                      <i className=\"material-icons\">more_horiz</i>\n                      {this.getIntlMessage('more')}\n                    </button>\n                    <ul className=\"dropdown__menu dropdown__menu--right\">\n                      {adminControls}\n                      <li className=\"dropdown__menu__item\"\n                          onClick={() => this.onLeaveGroupClick(group.id)}>\n                        {this.getIntlMessage('leaveGroup')}\n                      </li>\n                      <li className=\"dropdown__menu__item\"\n                          onClick={() => this.onClearGroupClick(group.id)}>\n                        {this.getIntlMessage('clearGroup')}\n                      </li>\n                      <li className=\"dropdown__menu__item\"\n                          onClick={() => this.onDeleteGroupClick(group.id)}>\n                        {this.getIntlMessage('deleteGroup')}\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n              </footer>\n            </li>\n\n            <li className=\"profile__list__item group_profile__media no-p hide\">\n              <Fold icon=\"attach_file\" iconClassName=\"icon--gray\" title={this.getIntlMessage('sharedMedia')}>\n                <ul>\n                  <li><a>230 Shared Photos and Videos</a></li>\n                  <li><a>49 Shared Links</a></li>\n                  <li><a>49 Shared Files</a></li>\n                </ul>\n              </Fold>\n            </li>\n\n            <li className=\"profile__list__item group_profile__notifications no-p\">\n              <label htmlFor=\"notifications\">\n                <i className=\"material-icons icon icon--squash\">notifications_none</i>\n                {this.getIntlMessage('notifications')}\n\n                <div className=\"switch pull-right\">\n                  <input checked={isNotificationsEnabled}\n                         id=\"notifications\"\n                         onChange={this.onNotificationChange}\n                         type=\"checkbox\"/>\n                  <label htmlFor=\"notifications\"></label>\n                </div>\n              </label>\n            </li>\n\n            <li className=\"profile__list__item group_profile__members no-p\">\n              <Fold iconElement={iconElement}\n                    title={members}>\n                <GroupProfileMembers groupId={group.id} members={group.members}/>\n              </Fold>\n            </li>\n\n            {token}\n          </ul>\n\n          <InviteUser/>\n          <InviteByLink/>\n          <EditGroup/>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"activity__body group_profile\">\n          <ul className=\"profile__list\">\n            <li className=\"profile__list__item group_profile__meta\">\n              {groupMeta}\n            </li>\n          </ul>\n        </div>\n      );\n    }\n\n  }\n}\n\nReactMixin.onClass(GroupProfile, IntlMixin);\n\nexport default GroupProfile;\n"]}