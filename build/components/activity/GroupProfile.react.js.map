{"version":3,"sources":["../../../src/components/activity/GroupProfile.react.js"],"names":[],"mappings":"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","file":"GroupProfile.react.js","sourcesContent":["/*\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\n */\n\nimport React, { Component, PropTypes } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { lightbox } from '../../utils/ImageUtils';\nimport { Container } from 'flux/utils';\nimport Scrollbar from '../common/Scrollbar.react';\n\nimport { escapeWithEmoji } from '../../utils/EmojiUtils'\n\nimport NotificationsActionCreators from '../../actions/NotificationsActionCreators';\n\nimport DialogStore from '../../stores/DialogStore';\nimport NotificationsStore from '../../stores/NotificationsStore';\nimport GroupStore from '../../stores/GroupStore';\nimport UserStore from '../../stores/UserStore';\nimport OnlineStore from '../../stores/OnlineStore';\n\nimport SvgIcon from '../common/SvgIcon.react';\nimport AvatarItem from '../common/AvatarItem.react';\nimport GroupProfileMembers from '../activity/GroupProfileMembers.react';\nimport Fold from '../common/Fold.react';\nimport ToggleNotifications from '../common/ToggleNotifications.react';\n\nclass GroupProfile extends Component {\n  static propTypes = {\n    group: PropTypes.object.isRequired\n  };\n\n  static getStores() {\n    return [NotificationsStore, GroupStore, OnlineStore];\n  }\n\n  static calculateState(prevState, nextProps) {\n    const gid = nextProps.group.id;\n    const peer = gid ? GroupStore.getGroup(gid) : null;\n    return {\n      peer,\n      // should not require to pass a peer\n      isNotificationsEnabled: peer ? NotificationsStore.isNotificationsEnabled(peer) : true,\n      integrationToken: GroupStore.getToken(),\n      message: OnlineStore.getMessage()\n    };\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.handleNotificationChange = this.handleNotificationChange.bind(this);\n    this.handleTokenSelect = this.handleTokenSelect.bind(this);\n    this.handleAvatarClick = this.handleAvatarClick.bind(this);\n  }\n\n  handleNotificationChange(event) {\n    const { peer } = this.state;\n    NotificationsActionCreators.changeNotificationsEnabled(peer, event.target.checked);\n  }\n\n  handleTokenSelect(event) {\n    event.target.select();\n  }\n\n  handleAvatarClick() {\n    lightbox.open(this.props.group.bigAvatar);\n  }\n\n  renderMainInfo() {\n    const { group } = this.props;\n    const admin = UserStore.getUser(group.adminId);\n\n    return (\n      <header>\n        <AvatarItem\n          className=\"profile__avatar\"\n          size=\"large\"\n          image={group.bigAvatar}\n          placeholder={group.placeholder}\n          title={group.name}\n          onClick={this.handleAvatarClick}\n        />\n\n        <h3\n          className=\"group_profile__meta__title\"\n          dangerouslySetInnerHTML={{ __html: escapeWithEmoji(group.name) }}\n        />\n\n        <div className=\"group_profile__meta__created\">\n          <FormattedMessage id=\"createdBy\"/>\n          &nbsp;\n          <span dangerouslySetInnerHTML={{ __html: escapeWithEmoji(admin.name) }}/>\n        </div>\n      </header>\n    );\n  }\n\n  renderAbout() {\n    const { group: { about } } = this.props;\n\n    if (!about) {\n      return null;\n    }\n\n    return (\n      <div\n        className=\"group_profile__meta__description\"\n        dangerouslySetInnerHTML={{ __html: escapeWithEmoji(about).replace(/\\n/g, '<br/>') }}\n      />\n    );\n  }\n\n  renderToken() {\n    const { group: { adminId } } = this.props;\n    const { integrationToken } = this.state;\n    const myId = UserStore.getMyId();\n\n    if (adminId !== myId) {\n      return null;\n    }\n\n    return (\n      <li className=\"profile__list__item group_profile__integration no-p\">\n        <Fold icon=\"power\" iconClassName=\"icon--pink\" title={<FormattedMessage id=\"integrationToken\"/>}>\n\n          <div className=\"info info--light\">\n            <p><FormattedMessage id=\"integrationTokenHint\"/></p>\n            <a href=\"https://actor.readme.io/docs/simple-integration\" target=\"_blank\"><FormattedMessage id=\"integrationTokenHelp\"/></a>\n          </div>\n\n          <textarea\n            className=\"textarea\"\n            onClick={this.handleTokenSelect}\n            readOnly\n            row=\"3\"\n            value={integrationToken}/>\n        </Fold>\n      </li>\n    );\n  }\n\n  render() {\n    const { group } = this.props;\n    const { isNotificationsEnabled, message } = this.state;\n    const isMember = DialogStore.isMember();\n\n    const iconElement = (\n      <SvgIcon className=\"icon icon--green\" glyph=\"members\" />\n    );\n\n    if (!isMember) {\n      return (\n        <div className=\"activity__body group_profile\">\n          <ul className=\"profile__list\">\n            <li className=\"profile__list__item group_profile__meta\">\n              {this.renderMainInfo()}\n              {this.renderAbout()}\n            </li>\n          </ul>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"activity__body group_profile\">\n        <Scrollbar>\n          <ul className=\"profile__list\">\n            <li className=\"profile__list__item group_profile__meta\">\n              {this.renderMainInfo()}\n              {this.renderAbout()}\n            </li>\n\n            <li className=\"profile__list__item group_profile__notifications no-p\">\n              <ToggleNotifications isNotificationsEnabled={isNotificationsEnabled} onNotificationChange={this.handleNotificationChange}/>\n            </li>\n\n            <li className=\"profile__list__item group_profile__members no-p\">\n              <Fold iconElement={iconElement} title={message}>\n                <GroupProfileMembers groupId={group.id} members={group.members}/>\n              </Fold>\n            </li>\n\n            {this.renderToken()}\n          </ul>\n        </Scrollbar>\n      </div>\n    );\n  }\n}\n\nexport default Container.create(GroupProfile, { withProps: true, pure: false });\n"]}