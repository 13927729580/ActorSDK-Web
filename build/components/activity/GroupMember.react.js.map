{"version":3,"sources":["../../../src/components/activity/GroupMember.react.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqBA,IAAM,iBAAiB,GAAG,SAApB,iBAAiB,CAAI,GAAG,EAAK;AACjC,MAAM,aAAa,GAAG,wBAAc,gBAAgB,CAAC,GAAG,CAAC,CAAC;;AAE1D,SAAO;AACL,iBAAa,EAAE,aAAa;GAC7B,CAAA;CACF,CAAC;;IAEI,WAAW;YAAX,WAAW;;AAOf,WAPI,WAAW,CAOH,KAAK,EAAE;0BAPf,WAAW;;uEAAX,WAAW,aAQP,KAAK;;UAyDb,QAAQ,GAAG,YAAM;UACP,QAAQ,GAAK,MAAK,KAAK,CAAvB,QAAQ;;AAChB,YAAK,QAAQ,CAAC,iBAAiB,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;KACpD;;UAED,OAAO,GAAG,UAAC,EAAE;aAAK,+BAAqB,oBAAoB,CAAC,EAAE,CAAC;KAAA;;UAE/D,MAAM,GAAG,UAAC,GAAG,EAAE,GAAG,EAAK;UACb,QAAQ,GAAK,MAAK,KAAK,CAAvB,QAAQ;;AAChB,UAAM,WAAW,GACf,6DAAkB,OAAO,EAAE,MAAK,cAAc,CAAC,oBAAoB,CAAC,AAAC;AACnD,YAAI,EAAE,QAAQ,CAAC,KAAK,AAAC,GAAE,AAC1C,CAAC;;AAEF,6BAAQ,WAAW,EAAE;AACnB,kBAAU,EAAE,MAAK,cAAc,CAAC,eAAe,CAAC;AAChD,oBAAY,EAAE,MAAK,cAAc,CAAC,WAAW,CAAC;OAC/C,CAAC,CAAC,IAAI,CACL,YAAM;AACJ,gCAAc,iBAAiB,CAAC,MAAK,QAAQ,CAAC,CAAC;AAC/C,yCAAuB,UAAU,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;OAC7C,EACD,YAAM,EAAE,CACT,CAAC;KACH;;AA/EC,UAAK,KAAK,GAAG,iBAAiB,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;;GACxD;;eAXG,WAAW;;2CAaQ;UACb,QAAQ,GAAK,IAAI,CAAC,KAAK,CAAvB,QAAQ;;AAEhB,8BAAc,kBAAkB,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AACnD,8BAAc,oBAAoB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KACnD;;;6BAEQ;;;mBAC4B,IAAI,CAAC,KAAK;UAArC,QAAQ,UAAR,QAAQ;UAAE,OAAO,UAAP,OAAO;UAAE,GAAG,UAAH,GAAG;UACtB,aAAa,GAAK,IAAI,CAAC,KAAK,CAA5B,aAAa;;AACrB,UAAM,IAAI,GAAG,sBAAY,MAAM,EAAE,CAAC;;AAElC,UAAI,QAAQ,YAAA,CAAC;AACb,UAAI,OAAO,IAAI,QAAQ,CAAC,IAAI,CAAC,EAAE,KAAK,IAAI,EAAE;AACxC,gBAAQ,GACN;;YAAK,SAAS,EAAC,qBAAqB;UAClC;+BAAU,IAAI;cAAC,YAAY,EAAE,aAAa,AAAC;YACzC;iCAAU,OAAO;;cACf;;kBAAG,OAAO,EAAE;2BAAM,OAAK,MAAM,CAAC,GAAG,EAAE,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC;mBAAA,AAAC;gBAAE,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC;eAAK;aACtE;YACnB;iCAAU,UAAU;;cAClB;;kBAAG,SAAS,EAAC,qBAAqB;;eAAc;aAC5B;YACtB;iCAAU,OAAO;;cACf;;kBAAG,SAAS,EAAC,gBAAgB;;eAAU;aACtB;YACnB;iCAAU,OAAO;;cACf;;kBAAG,SAAS,EAAC,gBAAgB;;eAAY;aACxB;WACL;SACZ,AACP,CAAC;OACH,MAAM;AACL,gBAAQ,GAAG,IAAI,CAAC;OACjB;;AAED,aACE;;UAAI,SAAS,EAAC,oCAAoC;QAChD;;YAAG,OAAO,EAAE;qBAAM,OAAK,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC;aAAA,AAAC;UAC/C,sDAAY,KAAK,EAAE,QAAQ,CAAC,MAAM,AAAC;AACvB,uBAAW,EAAE,QAAQ,CAAC,WAAW,AAAC;AAClC,iBAAK,EAAE,QAAQ,CAAC,KAAK,AAAC,GAAE;SAClC;QAEJ,qCAAG,OAAO,EAAE;mBAAM,OAAK,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC;WAAA,AAAC;AAC9C,iCAAuB,EAAE,EAAC,MAAM,EAAE,iCAAgB,QAAQ,CAAC,KAAK,CAAC,EAAC,AAAC,GAAE;QAEvE,QAAQ;OACN,CACN;KACF;;;SA/DG,WAAW;GAAS,gBAAM,SAAS;;AAAnC,WAAW,CACR,SAAS,GAAG;AACjB,UAAQ,EAAE,gBAAM,SAAS,CAAC,MAAM,CAAC,UAAU;AAC3C,SAAO,EAAE,gBAAM,SAAS,CAAC,IAAI,CAAC,UAAU;AACxC,KAAG,EAAE,gBAAM,SAAS,CAAC,MAAM,CAAC,UAAU;CACvC;;AAuFH,qBAAW,OAAO,CAAC,WAAW,uBAAY,CAAC;;kBAE5B,WAAW","file":"GroupMember.react.js","sourcesContent":["/*\n * Copyright (C) 2015 Actor LLC. <https://actor.im>\n */\n\nimport React from 'react';\nimport ReactMixin from 'react-mixin';\nimport { IntlMixin, FormattedMessage } from 'react-intl';\nimport confirm from '../../utils/confirm'\nimport { escapeWithEmoji } from '../../utils/EmojiUtils'\nimport ActorClient from '../../utils/ActorClient'\n\nimport { AsyncActionStates } from '../../constants/ActorAppConstants';\n\nimport DialogActionCreators from '../../actions/DialogActionCreators';\nimport KickUserActionCreators from '../../actions/KickUserActionCreators';\n\nimport KickUserStore from '../../stores/KickUserStore'\n\nimport AvatarItem from '../common/AvatarItem.react';\nimport Stateful from '../common/Stateful';\n\nconst getStateFromStore = (uid) => {\n  const kickUserState = KickUserStore.getKickUserState(uid);\n\n  return {\n    kickUserState: kickUserState\n  }\n};\n\nclass GroupMember extends React.Component {\n  static propTypes = {\n    peerInfo: React.PropTypes.object.isRequired,\n    canKick: React.PropTypes.bool.isRequired,\n    gid: React.PropTypes.number.isRequired\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = getStateFromStore(props.peerInfo.peer.id);\n  }\n\n  componentWillUnmount() {\n    const { peerInfo } = this.props;\n\n    KickUserStore.resetKickUserState(peerInfo.peer.id);\n    KickUserStore.removeChangeListener(this.onChange);\n  };\n\n  render() {\n    const { peerInfo, canKick, gid } = this.props;\n    const { kickUserState } = this.state;\n    const myId = ActorClient.getUid();\n\n    let controls;\n    if (canKick && peerInfo.peer.id !== myId) {\n      controls = (\n        <div className=\"controls pull-right\">\n          <Stateful.Root currentState={kickUserState}>\n            <Stateful.Pending>\n              <a onClick={() => this.onKick(gid, peerInfo.peer.id)}>{this.getIntlMessage('kick')}</a>\n            </Stateful.Pending>\n            <Stateful.Processing>\n              <i className=\"material-icons spin\">autorenew</i>\n            </Stateful.Processing>\n            <Stateful.Success>\n              <i className=\"material-icons\">check</i>\n            </Stateful.Success>\n            <Stateful.Failure>\n              <i className=\"material-icons\">warning</i>\n            </Stateful.Failure>\n          </Stateful.Root>\n        </div>\n      );\n    } else {\n      controls = null;\n    }\n\n    return (\n      <li className=\"group_profile__members__list__item\">\n        <a onClick={() => this.onClick(peerInfo.peer.id)}>\n          <AvatarItem image={peerInfo.avatar}\n                      placeholder={peerInfo.placeholder}\n                      title={peerInfo.title}/>\n        </a>\n\n        <a onClick={() => this.onClick(peerInfo.peer.id)}\n           dangerouslySetInnerHTML={{__html: escapeWithEmoji(peerInfo.title)}}/>\n\n        {controls}\n      </li>\n    )\n  }\n\n  onChange = () => {\n    const { peerInfo } = this.props;\n    this.setState(getStateFromStore(peerInfo.peer.id));\n  };\n\n  onClick = (id) => DialogActionCreators.selectDialogPeerUser(id);\n\n  onKick = (gid, uid) => {\n    const { peerInfo } = this.props;\n    const confirmText = (\n      <FormattedMessage message={this.getIntlMessage('modal.confirm.kick')}\n                        name={peerInfo.title}/>\n    );\n\n    confirm(confirmText, {\n      abortLabel: this.getIntlMessage('button.cancel'),\n      confirmLabel: this.getIntlMessage('button.ok')\n    }).then(\n      () => {\n        KickUserStore.addChangeListener(this.onChange);\n        KickUserActionCreators.kickMember(gid, uid);\n      },\n      () => {}\n    );\n  };\n}\n\nReactMixin.onClass(GroupMember, IntlMixin);\n\nexport default GroupMember;\n"]}