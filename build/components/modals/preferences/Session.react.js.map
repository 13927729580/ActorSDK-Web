{"version":3,"sources":["../../../../src/components/modals/preferences/Session.react.js"],"names":[],"mappings":";;;;AAIA;;;;AACA;;AAEA;;;;AAEA;;;;AAEA;;;;;;;;;;;;;;IAEM,W;;;AACJ,uBAAY,KAAZ,EAAmB;AAAA;;AAAA,iDACjB,sBAAM,KAAN,CADiB;;AAAA;;AAAA;AAElB;;cAEM,S,wBAAY;AACjB,WAAO,4BAAP;AACD,G;;wBAoBD,M,qBAAS;AAAA,iBACgC,KAAK,KADrC;AAAA,QACC,QADD,UACC,QADD;AAAA,QACW,MADX,UACW,MADX;AAAA,QACmB,QADnB,UACmB,QADnB;AAAA,QAEC,qBAFD,GAE2B,KAAK,KAFhC,CAEC,qBAFD;AAAA,QAGC,IAHD,GAGU,KAAK,OAHf,CAGC,IAHD;;;AAKP,QAAM,gBAAiB,WAAW,aAAZ,GACpB;AAAA;MAAA;MAAQ,KAAK,QAAL,CAAc,mCAAd;AAAR,KADoB,GAElB,IAFJ;;AAIA,WACE;AAAA;MAAA,EAAI,WAAU,uBAAd;MACE;AAAA;QAAA,EAAK,WAAU,OAAf;QACG,QADH;QAEG;AAFH,OADF;MAME;AAAA;QAAA;QACE;AAAA;UAAA;UAAI,KAAK,QAAL,CAAc,6BAAd,CAAJ;UAAA;AAAA,SADF;QAAA;QAC0D,SAAS,QAAT;AAD1D,OANF;MAUE;AACE,sBAAc,qBADhB;AAEE,iBACE;AAAA;UAAA,EAAG,WAAU,6CAAb,EAA2D,SAAS,KAAK,WAAzE;UACG,KAAK,QAAL,CAAc,8BAAd;AADH,SAHJ;AAOE,oBACE;AAAA;UAAA,EAAG,WAAU,sDAAb;UAAA;AAAA,SARJ;AAUE,iBACE;AAAA;UAAA,EAAG,WAAU,iDAAb;UAAA;AAAA,SAXJ;AAaE,iBACE;AAAA;UAAA,EAAG,WAAU,iDAAb;UAAA;AAAA;AAdJ;AAVF,KADF;AA8BD,G;;;;;AAlEG,W,CAQG,c,GAAiB,UAAC,SAAD,EAAY,KAAZ,EAAsB;AAC5C,SAAO;AACL,2BAAuB,2BAAiB,wBAAjB,CAA0C,MAAM,EAAhD;AADlB,GAAP;AAGD,C;;AAZG,W,CAcG,S,GAAY;AACjB,YAAU,iBAAU,MAAV,CAAiB,UADV;AAEjB,UAAQ,iBAAU,MAAV,CAAiB,UAFR;AAGjB,MAAI,iBAAU,MAAV,CAAiB,UAHJ;AAIjB,YAAU,iBAAU,MAAV,CAAiB;AAJV,C;AAdf,W,CAqBG,Y,GAAe;AACpB,QAAM,iBAAU;AADI,C;;;;;OAItB,W,GAAc;AAAA,WAAM,oCAA0B,gBAA1B,CAA2C,OAAK,KAAL,CAAW,EAAtD,CAAN;AAAA,G;;;kBA4CD,iBAAU,MAAV,CAAiB,WAAjB,EAA8B,EAAE,MAAM,KAAR,EAAe,WAAW,IAA1B,EAA9B,C","file":"Session.react.js","sourcesContent":["/*\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\n */\n\nimport React, { Component, PropTypes } from 'react';\nimport { Container } from 'flux/utils';\n\nimport PreferencesActionCreators from '../../../actions/PreferencesActionCreators';\n\nimport PreferencesStore from '../../../stores/PreferencesStore';\n\nimport Stateful from '../../common/Stateful.react';\n\nclass SessionItem extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  static getStores() {\n    return [PreferencesStore];\n  }\n  static calculateState = (prevState, props) => {\n    return {\n      terminateSessionState: PreferencesStore.getTerminateSessionState(props.id)\n    }\n  };\n\n  static propTypes = {\n    appTitle: PropTypes.string.isRequired,\n    holder: PropTypes.string.isRequired,\n    id: PropTypes.number.isRequired,\n    authTime: PropTypes.object.isRequired\n  };\n\n  static contextTypes = {\n    intl: PropTypes.object\n  };\n\n  onTerminate = () => PreferencesActionCreators.terminateSession(this.props.id);\n\n  render() {\n    const { appTitle, holder, authTime } = this.props;\n    const { terminateSessionState } = this.state;\n    const { intl } = this.context;\n\n    const currentDevice = (holder === 'THIS_DEVICE') ? (\n      <small>{intl.messages['preferencesSessionsCurrentSession']}</small>\n    ) : null;\n\n    return (\n      <li className=\"session-list__session\">\n        <div className=\"title\">\n          {appTitle}\n          {currentDevice}\n        </div>\n\n        <small>\n          <b>{intl.messages['preferencesSessionsAuthTime']}:</b> {authTime.toString()}\n        </small>\n\n        <Stateful\n          currentState={terminateSessionState}\n          pending={\n            <a className=\"session-list__session__terminate link--blue\" onClick={this.onTerminate}>\n              {intl.messages['preferencesSessionsTerminate']}\n            </a>\n          }\n          processing= {\n            <i className=\"session-list__session__terminate material-icons spin\">autorenew</i>\n          }\n          success={\n            <i className=\"session-list__session__terminate material-icons\">check</i>\n          }\n          failure={\n            <i className=\"session-list__session__terminate material-icons\">warning</i>\n          }\n        />\n      </li>\n    )\n  }\n}\n\nexport default Container.create(SessionItem, { pure: false, withProps: true });\n"]}