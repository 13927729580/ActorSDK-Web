{"version":3,"sources":["../../../../src/components/modals/preferences/Session.react.js"],"names":[],"mappings":";;;;AAIA;;;;AACA;;AAEA;;;;AAEA;;;;AAEA;;;;;;;;;;;;;;IAEM;;;AACJ,WADI,WACJ,CAAY,KAAZ,EAAmB;0BADf,aACe;;iDACjB,sBAAM,KAAN,GADiB;;;;;GAAnB;;AADI,cAKG,iCAAY;AACjB,WAAO,4BAAP,CADiB;;;AALf,wBA2BJ,2BAAS;iBACgC,KAAK,KAAL,CADhC;QACC,2BADD;QACW,uBADX;QACmB,2BADnB;QAEC,wBAA0B,KAAK,KAAL,CAA1B,sBAFD;QAGC,OAAS,KAAK,OAAL,CAAT,KAHD;;;AAKP,QAAM,gBAAgB,MAAC,KAAW,aAAX,GACrB;;;MAAQ,KAAK,QAAL,CAAc,mCAAd,CAAR;KADoB,GAElB,IAFkB,CALf;;AASP,WACE;;QAAI,WAAU,uBAAV,EAAJ;MACE;;UAAK,WAAU,OAAV,EAAL;QACG,QADH;QAEG,aAFH;OADF;MAME;;;QACE;;;UAAI,KAAK,QAAL,CAAc,6BAAd,CAAJ;;SADF;;QAC0D,SAAS,QAAT,EAD1D;OANF;MAUE;AACE,sBAAc,qBAAd;AACA,iBACE;;YAAG,WAAU,6CAAV,EAAwD,SAAS,KAAK,WAAL,EAApE;UACG,KAAK,QAAL,CAAc,8BAAd,CADH;SADF;AAKA,oBACE;;YAAG,WAAU,sDAAV,EAAH;;SADF;AAGA,iBACE;;YAAG,WAAU,iDAAV,EAAH;;SADF;AAGA,iBACE;;YAAG,WAAU,iDAAV,EAAH;;SADF;OAbF,CAVF;KADF,CATO;;;SA3BL;;;YAQG,iBAAiB,UAAC,SAAD,EAAY,KAAZ,EAAsB;AAC5C,SAAO;AACL,2BAAuB,2BAAiB,wBAAjB,CAA0C,MAAM,EAAN,CAAjE;GADF,CAD4C;CAAtB;;AARpB,YAcG,YAAY;AACjB,YAAU,iBAAU,MAAV,CAAiB,UAAjB;AACV,UAAQ,iBAAU,MAAV,CAAiB,UAAjB;AACR,MAAI,iBAAU,MAAV,CAAiB,UAAjB;AACJ,YAAU,iBAAU,MAAV,CAAiB,UAAjB;;AAlBR,YAqBG,eAAe;AACpB,QAAM,iBAAU,MAAV;;;;;;OAGR,cAAc;WAAM,oCAA0B,gBAA1B,CAA2C,OAAK,KAAL,CAAW,EAAX;GAAjD;;;kBA4CD,iBAAU,MAAV,CAAiB,WAAjB,EAA8B,EAAC,MAAM,KAAN,EAAa,WAAW,IAAX,EAA5C","file":"Session.react.js","sourcesContent":["/*\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\n */\n\nimport React, { Component, PropTypes } from 'react';\nimport { Container } from 'flux/utils';\n\nimport PreferencesActionCreators from '../../../actions/PreferencesActionCreators';\n\nimport PreferencesStore from '../../../stores/PreferencesStore';\n\nimport Stateful from '../../common/Stateful.react';\n\nclass SessionItem extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  static getStores() {\n    return [PreferencesStore];\n  }\n  static calculateState = (prevState, props) => {\n    return {\n      terminateSessionState: PreferencesStore.getTerminateSessionState(props.id)\n    }\n  };\n\n  static propTypes = {\n    appTitle: PropTypes.string.isRequired,\n    holder: PropTypes.string.isRequired,\n    id: PropTypes.number.isRequired,\n    authTime: PropTypes.object.isRequired\n  };\n\n  static contextTypes = {\n    intl: PropTypes.object\n  };\n\n  onTerminate = () => PreferencesActionCreators.terminateSession(this.props.id);\n\n  render() {\n    const { appTitle, holder, authTime } = this.props;\n    const { terminateSessionState } = this.state;\n    const { intl } = this.context;\n\n    const currentDevice = (holder === 'THIS_DEVICE') ? (\n      <small>{intl.messages['preferencesSessionsCurrentSession']}</small>\n    ) : null;\n\n    return (\n      <li className=\"session-list__session\">\n        <div className=\"title\">\n          {appTitle}\n          {currentDevice}\n        </div>\n\n        <small>\n          <b>{intl.messages['preferencesSessionsAuthTime']}:</b> {authTime.toString()}\n        </small>\n\n        <Stateful\n          currentState={terminateSessionState}\n          pending={\n            <a className=\"session-list__session__terminate link--blue\" onClick={this.onTerminate}>\n              {intl.messages['preferencesSessionsTerminate']}\n            </a>\n          }\n          processing= {\n            <i className=\"session-list__session__terminate material-icons spin\">autorenew</i>\n          }\n          success={\n            <i className=\"session-list__session__terminate material-icons\">check</i>\n          }\n          failure={\n            <i className=\"session-list__session__terminate material-icons\">warning</i>\n          }\n        />\n      </li>\n    )\n  }\n}\n\nexport default Container.create(SessionItem, {pure: false, withProps: true});\n"]}