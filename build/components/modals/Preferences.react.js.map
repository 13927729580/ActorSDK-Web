{"version":3,"sources":["../../../src/components/modals/Preferences.react.js"],"names":[],"mappings":"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","file":"Preferences.react.js","sourcesContent":["/*\n * Copyright (C) 2015 Actor LLC. <https://actor.im>\n */\n\nimport { map } from 'lodash';\nimport React, { Component } from 'react';\nimport { Container } from 'flux/utils';\nimport classnames from 'classnames';\nimport Modal from 'react-modal';\nimport ReactMixin from 'react-mixin';\nimport { IntlMixin } from 'react-intl';\n\nimport { KeyCodes } from '../../constants/ActorAppConstants';\n\nimport PreferencesActionCreators from '../../actions/PreferencesActionCreators';\n\nimport PreferencesStore from '../../stores/PreferencesStore';\n\nimport Session from './preferences/Session.react'\n\nclass PreferencesModal extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  static getStores = () => [PreferencesStore];\n\n  static calculateState() {\n    return {\n      isOpen: PreferencesStore.isOpen(),\n      isSendByEnterEnabled: PreferencesStore.isSendByEnterEnabled(),\n      isSoundEffectsEnabled: PreferencesStore.isSoundEffectsEnabled(),\n      isGroupsNotificationsEnabled: PreferencesStore.isGroupsNotificationsEnabled(),\n      isOnlyMentionNotifications: PreferencesStore.isOnlyMentionNotifications(),\n      isShowNotificationsTextEnabled: PreferencesStore.isShowNotificationsTextEnabled(),\n      sessions: PreferencesStore.getSessions(),\n      activeTab: PreferencesStore.getCurrentTab()\n    }\n  };\n\n  componentWillMount() {\n    document.addEventListener('keydown', this.onKeyDown, false);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.onKeyDown, false);\n  }\n\n  onClose = () => PreferencesActionCreators.hide();\n\n  onDone = () => {\n    const {\n      isSendByEnterEnabled,\n      isSoundEffectsEnabled,\n      isGroupsNotificationsEnabled,\n      isOnlyMentionNotifications,\n      isShowNotificationsTextEnabled\n    } = this.state;\n\n    PreferencesActionCreators.save({\n      isSendByEnterEnabled,\n      isSoundEffectsEnabled,\n      isGroupsNotificationsEnabled,\n      isOnlyMentionNotifications,\n      isShowNotificationsTextEnabled\n    });\n    this.onClose();\n  };\n\n  onKeyDown = event => {\n    if (event.keyCode === KeyCodes.ESC) {\n      event.preventDefault();\n      this.onClose();\n    }\n  };\n\n  changeSendByEnter = (event) => this.setState({isSendByEnterEnabled: event.target.value === 'true'});\n  changeSoundEffectsEnabled = (event) => this.setState({isSoundEffectsEnabled: event.target.checked});\n  changeGroupsNotificationsEnabled = (event) => this.setState({isGroupsNotificationsEnabled: event.target.checked});\n  changeMentionNotifications = (event) => this.setState({isOnlyMentionNotifications: event.target.checked});\n  changeIsShowNotificationTextEnabled = (event) => this.setState({isShowNotificationsTextEnabled: event.target.checked});\n\n  onTerminateAllSessionsClick = () => PreferencesActionCreators.terminateAllSessions();\n\n  changeTab = (tab) => PreferencesActionCreators.changeTab(tab);\n\n  render() {\n    const {\n      isOpen,\n      activeTab,\n      isSendByEnterEnabled,\n      isSoundEffectsEnabled,\n      isGroupsNotificationsEnabled,\n      isOnlyMentionNotifications,\n      isShowNotificationsTextEnabled,\n      sessions\n    } = this.state;\n\n    const sessionList = map(sessions, (session) => <Session {...session}/>);\n\n    const generalTabClassNames = classnames('preferences__tabs__tab', {\n      'preferences__tabs__tab--active': activeTab === 'GENERAL'\n    });\n    const notificationTabClassNames = classnames('preferences__tabs__tab', {\n      'preferences__tabs__tab--active': activeTab === 'NOTIFICATIONS'\n    });\n    const securityTabClassNames = classnames('preferences__tabs__tab', {\n      'preferences__tabs__tab--active': activeTab === 'SECURITY'\n    });\n    const generalTabContentClassName = classnames('preferences__list__item', {\n      'preferences__list__item--active': activeTab === 'GENERAL'\n    });\n    const notificationTabContentClassName = classnames('preferences__list__item', {\n      'preferences__list__item--active': activeTab === 'NOTIFICATIONS'\n    });\n    const securityTabContentClassName = classnames('preferences__list__item', {\n      'preferences__list__item--active': activeTab === 'SECURITY'\n    });\n\n    return (\n      <Modal className=\"modal-new modal-new--preferences\"\n             closeTimeoutMS={150}\n             isOpen={isOpen}\n             style={{width: 760}}>\n\n        <div className=\"modal-new__header\">\n          <i className=\"modal-new__header__icon material-icons\">settings</i>\n          <h3 className=\"modal-new__header__title\">{this.getIntlMessage('preferencesModalTitle')}</h3>\n\n          <div className=\"pull-right\">\n            <button className=\"button button--lightblue\" onClick={this.onDone}>{this.getIntlMessage('button.done')}</button>\n          </div>\n        </div>\n\n        <div className=\"modal-new__body\">\n          <div className=\"preferences\">\n            <aside className=\"preferences__tabs\">\n              <a className={generalTabClassNames}\n                 onClick={() => this.changeTab('GENERAL')}>\n                {this.getIntlMessage('preferencesGeneralTab')}\n              </a>\n              <a className={notificationTabClassNames}\n                 onClick={() => this.changeTab('NOTIFICATIONS')}>\n                {this.getIntlMessage('preferencesNotificationsTab')}\n              </a>\n              <a className={securityTabClassNames}\n                 onClick={() => this.changeTab('SECURITY')}>\n                {this.getIntlMessage('preferencesSecurityTab')}\n              </a>\n            </aside>\n            <div className=\"preferences__body\">\n              <div className=\"preferences__list\">\n                <div className={generalTabContentClassName}>\n                  <ul>\n                    <li>\n                      <i className=\"icon material-icons\">keyboard</i>\n                      <h4>{this.getIntlMessage('preferencesSendMessageTitle')}</h4>\n                      <div className=\"radio\">\n                        <input type=\"radio\"\n                               name=\"sendByEnter\"\n                               id=\"sendByEnterEnabled\"\n                               value=\"true\"\n                               defaultChecked={isSendByEnterEnabled}\n                               onChange={this.changeSendByEnter}/>\n                        <label htmlFor=\"sendByEnterEnabled\">\n                          <b>Enter</b> – {this.getIntlMessage('preferencesSendMessage')}, <b>Shift + Enter</b> – {this.getIntlMessage('preferencesNewLine')}\n                        </label>\n                      </div>\n                      <div className=\"radio\">\n                        <input type=\"radio\"\n                               name=\"sendByEnter\"\n                               id=\"sendByEnterDisabled\"\n                               value=\"false\"\n                               defaultChecked={!isSendByEnterEnabled}\n                               onChange={this.changeSendByEnter}/>\n                        <label htmlFor=\"sendByEnterDisabled\">\n                          <b>Cmd + Enter</b> – {this.getIntlMessage('preferencesSendMessage')}, <b>Enter</b> – {this.getIntlMessage('preferencesNewLine')}\n                        </label>\n                      </div>\n                    </li>\n                  </ul>\n                </div>\n                <div className={notificationTabContentClassName}>\n                  <ul>\n                    <li>\n                      <i className=\"icon material-icons\">music_note</i>\n                      <h4>{this.getIntlMessage('preferencesEffectsTitle')}</h4>\n                      <div className=\"checkbox\">\n                        <input type=\"checkbox\"\n                               id=\"soundEffects\"\n                               defaultChecked={isSoundEffectsEnabled}\n                               onChange={this.changeSoundEffectsEnabled}/>\n                        <label htmlFor=\"soundEffects\">\n                          {this.getIntlMessage('preferencesEnableEffects')}\n                        </label>\n                      </div>\n                    </li>\n                    <li>\n                      <i className=\"icon material-icons\">notifications</i>\n                      <h4>{this.getIntlMessage('preferencesNotificationsTitle')}</h4>\n                      <div className=\"checkbox\">\n                        <input type=\"checkbox\"\n                               id=\"groupNotifications\"\n                               defaultChecked={isGroupsNotificationsEnabled}\n                               onChange={this.changeGroupsNotificationsEnabled}/>\n                        <label htmlFor=\"groupNotifications\">\n                          {this.getIntlMessage('preferencesNotificationsGroup')}\n                        </label>\n                      </div>\n                      <div className=\"checkbox\">\n                        <input type=\"checkbox\"\n                               id=\"mentionsNotifications\"\n                               defaultChecked={isOnlyMentionNotifications}\n                               onChange={this.changeMentionNotifications}/>\n                        <label htmlFor=\"mentionsNotifications\">\n                          {this.getIntlMessage('preferencesNotificationsOnlyMention')}\n                        </label>\n                      </div>\n                      <p className=\"hint\">{this.getIntlMessage('preferencesNotificationsOnlyMentionHint')}</p>\n                    </li>\n                    <li>\n                      <i className=\"icon material-icons\">visibility</i>\n                      <h4>{this.getIntlMessage('preferencesPrivacyTitle')}</h4>\n                      <div className=\"checkbox\">\n                        <input type=\"checkbox\"\n                               id=\"notificationTextPreview\"\n                               defaultChecked={isShowNotificationsTextEnabled}\n                               onChange={this.changeIsShowNotificationTextEnabled}/>\n                        <label htmlFor=\"notificationTextPreview\">\n                          {this.getIntlMessage('preferencesMessagePreview')}\n                        </label>\n                      </div>\n                      <p className=\"hint\">{this.getIntlMessage('preferencesMessagePreviewHint')}</p>\n                    </li>\n                  </ul>\n                </div>\n                <div className={securityTabContentClassName}>\n                  <ul>\n                    <li>\n                      <i className=\"icon material-icons\">devices</i>\n                      <h4>{this.getIntlMessage('preferencesSessionsTitle')}</h4>\n                      <ul className=\"session-list\">\n                        {sessionList}\n                        <li className=\"session-list__session\">\n                          <a className=\"link--red\" onClick={this.onTerminateAllSessionsClick}>\n                            {this.getIntlMessage('preferencesSessionsTerminateAll')}\n                          </a>\n                        </li>\n                      </ul>\n                    </li>\n                  </ul>\n                </div>\n\n              </div>\n            </div>\n          </div>\n        </div>\n\n      </Modal>\n    );\n  }\n}\n\nReactMixin.onClass(PreferencesModal, IntlMixin);\n\nexport default Container.create(PreferencesModal);\n"]}