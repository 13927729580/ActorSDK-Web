{"version":3,"sources":["../../../src/components/modals/Preferences.react.js"],"names":[],"mappings":";;;;AAIA;;AACA;;;;AACA;;AACA;;;;AACA;;;;AAEA;;;;AAEA;;AAEA;;;;AACA;;AAEA;;;;AAEA;;;;;;;;;;;;;;IAEM,gB;;;AACJ,4BAAY,KAAZ,EAAmB;AAAA;;AAAA,iDACjB,sBAAM,KAAN,CADiB;;AAAA,UA+CnB,OA/CmB,GA+CT;AAAA,aAAM,oCAA0B,IAA1B,EAAN;AAAA,KA/CS;;AAAA,UAiDnB,MAjDmB,GAiDV,YAAM;AAAA,wBAOT,MAAK,KAPI;AAAA,UAEX,oBAFW,eAEX,oBAFW;AAAA,UAGX,qBAHW,eAGX,qBAHW;AAAA,UAIX,4BAJW,eAIX,4BAJW;AAAA,UAKX,0BALW,eAKX,0BALW;AAAA,UAMX,8BANW,eAMX,8BANW;;;AASb,0CAA0B,IAA1B,CAA+B;AAC7B,kDAD6B;AAE7B,oDAF6B;AAG7B,kEAH6B;AAI7B,8DAJ6B;AAK7B;AAL6B,OAA/B;AAOA,YAAK,OAAL;AACD,KAlEkB;;AAAA,UAoEnB,SApEmB,GAoEP,iBAAS;AACnB,UAAI,MAAM,OAAN,KAAkB,4BAAS,GAA/B,EAAoC;AAClC,cAAM,cAAN;AACA,cAAK,OAAL;AACD;AACF,KAzEkB;;AAAA,UA2EnB,iBA3EmB,GA2EC,UAAC,KAAD;AAAA,aAAW,MAAK,QAAL,CAAc,EAAE,sBAAsB,MAAM,MAAN,CAAa,KAAb,KAAuB,MAA/C,EAAd,CAAX;AAAA,KA3ED;;AAAA,UA4EnB,yBA5EmB,GA4ES,UAAC,KAAD;AAAA,aAAW,MAAK,QAAL,CAAc,EAAE,uBAAuB,MAAM,MAAN,CAAa,OAAtC,EAAd,CAAX;AAAA,KA5ET;;AAAA,UA6EnB,gCA7EmB,GA6EgB,UAAC,KAAD;AAAA,aAAW,MAAK,QAAL,CAAc,EAAE,8BAA8B,MAAM,MAAN,CAAa,OAA7C,EAAd,CAAX;AAAA,KA7EhB;;AAAA,UA8EnB,0BA9EmB,GA8EU,UAAC,KAAD;AAAA,aAAW,MAAK,QAAL,CAAc,EAAE,4BAA4B,MAAM,MAAN,CAAa,OAA3C,EAAd,CAAX;AAAA,KA9EV;;AAAA,UA+EnB,mCA/EmB,GA+EmB,UAAC,KAAD;AAAA,aAAW,MAAK,QAAL,CAAc,EAAE,gCAAgC,MAAM,MAAN,CAAa,OAA/C,EAAd,CAAX;AAAA,KA/EnB;;AAAA,UAiFnB,2BAjFmB,GAiFW;AAAA,aAAM,oCAA0B,oBAA1B,EAAN;AAAA,KAjFX;;AAAA,UAmFnB,SAnFmB,GAmFP,UAAC,GAAD;AAAA,aAAS,oCAA0B,SAA1B,CAAoC,GAApC,CAAT;AAAA,KAnFO;;AAGjB,QAAM,cAAc,0BAAgB,GAAhB,EAApB;AACA,UAAK,OAAL,GAAe,YAAY,OAAZ,GAAsB,YAAY,OAAlC,6BAAf;AACA,UAAK,iBAAL,GAAyB,CAAzB;;AAEA,UAAK,gBAAL,GAAwB,MAAK,gBAAL,CAAsB,IAAtB,OAAxB;AAPiB;AAQlB;;mBAMM,S,wBAAY;AACjB,WAAO,4BAAP;AACD,G;;mBAEM,c,6BAAiB;AACtB,WAAO;AACL,cAAQ,2BAAiB,MAAjB,EADH;AAEL,4BAAsB,2BAAiB,oBAAjB,EAFjB;AAGL,6BAAuB,2BAAiB,qBAAjB,EAHlB;AAIL,oCAA8B,2BAAiB,4BAAjB,EAJzB;AAKL,kCAA4B,2BAAiB,0BAAjB,EALvB;AAML,sCAAgC,2BAAiB,8BAAjB,EAN3B;AAOL,gBAAU,2BAAiB,WAAjB,EAPL;AAQL,iBAAW,2BAAiB,aAAjB;AARN,KAAP;AAUD,G;;6BAED,kB,iCAAqB;AACnB,aAAS,gBAAT,CAA0B,SAA1B,EAAqC,KAAK,SAA1C,EAAqD,KAArD;AACD,G;;6BAED,oB,mCAAuB;AACrB,aAAS,mBAAT,CAA6B,SAA7B,EAAwC,KAAK,SAA7C,EAAwD,KAAxD;AACD,G;;6BAED,gB,+BAAmB;AACjB,SAAK,iBAAL;AACA,QAAI,KAAK,iBAAL,IAA0B,CAA9B,EAAiC;AAC/B;AACA,WAAK,iBAAL,GAAyB,CAAzB;AACD;AACF,G;;6BAwCD,M,qBAAS;AAAA;;AAAA,iBAUH,KAAK,KAVF;AAAA,QAEL,MAFK,UAEL,MAFK;AAAA,QAGL,SAHK,UAGL,SAHK;AAAA,QAIL,oBAJK,UAIL,oBAJK;AAAA,QAKL,qBALK,UAKL,qBALK;AAAA,QAML,4BANK,UAML,4BANK;AAAA,QAOL,0BAPK,UAOL,0BAPK;AAAA,QAQL,8BARK,UAQL,8BARK;AAAA,QASL,QATK,UASL,QATK;AAAA,QAWC,IAXD,GAWU,KAAK,OAXf,CAWC,IAXD;;;AAaP,QAAM,cAAc,iBAAI,QAAJ,EAAc,UAAC,OAAD;AAAA,aAAa,iDAAa,OAAb,CAAb;AAAA,KAAd,CAApB;;AAEA,QAAM,uBAAuB,0BAAW,wBAAX,EAAqC;AAChE,wCAAkC,cAAc;AADgB,KAArC,CAA7B;AAGA,QAAM,4BAA4B,0BAAW,wBAAX,EAAqC;AACrE,wCAAkC,cAAc;AADqB,KAArC,CAAlC;AAGA,QAAM,wBAAwB,0BAAW,wBAAX,EAAqC;AACjE,wCAAkC,cAAc;AADiB,KAArC,CAA9B;AAGA,QAAM,6BAA6B,0BAAW,yBAAX,EAAsC;AACvE,yCAAmC,cAAc;AADsB,KAAtC,CAAnC;AAGA,QAAM,kCAAkC,0BAAW,yBAAX,EAAsC;AAC5E,yCAAmC,cAAc;AAD2B,KAAtC,CAAxC;AAGA,QAAM,8BAA8B,0BAAW,yBAAX,EAAsC;AACxE,yCAAmC,cAAc;AADuB,KAAtC,CAApC;;AAIA,QAAM,aAAa;AACjB,eAAU;AACR,kBAAU,IADF;AAER,aAAK,IAFG;AAGR,cAAM,IAHE;AAIR,eAAO,IAJC;AAKR,gBAAQ,IALA;AAMR,gBAAQ,IANA;AAOR,oBAAY,IAPJ;AAQR,kBAAU,IARF;AASR,iBAAS,IATD;AAUR,iBAAS,IAVD;AAWR,sBAAc,IAXN;AAYR,eAAO;AAZC;AADO,KAAnB;;AAiBA,WACE;AAAA;MAAA,EAAO,WAAU,kCAAjB;AACO,wBAAgB,GADvB;AAEO,gBAAQ,MAFf;AAGO,eAAO,UAHd;MAKE;AAAA;QAAA,EAAK,WAAU,mBAAf;QACE;AAAA;UAAA,EAAG,WAAU,wCAAb;UAAA;AAAA,SADF;QAEE;AAAA;UAAA,EAAI,WAAU,0BAAd;UAA0C,KAAK,QAAL,CAAc,uBAAd;AAA1C,SAFF;QAIE;AAAA;UAAA,EAAK,WAAU,YAAf;UACE;AAAA;YAAA,EAAQ,WAAU,0BAAlB,EAA6C,SAAS,KAAK,MAA3D;YAAoE,KAAK,QAAL,CAAc,aAAd;AAApE;AADF;AAJF,OALF;MAcE;AAAA;QAAA,EAAK,WAAU,iBAAf;QACE;AAAA;UAAA,EAAK,WAAU,aAAf;UACE;AAAA;YAAA,EAAO,WAAU,mBAAjB;YACE;AAAA;cAAA,EAAG,WAAW,oBAAd;AACG,yBAAS;AAAA,yBAAM,OAAK,SAAL,CAAe,SAAf,CAAN;AAAA,iBADZ;cAEG,KAAK,QAAL,CAAc,uBAAd;AAFH,aADF;YAKE;AAAA;cAAA,EAAG,WAAW,yBAAd;AACG,yBAAS;AAAA,yBAAM,OAAK,SAAL,CAAe,eAAf,CAAN;AAAA,iBADZ;cAEG,KAAK,QAAL,CAAc,6BAAd;AAFH,aALF;YASE;AAAA;cAAA,EAAG,WAAW,qBAAd;AACG,yBAAS;AAAA,yBAAM,OAAK,SAAL,CAAe,UAAf,CAAN;AAAA,iBADZ;cAEG,KAAK,QAAL,CAAc,wBAAd;AAFH,aATF;YAaE;AAAA;cAAA,EAAQ,WAAU,2BAAlB;cACE;AAAA;gBAAA,EAAM,SAAS,KAAK,gBAApB;gBACG,KAAK,OADR;gBAAA;AAAA;AADF;AAbF,WADF;UAoBE;AAAA;YAAA,EAAK,WAAU,mBAAf;YACE;AAAA;cAAA,EAAK,WAAU,mBAAf;cACE;AAAA;gBAAA,EAAK,WAAW,0BAAhB;gBACE;AAAA;kBAAA;kBACE;AAAA;oBAAA;oBACE;AAAA;sBAAA,EAAG,WAAU,qBAAb;sBAAA;AAAA,qBADF;oBAEE;AAAA;sBAAA;sBAAK,KAAK,QAAL,CAAc,6BAAd;AAAL,qBAFF;oBAGE;AAAA;sBAAA,EAAK,WAAU,OAAf;sBACE,yCAAO,MAAK,OAAZ;AACO,8BAAK,aADZ;AAEO,4BAAG,oBAFV;AAGO,+BAAM,MAHb;AAIO,wCAAgB,oBAJvB;AAKO,kCAAU,KAAK,iBALtB,GADF;sBAOE;AAAA;wBAAA,EAAO,SAAQ,oBAAf;wBACE;AAAA;0BAAA;0BAAA;AAAA,yBADF;wBAAA;wBACkB,KAAK,QAAL,CAAc,wBAAd,CADlB;wBAAA;wBAC4D;AAAA;0BAAA;0BAAA;AAAA,yBAD5D;wBAAA;wBACoF,KAAK,QAAL,CAAc,oBAAd;AADpF;AAPF,qBAHF;oBAcE;AAAA;sBAAA,EAAK,WAAU,OAAf;sBACE,yCAAO,MAAK,OAAZ;AACO,8BAAK,aADZ;AAEO,4BAAG,qBAFV;AAGO,+BAAM,OAHb;AAIO,wCAAgB,CAAC,oBAJxB;AAKO,kCAAU,KAAK,iBALtB,GADF;sBAOE;AAAA;wBAAA,EAAO,SAAQ,qBAAf;wBACE;AAAA;0BAAA;0BAAA;AAAA,yBADF;wBAAA;wBACwB,KAAK,QAAL,CAAc,wBAAd,CADxB;wBAAA;wBACkE;AAAA;0BAAA;0BAAA;AAAA,yBADlE;wBAAA;wBACkF,KAAK,QAAL,CAAc,oBAAd;AADlF;AAPF;AAdF;AADF;AADF,eADF;cA+BE;AAAA;gBAAA,EAAK,WAAW,+BAAhB;gBACE;AAAA;kBAAA;kBACE;AAAA;oBAAA;oBACE;AAAA;sBAAA,EAAG,WAAU,qBAAb;sBAAA;AAAA,qBADF;oBAEE;AAAA;sBAAA;sBAAK,KAAK,QAAL,CAAc,yBAAd;AAAL,qBAFF;oBAGE;AAAA;sBAAA,EAAK,WAAU,UAAf;sBACE,yCAAO,MAAK,UAAZ;AACO,4BAAG,cADV;AAEO,wCAAgB,qBAFvB;AAGO,kCAAU,KAAK,yBAHtB,GADF;sBAKE;AAAA;wBAAA,EAAO,SAAQ,cAAf;wBACG,KAAK,QAAL,CAAc,0BAAd;AADH;AALF;AAHF,mBADF;kBAcE;AAAA;oBAAA;oBACE;AAAA;sBAAA,EAAG,WAAU,qBAAb;sBAAA;AAAA,qBADF;oBAEE;AAAA;sBAAA;sBAAK,KAAK,QAAL,CAAc,+BAAd;AAAL,qBAFF;oBAGE;AAAA;sBAAA,EAAK,WAAU,UAAf;sBACE,yCAAO,MAAK,UAAZ;AACO,4BAAG,oBADV;AAEO,wCAAgB,4BAFvB;AAGO,kCAAU,KAAK,gCAHtB,GADF;sBAKE;AAAA;wBAAA,EAAO,SAAQ,oBAAf;wBACG,KAAK,QAAL,CAAc,+BAAd;AADH;AALF,qBAHF;oBAYE;AAAA;sBAAA,EAAK,WAAU,UAAf;sBACE,yCAAO,MAAK,UAAZ;AACO,4BAAG,uBADV;AAEO,wCAAgB,0BAFvB;AAGO,kCAAU,KAAK,0BAHtB,GADF;sBAKE;AAAA;wBAAA,EAAO,SAAQ,uBAAf;wBACG,KAAK,QAAL,CAAc,qCAAd;AADH;AALF,qBAZF;oBAqBE;AAAA;sBAAA,EAAG,WAAU,MAAb;sBAAqB,KAAK,QAAL,CAAc,yCAAd;AAArB;AArBF,mBAdF;kBAqCE;AAAA;oBAAA;oBACE;AAAA;sBAAA,EAAG,WAAU,qBAAb;sBAAA;AAAA,qBADF;oBAEE;AAAA;sBAAA;sBAAK,KAAK,QAAL,CAAc,yBAAd;AAAL,qBAFF;oBAGE;AAAA;sBAAA,EAAK,WAAU,UAAf;sBACE,yCAAO,MAAK,UAAZ;AACO,4BAAG,yBADV;AAEO,wCAAgB,8BAFvB;AAGO,kCAAU,KAAK,mCAHtB,GADF;sBAKE;AAAA;wBAAA,EAAO,SAAQ,yBAAf;wBACG,KAAK,QAAL,CAAc,2BAAd;AADH;AALF,qBAHF;oBAYE;AAAA;sBAAA,EAAG,WAAU,MAAb;sBAAqB,KAAK,QAAL,CAAc,+BAAd;AAArB;AAZF;AArCF;AADF,eA/BF;cAqFE;AAAA;gBAAA,EAAK,WAAW,2BAAhB;gBACE;AAAA;kBAAA;kBACE;AAAA;oBAAA;oBACE;AAAA;sBAAA,EAAG,WAAU,qBAAb;sBAAA;AAAA,qBADF;oBAEE;AAAA;sBAAA;sBAAK,KAAK,QAAL,CAAc,0BAAd;AAAL,qBAFF;oBAGE;AAAA;sBAAA,EAAI,WAAU,cAAd;sBACG,WADH;sBAEE;AAAA;wBAAA,EAAI,WAAU,uBAAd;wBACE;AAAA;0BAAA,EAAG,WAAU,WAAb,EAAyB,SAAS,KAAK,2BAAvC;0BACG,KAAK,QAAL,CAAc,iCAAd;AADH;AADF;AAFF;AAHF;AADF;AADF;AArFF;AADF;AApBF;AADF;AAdF,KADF;AAkJD,G;;;;;AA3RG,gB,CAWG,Y,GAAe;AACpB,QAAM,iBAAU,MAAV,CAAiB;AADH,C;kBAmRT,iBAAU,MAAV,CAAiB,gBAAjB,C","file":"Preferences.react.js","sourcesContent":["/*\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\n */\n\nimport { map } from 'lodash';\nimport React, { Component, PropTypes } from 'react';\nimport { Container } from 'flux/utils';\nimport classnames from 'classnames';\nimport Modal from 'react-modal';\n\nimport SharedContainer from '../../utils/SharedContainer'\n\nimport { KeyCodes, appName } from '../../constants/ActorAppConstants';\n\nimport PreferencesActionCreators from '../../actions/PreferencesActionCreators';\nimport { loggerToggle } from '../../actions/LoggerActionCreators';\n\nimport PreferencesStore from '../../stores/PreferencesStore';\n\nimport Session from './preferences/Session.react'\n\nclass PreferencesModal extends Component {\n  constructor(props) {\n    super(props);\n\n    const SharedActor = SharedContainer.get();\n    this.appName = SharedActor.appName ? SharedActor.appName : appName;\n    this.loggerToggleCount = 0;\n\n    this.onAppDetailClick = this.onAppDetailClick.bind(this);\n  }\n\n  static contextTypes = {\n    intl: PropTypes.object.isRequired\n  };\n\n  static getStores() {\n    return [PreferencesStore];\n  }\n\n  static calculateState() {\n    return {\n      isOpen: PreferencesStore.isOpen(),\n      isSendByEnterEnabled: PreferencesStore.isSendByEnterEnabled(),\n      isSoundEffectsEnabled: PreferencesStore.isSoundEffectsEnabled(),\n      isGroupsNotificationsEnabled: PreferencesStore.isGroupsNotificationsEnabled(),\n      isOnlyMentionNotifications: PreferencesStore.isOnlyMentionNotifications(),\n      isShowNotificationsTextEnabled: PreferencesStore.isShowNotificationsTextEnabled(),\n      sessions: PreferencesStore.getSessions(),\n      activeTab: PreferencesStore.getCurrentTab()\n    }\n  }\n\n  componentWillMount() {\n    document.addEventListener('keydown', this.onKeyDown, false);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.onKeyDown, false);\n  }\n\n  onAppDetailClick() {\n    this.loggerToggleCount++;\n    if (this.loggerToggleCount >= 4) {\n      loggerToggle();\n      this.loggerToggleCount = 0;\n    }\n  }\n\n  onClose = () => PreferencesActionCreators.hide();\n\n  onDone = () => {\n    const {\n      isSendByEnterEnabled,\n      isSoundEffectsEnabled,\n      isGroupsNotificationsEnabled,\n      isOnlyMentionNotifications,\n      isShowNotificationsTextEnabled\n    } = this.state;\n\n    PreferencesActionCreators.save({\n      isSendByEnterEnabled,\n      isSoundEffectsEnabled,\n      isGroupsNotificationsEnabled,\n      isOnlyMentionNotifications,\n      isShowNotificationsTextEnabled\n    });\n    this.onClose();\n  };\n\n  onKeyDown = event => {\n    if (event.keyCode === KeyCodes.ESC) {\n      event.preventDefault();\n      this.onClose();\n    }\n  };\n\n  changeSendByEnter = (event) => this.setState({ isSendByEnterEnabled: event.target.value === 'true' });\n  changeSoundEffectsEnabled = (event) => this.setState({ isSoundEffectsEnabled: event.target.checked });\n  changeGroupsNotificationsEnabled = (event) => this.setState({ isGroupsNotificationsEnabled: event.target.checked });\n  changeMentionNotifications = (event) => this.setState({ isOnlyMentionNotifications: event.target.checked });\n  changeIsShowNotificationTextEnabled = (event) => this.setState({ isShowNotificationsTextEnabled: event.target.checked });\n\n  onTerminateAllSessionsClick = () => PreferencesActionCreators.terminateAllSessions();\n\n  changeTab = (tab) => PreferencesActionCreators.changeTab(tab);\n\n  render() {\n    const {\n      isOpen,\n      activeTab,\n      isSendByEnterEnabled,\n      isSoundEffectsEnabled,\n      isGroupsNotificationsEnabled,\n      isOnlyMentionNotifications,\n      isShowNotificationsTextEnabled,\n      sessions\n    } = this.state;\n    const { intl } = this.context;\n\n    const sessionList = map(sessions, (session) => <Session {...session}/>);\n\n    const generalTabClassNames = classnames('preferences__tabs__tab', {\n      'preferences__tabs__tab--active': activeTab === 'GENERAL'\n    });\n    const notificationTabClassNames = classnames('preferences__tabs__tab', {\n      'preferences__tabs__tab--active': activeTab === 'NOTIFICATIONS'\n    });\n    const securityTabClassNames = classnames('preferences__tabs__tab', {\n      'preferences__tabs__tab--active': activeTab === 'SECURITY'\n    });\n    const generalTabContentClassName = classnames('preferences__list__item', {\n      'preferences__list__item--active': activeTab === 'GENERAL'\n    });\n    const notificationTabContentClassName = classnames('preferences__list__item', {\n      'preferences__list__item--active': activeTab === 'NOTIFICATIONS'\n    });\n    const securityTabContentClassName = classnames('preferences__list__item', {\n      'preferences__list__item--active': activeTab === 'SECURITY'\n    });\n\n    const modalStyle = {\n      content : {\n        position: null,\n        top: null,\n        left: null,\n        right: null,\n        bottom: null,\n        border: null,\n        background: null,\n        overflow: null,\n        outline: null,\n        padding: null,\n        borderRadius: null,\n        width: 760\n      }\n    };\n\n    return (\n      <Modal className=\"modal-new modal-new--preferences\"\n             closeTimeoutMS={150}\n             isOpen={isOpen}\n             style={modalStyle}>\n\n        <div className=\"modal-new__header\">\n          <i className=\"modal-new__header__icon material-icons\">settings</i>\n          <h3 className=\"modal-new__header__title\">{intl.messages['preferencesModalTitle']}</h3>\n\n          <div className=\"pull-right\">\n            <button className=\"button button--lightblue\" onClick={this.onDone}>{intl.messages['button.done']}</button>\n          </div>\n        </div>\n\n        <div className=\"modal-new__body\">\n          <div className=\"preferences\">\n            <aside className=\"preferences__tabs\">\n              <a className={generalTabClassNames}\n                 onClick={() => this.changeTab('GENERAL')}>\n                {intl.messages['preferencesGeneralTab']}\n              </a>\n              <a className={notificationTabClassNames}\n                 onClick={() => this.changeTab('NOTIFICATIONS')}>\n                {intl.messages['preferencesNotificationsTab']}\n              </a>\n              <a className={securityTabClassNames}\n                 onClick={() => this.changeTab('SECURITY')}>\n                {intl.messages['preferencesSecurityTab']}\n              </a>\n              <footer className=\"preferences__tabs__footer\">\n                <span onClick={this.onAppDetailClick}>\n                  {this.appName} v1.0.123\n                </span>\n              </footer>\n            </aside>\n            <div className=\"preferences__body\">\n              <div className=\"preferences__list\">\n                <div className={generalTabContentClassName}>\n                  <ul>\n                    <li>\n                      <i className=\"icon material-icons\">keyboard</i>\n                      <h4>{intl.messages['preferencesSendMessageTitle']}</h4>\n                      <div className=\"radio\">\n                        <input type=\"radio\"\n                               name=\"sendByEnter\"\n                               id=\"sendByEnterEnabled\"\n                               value=\"true\"\n                               defaultChecked={isSendByEnterEnabled}\n                               onChange={this.changeSendByEnter}/>\n                        <label htmlFor=\"sendByEnterEnabled\">\n                          <b>Enter</b> – {intl.messages['preferencesSendMessage']}, <b>Shift + Enter</b> – {intl.messages['preferencesNewLine']}\n                        </label>\n                      </div>\n                      <div className=\"radio\">\n                        <input type=\"radio\"\n                               name=\"sendByEnter\"\n                               id=\"sendByEnterDisabled\"\n                               value=\"false\"\n                               defaultChecked={!isSendByEnterEnabled}\n                               onChange={this.changeSendByEnter}/>\n                        <label htmlFor=\"sendByEnterDisabled\">\n                          <b>Cmd + Enter</b> – {intl.messages['preferencesSendMessage']}, <b>Enter</b> – {intl.messages['preferencesNewLine']}\n                        </label>\n                      </div>\n                    </li>\n                  </ul>\n                </div>\n                <div className={notificationTabContentClassName}>\n                  <ul>\n                    <li>\n                      <i className=\"icon material-icons\">music_note</i>\n                      <h4>{intl.messages['preferencesEffectsTitle']}</h4>\n                      <div className=\"checkbox\">\n                        <input type=\"checkbox\"\n                               id=\"soundEffects\"\n                               defaultChecked={isSoundEffectsEnabled}\n                               onChange={this.changeSoundEffectsEnabled}/>\n                        <label htmlFor=\"soundEffects\">\n                          {intl.messages['preferencesEnableEffects']}\n                        </label>\n                      </div>\n                    </li>\n                    <li>\n                      <i className=\"icon material-icons\">notifications</i>\n                      <h4>{intl.messages['preferencesNotificationsTitle']}</h4>\n                      <div className=\"checkbox\">\n                        <input type=\"checkbox\"\n                               id=\"groupNotifications\"\n                               defaultChecked={isGroupsNotificationsEnabled}\n                               onChange={this.changeGroupsNotificationsEnabled}/>\n                        <label htmlFor=\"groupNotifications\">\n                          {intl.messages['preferencesNotificationsGroup']}\n                        </label>\n                      </div>\n                      <div className=\"checkbox\">\n                        <input type=\"checkbox\"\n                               id=\"mentionsNotifications\"\n                               defaultChecked={isOnlyMentionNotifications}\n                               onChange={this.changeMentionNotifications}/>\n                        <label htmlFor=\"mentionsNotifications\">\n                          {intl.messages['preferencesNotificationsOnlyMention']}\n                        </label>\n                      </div>\n                      <p className=\"hint\">{intl.messages['preferencesNotificationsOnlyMentionHint']}</p>\n                    </li>\n                    <li>\n                      <i className=\"icon material-icons\">visibility</i>\n                      <h4>{intl.messages['preferencesPrivacyTitle']}</h4>\n                      <div className=\"checkbox\">\n                        <input type=\"checkbox\"\n                               id=\"notificationTextPreview\"\n                               defaultChecked={isShowNotificationsTextEnabled}\n                               onChange={this.changeIsShowNotificationTextEnabled}/>\n                        <label htmlFor=\"notificationTextPreview\">\n                          {intl.messages['preferencesMessagePreview']}\n                        </label>\n                      </div>\n                      <p className=\"hint\">{intl.messages['preferencesMessagePreviewHint']}</p>\n                    </li>\n                  </ul>\n                </div>\n                <div className={securityTabContentClassName}>\n                  <ul>\n                    <li>\n                      <i className=\"icon material-icons\">devices</i>\n                      <h4>{intl.messages['preferencesSessionsTitle']}</h4>\n                      <ul className=\"session-list\">\n                        {sessionList}\n                        <li className=\"session-list__session\">\n                          <a className=\"link--red\" onClick={this.onTerminateAllSessionsClick}>\n                            {intl.messages['preferencesSessionsTerminateAll']}\n                          </a>\n                        </li>\n                      </ul>\n                    </li>\n                  </ul>\n                </div>\n\n              </div>\n            </div>\n          </div>\n        </div>\n\n      </Modal>\n    );\n  }\n}\n\nexport default Container.create(PreferencesModal);\n"]}