{"version":3,"sources":["../../../src/components/modals/Preferences.react.js"],"names":[],"mappings":"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","file":"Preferences.react.js","sourcesContent":["/*\n * Copyright (C) 2016 Actor LLC. <https://actor.im>\n */\n\nimport { isFunction } from 'lodash';\nimport React, { Component } from 'react';\nimport { Container } from 'flux/utils';\nimport classnames from 'classnames';\nimport Modal from 'react-modal';\nimport { FormattedMessage } from 'react-intl';\nimport SharedContainer from '../../utils/SharedContainer'\nimport DelegateContainer from '../../utils/DelegateContainer';\nimport { appName, PreferencesTabTypes, AsyncActionStates } from '../../constants/ActorAppConstants';\n\nimport PreferencesActionCreators from '../../actions/PreferencesActionCreators';\n\nimport PreferencesStore from '../../stores/PreferencesStore';\n\nimport Checkbox from '../common/Checkbox.react';\nimport Session from './preferences/Session.react';\nimport BlockedUsers from './preferences/BlockedUsers.react';\n\nclass PreferencesModal extends Component {\n  static getStores() {\n    return [PreferencesStore];\n  }\n\n  static calculateState(prevState) {\n    return {\n      isSendByEnterEnabled: prevState ? prevState.isSendByEnterEnabled : PreferencesStore.isSendByEnterEnabled(),\n      isSoundEffectsEnabled: prevState ? prevState.isSoundEffectsEnabled : PreferencesStore.isSoundEffectsEnabled(),\n      isGroupsNotificationsEnabled: prevState ? prevState.isGroupsNotificationsEnabled : PreferencesStore.isGroupsNotificationsEnabled(),\n      isOnlyMentionNotifications: prevState ? prevState.isOnlyMentionNotifications : PreferencesStore.isOnlyMentionNotifications(),\n      isShowNotificationsTextEnabled: prevState ? prevState.isShowNotificationsTextEnabled : PreferencesStore.isShowNotificationsTextEnabled(),\n      isAnimationAutoPlayEnabled: prevState ? prevState.isAnimationAutoPlayEnabled : PreferencesStore.isAnimationAutoPlayEnabled(),\n      sessions: PreferencesStore.getSessions(),\n      activeTab: PreferencesStore.getCurrentTab(),\n      terminateState: PreferencesStore.getTerminateState()\n    }\n  }\n\n  constructor(props) {\n    super(props);\n\n    const SharedActor = SharedContainer.get();\n    this.appName = SharedActor.appName ? SharedActor.appName : appName;\n\n    this.handleClose = this.handleClose.bind(this);\n    this.handleSave = this.handleSave.bind(this);\n    this.handleChangeTab = this.handleChangeTab.bind(this);\n    this.toggleSendByEnter = this.toggleSendByEnter.bind(this);\n    this.changeSoundEffectsEnabled = this.changeSoundEffectsEnabled.bind(this);\n    this.changeGroupsNotificationsEnabled = this.changeGroupsNotificationsEnabled.bind(this);\n    this.changeMentionNotifications = this.changeMentionNotifications.bind(this);\n    this.changeIsShowNotificationTextEnabled = this.changeIsShowNotificationTextEnabled.bind(this);\n    this.changeIsAnimationAutoPlayEnabled = this.changeIsAnimationAutoPlayEnabled.bind(this);\n    this.handleTerminateAllSessionsClick = this.handleTerminateAllSessionsClick.bind(this);\n\n    this.components = this.getComponents();\n  }\n\n  getComponents() {\n    const { components } = DelegateContainer.get();\n\n    if (components) {\n      return {\n        About: isFunction(components.about) ? components.about : null\n      };\n    }\n\n    return {\n      About: null\n    };\n  }\n\n  handleClose() {\n    PreferencesActionCreators.hide();\n  }\n\n  handleSave() {\n    const {\n      isSendByEnterEnabled,\n      isSoundEffectsEnabled,\n      isGroupsNotificationsEnabled,\n      isOnlyMentionNotifications,\n      isShowNotificationsTextEnabled,\n      isAnimationAutoPlayEnabled\n    } = this.state;\n\n    PreferencesActionCreators.save({\n      isSendByEnterEnabled,\n      isSoundEffectsEnabled,\n      isGroupsNotificationsEnabled,\n      isOnlyMentionNotifications,\n      isShowNotificationsTextEnabled,\n      isAnimationAutoPlayEnabled\n    });\n    this.handleClose();\n  }\n\n  toggleSendByEnter(event) {\n    this.setState({ isSendByEnterEnabled: event.target.value === 'true' });\n  }\n\n  changeSoundEffectsEnabled(event) {\n    this.setState({ isSoundEffectsEnabled: event.target.checked });\n  }\n\n  changeGroupsNotificationsEnabled(event) {\n    this.setState({ isGroupsNotificationsEnabled: event.target.checked });\n  }\n\n  changeMentionNotifications(event) {\n    this.setState({ isOnlyMentionNotifications: event.target.checked });\n  }\n\n  changeIsShowNotificationTextEnabled(event) {\n    this.setState({ isShowNotificationsTextEnabled: event.target.checked });\n  }\n\n  changeIsAnimationAutoPlayEnabled(event) {\n    this.setState({ isAnimationAutoPlayEnabled: event.target.checked });\n  }\n\n  handleTerminateAllSessionsClick() {\n    PreferencesActionCreators.terminateAllSessions();\n  }\n\n  handleChangeTab(tab) {\n    PreferencesActionCreators.changeTab(tab);\n  }\n\n  renderAppAbout() {\n    const { About } = this.components;\n    if (!About) {\n      return null;\n    }\n\n    const { activeTab } = this.state;\n    const aboutTabClassNames = classnames('preferences__tabs__tab', {\n      'preferences__tabs__tab--active': activeTab ===  PreferencesTabTypes.ABOUT\n    });\n\n    return (\n      <a className={aboutTabClassNames} onClick={() => this.handleChangeTab(PreferencesTabTypes.ABOUT)}>\n        <FormattedMessage id=\"preferences.about.title\"/>\n      </a>\n    );\n  }\n\n  renderPreferencesSidebar() {\n    const { activeTab } = this.state;\n\n    const generalTabClassNames = classnames('preferences__tabs__tab', {\n      'preferences__tabs__tab--active': activeTab === PreferencesTabTypes.GENERAL\n    });\n    const notificationTabClassNames = classnames('preferences__tabs__tab', {\n      'preferences__tabs__tab--active': activeTab ===  PreferencesTabTypes.NOTIFICATIONS\n    });\n    const blockTabClassNames = classnames('preferences__tabs__tab', {\n      'preferences__tabs__tab--active': activeTab ===  PreferencesTabTypes.BLOCKED\n    });\n    const securityTabClassNames = classnames('preferences__tabs__tab', {\n      'preferences__tabs__tab--active': activeTab ===  PreferencesTabTypes.SECURITY\n    });\n\n    return (\n      <aside className=\"preferences__tabs\">\n        <a className={generalTabClassNames} onClick={() => this.handleChangeTab(PreferencesTabTypes.GENERAL)}>\n          <FormattedMessage id=\"preferences.general.title\"/>\n        </a>\n        <a className={notificationTabClassNames} onClick={() => this.handleChangeTab(PreferencesTabTypes.NOTIFICATIONS)}>\n          <FormattedMessage id=\"preferences.notifications.title\"/>\n        </a>\n        <a className={blockTabClassNames} onClick={() => this.handleChangeTab(PreferencesTabTypes.BLOCKED)}>\n          <FormattedMessage id=\"preferences.blocked.title\"/>\n        </a>\n        <a className={securityTabClassNames} onClick={() => this.handleChangeTab(PreferencesTabTypes.SECURITY)}>\n          <FormattedMessage id=\"preferences.security.title\"/>\n        </a>\n        {this.renderAppAbout()}\n      </aside>\n    );\n  }\n\n  renderGeneralTab() {\n    // FIXME: Sometimes radio buttons doesnt checked after changing tab;\n    const { isSendByEnterEnabled, isAnimationAutoPlayEnabled } = this.state;\n\n    return (\n      <div className=\"preferences__tabs__content\">\n        <ul>\n          <li>\n            <i className=\"icon material-icons\">keyboard</i>\n            <FormattedMessage id=\"preferences.general.send.title\" tagName=\"h4\"/>\n            <div className=\"radio\">\n              <input\n                type=\"radio\"\n                name=\"sendByEnter\"\n                id=\"sendByEnterEnabled\"\n                value=\"true\"\n                checked={isSendByEnterEnabled}\n                onChange={this.toggleSendByEnter}/>\n              <label htmlFor=\"sendByEnterEnabled\">\n                <b>Enter</b> – <FormattedMessage id=\"preferences.general.send.sendMessage\"/>,&nbsp;\n                <b>Shift + Enter</b> – <FormattedMessage id=\"preferences.general.send.newLine\"/>\n              </label>\n            </div>\n            <div className=\"radio\">\n              <input\n                type=\"radio\"\n                name=\"sendByEnter\"\n                id=\"sendByEnterDisabled\"\n                value=\"false\"\n                checked={!isSendByEnterEnabled}\n                onChange={this.toggleSendByEnter}/>\n              <label htmlFor=\"sendByEnterDisabled\">\n                <b>Cmd + Enter</b> – <FormattedMessage id=\"preferences.general.send.sendMessage\"/>,&nbsp;\n                <b>Enter</b> – <FormattedMessage id=\"preferences.general.send.newLine\"/>\n              </label>\n            </div>\n          </li>\n\n          <li>\n            <i className=\"icon material-icons\">wallpaper</i>\n            <FormattedMessage id=\"preferences.interface.title\" tagName=\"h4\"/>\n            <Checkbox\n              id=\"animationAutoPlayEnabled\"\n              name=\"animationAutoPlayEnabled\"\n              value={isAnimationAutoPlayEnabled}\n              label={<FormattedMessage id=\"preferences.interface.animation.title\" />}\n              onChange={this.changeIsAnimationAutoPlayEnabled}\n            />\n          </li>\n        </ul>\n      </div>\n    );\n  }\n\n  renderNotificationsTab() {\n    // FIXME: Checkboxes blinking on changing tabs\n    const {\n      isSoundEffectsEnabled,\n      isGroupsNotificationsEnabled,\n      isOnlyMentionNotifications,\n      isShowNotificationsTextEnabled\n    } = this.state;\n\n    return (\n      <div className=\"preferences__tabs__content\">\n        <ul>\n          <li>\n            <i className=\"icon material-icons\">music_note</i>\n            <FormattedMessage id=\"preferences.notifications.effects.title\" tagName=\"h4\"/>\n            <div className=\"checkbox\">\n              <input\n                type=\"checkbox\"\n                id=\"soundEffects\"\n                checked={isSoundEffectsEnabled}\n                onChange={this.changeSoundEffectsEnabled}/>\n              <label htmlFor=\"soundEffects\">\n                <FormattedMessage id=\"preferences.notifications.effects.enable\"/>\n              </label>\n            </div>\n          </li>\n          <li>\n            <i className=\"icon material-icons\">notifications</i>\n            <FormattedMessage id=\"preferences.notifications.notification.title\" tagName=\"h4\"/>\n            <div className=\"checkbox\">\n              <input\n                type=\"checkbox\"\n                id=\"groupNotifications\"\n                checked={isGroupsNotificationsEnabled}\n                onChange={this.changeGroupsNotificationsEnabled}/>\n              <label htmlFor=\"groupNotifications\">\n                <FormattedMessage id=\"preferences.notifications.notification.enable\"/>\n              </label>\n            </div>\n            <div className=\"checkbox\">\n              <input\n                type=\"checkbox\"\n                id=\"mentionsNotifications\"\n                checked={isOnlyMentionNotifications}\n                onChange={this.changeMentionNotifications}/>\n              <label htmlFor=\"mentionsNotifications\">\n                <FormattedMessage id=\"preferences.notifications.notification.onlyMentionEnable\"/>\n              </label>\n            </div>\n            <p className=\"hint\"><FormattedMessage id=\"preferences.notifications.notification.onlyMentionHint\"/></p>\n          </li>\n          <li>\n            <i className=\"icon material-icons\">visibility</i>\n            <FormattedMessage id=\"preferences.notifications.privacy.title\" tagName=\"h4\"/>\n            <div className=\"checkbox\">\n              <input\n                type=\"checkbox\"\n                id=\"notificationTextPreview\"\n                checked={isShowNotificationsTextEnabled}\n                onChange={this.changeIsShowNotificationTextEnabled}/>\n              <label htmlFor=\"notificationTextPreview\">\n                <FormattedMessage id=\"preferences.notifications.privacy.messagePreview\"/>\n              </label>\n            </div>\n            <p className=\"hint\"><FormattedMessage id=\"preferences.notifications.privacy.messagePreviewHint\"/></p>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n\n  renderSecurityTab() {\n    return (\n      <div className=\"preferences__tabs__content\">\n        <ul>\n          <li>\n            <i className=\"icon material-icons\">devices</i>\n            <FormattedMessage id=\"preferences.security.sessions.title\" tagName=\"h4\"/>\n            <ul className=\"session-list\">\n              {this.renderSessionList()}\n              <li className=\"session-list__session\">\n                <a className=\"link--red\" onClick={this.handleTerminateAllSessionsClick}>\n                  <FormattedMessage id=\"preferences.security.sessions.terminateAll\"/>\n                </a>\n              </li>\n            </ul>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n\n  renderSessionList() {\n    const { sessions, terminateState } = this.state;\n    return sessions.map((session, index) => {\n      return (\n        <Session\n          {...session}\n          key={`s${index}`}\n          terminateState={terminateState[session.id] || AsyncActionStates.PENDING}\n        />\n      );\n    });\n  }\n\n  renderAboutTab() {\n    const { About } = this.components;\n    if (!About) {\n      return null;\n    }\n\n    return <About/>\n  }\n\n  renderCurrentTab() {\n    const { activeTab } = this.state;\n    switch (activeTab) {\n      case PreferencesTabTypes.GENERAL:\n        return this.renderGeneralTab()\n      case PreferencesTabTypes.NOTIFICATIONS:\n        return this.renderNotificationsTab()\n      case PreferencesTabTypes.BLOCKED:\n        return <BlockedUsers/>\n      case PreferencesTabTypes.SECURITY:\n        return this.renderSecurityTab()\n      case PreferencesTabTypes.ABOUT:\n        return this.renderAboutTab();\n      default:\n        return null;\n    }\n  }\n\n  render() {\n    return (\n      <Modal\n        overlayClassName=\"modal-overlay\"\n        className=\"modal\"\n        onRequestClose={this.handleClose}\n        isOpen>\n\n        <div className=\"preferences\">\n          <div className=\"modal__content\">\n\n            <header className=\"modal__header\">\n              <i className=\"modal__header__icon material-icons\">settings</i>\n              <FormattedMessage id=\"preferences.title\" tagName=\"h1\"/>\n              <button className=\"button button--lightblue\" onClick={this.handleSave}>\n                <FormattedMessage id=\"button.done\"/>\n              </button>\n            </header>\n\n            <div className=\"modal__body\">\n              {this.renderPreferencesSidebar()}\n              <div className=\"preferences__body\">\n                {this.renderCurrentTab()}\n              </div>\n            </div>\n\n          </div>\n        </div>\n\n      </Modal>\n    );\n  }\n}\n\nexport default Container.create(PreferencesModal, { pure: false });\n"]}