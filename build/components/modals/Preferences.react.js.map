{"version":3,"sources":["../../../src/components/modals/Preferences.react.js"],"names":[],"mappings":"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","file":"Preferences.react.js","sourcesContent":["/*\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\n */\n\nimport { map } from 'lodash';\nimport React, { Component, PropTypes } from 'react';\nimport { Container } from 'flux/utils';\nimport classnames from 'classnames';\nimport Modal from 'react-modal';\n\nimport { KeyCodes } from '../../constants/ActorAppConstants';\n\nimport PreferencesActionCreators from '../../actions/PreferencesActionCreators';\n\nimport PreferencesStore from '../../stores/PreferencesStore';\n\nimport Session from './preferences/Session.react'\n\nclass PreferencesModal extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  static contextTypes = {\n    intl: PropTypes.object\n  };\n\n  static getStores = () => [PreferencesStore];\n\n  static calculateState() {\n    return {\n      isOpen: PreferencesStore.isOpen(),\n      isSendByEnterEnabled: PreferencesStore.isSendByEnterEnabled(),\n      isSoundEffectsEnabled: PreferencesStore.isSoundEffectsEnabled(),\n      isGroupsNotificationsEnabled: PreferencesStore.isGroupsNotificationsEnabled(),\n      isOnlyMentionNotifications: PreferencesStore.isOnlyMentionNotifications(),\n      isShowNotificationsTextEnabled: PreferencesStore.isShowNotificationsTextEnabled(),\n      sessions: PreferencesStore.getSessions(),\n      activeTab: PreferencesStore.getCurrentTab()\n    }\n  };\n\n  componentWillMount() {\n    document.addEventListener('keydown', this.onKeyDown, false);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.onKeyDown, false);\n  }\n\n  onClose = () => PreferencesActionCreators.hide();\n\n  onDone = () => {\n    const {\n      isSendByEnterEnabled,\n      isSoundEffectsEnabled,\n      isGroupsNotificationsEnabled,\n      isOnlyMentionNotifications,\n      isShowNotificationsTextEnabled\n    } = this.state;\n\n    PreferencesActionCreators.save({\n      isSendByEnterEnabled,\n      isSoundEffectsEnabled,\n      isGroupsNotificationsEnabled,\n      isOnlyMentionNotifications,\n      isShowNotificationsTextEnabled\n    });\n    this.onClose();\n  };\n\n  onKeyDown = event => {\n    if (event.keyCode === KeyCodes.ESC) {\n      event.preventDefault();\n      this.onClose();\n    }\n  };\n\n  changeSendByEnter = (event) => this.setState({isSendByEnterEnabled: event.target.value === 'true'});\n  changeSoundEffectsEnabled = (event) => this.setState({isSoundEffectsEnabled: event.target.checked});\n  changeGroupsNotificationsEnabled = (event) => this.setState({isGroupsNotificationsEnabled: event.target.checked});\n  changeMentionNotifications = (event) => this.setState({isOnlyMentionNotifications: event.target.checked});\n  changeIsShowNotificationTextEnabled = (event) => this.setState({isShowNotificationsTextEnabled: event.target.checked});\n\n  onTerminateAllSessionsClick = () => PreferencesActionCreators.terminateAllSessions();\n\n  changeTab = (tab) => PreferencesActionCreators.changeTab(tab);\n\n  render() {\n    const {\n      isOpen,\n      activeTab,\n      isSendByEnterEnabled,\n      isSoundEffectsEnabled,\n      isGroupsNotificationsEnabled,\n      isOnlyMentionNotifications,\n      isShowNotificationsTextEnabled,\n      sessions\n    } = this.state;\n    const { intl } = this.context;\n\n    const sessionList = map(sessions, (session) => <Session {...session}/>);\n\n    const generalTabClassNames = classnames('preferences__tabs__tab', {\n      'preferences__tabs__tab--active': activeTab === 'GENERAL'\n    });\n    const notificationTabClassNames = classnames('preferences__tabs__tab', {\n      'preferences__tabs__tab--active': activeTab === 'NOTIFICATIONS'\n    });\n    const securityTabClassNames = classnames('preferences__tabs__tab', {\n      'preferences__tabs__tab--active': activeTab === 'SECURITY'\n    });\n    const generalTabContentClassName = classnames('preferences__list__item', {\n      'preferences__list__item--active': activeTab === 'GENERAL'\n    });\n    const notificationTabContentClassName = classnames('preferences__list__item', {\n      'preferences__list__item--active': activeTab === 'NOTIFICATIONS'\n    });\n    const securityTabContentClassName = classnames('preferences__list__item', {\n      'preferences__list__item--active': activeTab === 'SECURITY'\n    });\n\n    const modalStyle = {\n      content : {\n        position: null,\n        top: null,\n        left: null,\n        right: null,\n        bottom: null,\n        border: null,\n        background: null,\n        overflow: null,\n        outline: null,\n        padding: null,\n        borderRadius: null,\n        width: 760\n      }\n    };\n\n    return (\n      <Modal className=\"modal-new modal-new--preferences\"\n             closeTimeoutMS={150}\n             isOpen={isOpen}\n             style={modalStyle}>\n\n        <div className=\"modal-new__header\">\n          <i className=\"modal-new__header__icon material-icons\">settings</i>\n          <h3 className=\"modal-new__header__title\">{intl.messages['preferencesModalTitle']}</h3>\n\n          <div className=\"pull-right\">\n            <button className=\"button button--lightblue\" onClick={this.onDone}>{intl.messages['button.done']}</button>\n          </div>\n        </div>\n\n        <div className=\"modal-new__body\">\n          <div className=\"preferences\">\n            <aside className=\"preferences__tabs\">\n              <a className={generalTabClassNames}\n                 onClick={() => this.changeTab('GENERAL')}>\n                {intl.messages['preferencesGeneralTab']}\n              </a>\n              <a className={notificationTabClassNames}\n                 onClick={() => this.changeTab('NOTIFICATIONS')}>\n                {intl.messages['preferencesNotificationsTab']}\n              </a>\n              <a className={securityTabClassNames}\n                 onClick={() => this.changeTab('SECURITY')}>\n                {intl.messages['preferencesSecurityTab']}\n              </a>\n            </aside>\n            <div className=\"preferences__body\">\n              <div className=\"preferences__list\">\n                <div className={generalTabContentClassName}>\n                  <ul>\n                    <li>\n                      <i className=\"icon material-icons\">keyboard</i>\n                      <h4>{intl.messages['preferencesSendMessageTitle']}</h4>\n                      <div className=\"radio\">\n                        <input type=\"radio\"\n                               name=\"sendByEnter\"\n                               id=\"sendByEnterEnabled\"\n                               value=\"true\"\n                               defaultChecked={isSendByEnterEnabled}\n                               onChange={this.changeSendByEnter}/>\n                        <label htmlFor=\"sendByEnterEnabled\">\n                          <b>Enter</b> – {intl.messages['preferencesSendMessage']}, <b>Shift + Enter</b> – {intl.messages['preferencesNewLine']}\n                        </label>\n                      </div>\n                      <div className=\"radio\">\n                        <input type=\"radio\"\n                               name=\"sendByEnter\"\n                               id=\"sendByEnterDisabled\"\n                               value=\"false\"\n                               defaultChecked={!isSendByEnterEnabled}\n                               onChange={this.changeSendByEnter}/>\n                        <label htmlFor=\"sendByEnterDisabled\">\n                          <b>Cmd + Enter</b> – {intl.messages['preferencesSendMessage']}, <b>Enter</b> – {intl.messages['preferencesNewLine']}\n                        </label>\n                      </div>\n                    </li>\n                  </ul>\n                </div>\n                <div className={notificationTabContentClassName}>\n                  <ul>\n                    <li>\n                      <i className=\"icon material-icons\">music_note</i>\n                      <h4>{intl.messages['preferencesEffectsTitle']}</h4>\n                      <div className=\"checkbox\">\n                        <input type=\"checkbox\"\n                               id=\"soundEffects\"\n                               defaultChecked={isSoundEffectsEnabled}\n                               onChange={this.changeSoundEffectsEnabled}/>\n                        <label htmlFor=\"soundEffects\">\n                          {intl.messages['preferencesEnableEffects']}\n                        </label>\n                      </div>\n                    </li>\n                    <li>\n                      <i className=\"icon material-icons\">notifications</i>\n                      <h4>{intl.messages['preferencesNotificationsTitle']}</h4>\n                      <div className=\"checkbox\">\n                        <input type=\"checkbox\"\n                               id=\"groupNotifications\"\n                               defaultChecked={isGroupsNotificationsEnabled}\n                               onChange={this.changeGroupsNotificationsEnabled}/>\n                        <label htmlFor=\"groupNotifications\">\n                          {intl.messages['preferencesNotificationsGroup']}\n                        </label>\n                      </div>\n                      <div className=\"checkbox\">\n                        <input type=\"checkbox\"\n                               id=\"mentionsNotifications\"\n                               defaultChecked={isOnlyMentionNotifications}\n                               onChange={this.changeMentionNotifications}/>\n                        <label htmlFor=\"mentionsNotifications\">\n                          {intl.messages['preferencesNotificationsOnlyMention']}\n                        </label>\n                      </div>\n                      <p className=\"hint\">{intl.messages['preferencesNotificationsOnlyMentionHint']}</p>\n                    </li>\n                    <li>\n                      <i className=\"icon material-icons\">visibility</i>\n                      <h4>{intl.messages['preferencesPrivacyTitle']}</h4>\n                      <div className=\"checkbox\">\n                        <input type=\"checkbox\"\n                               id=\"notificationTextPreview\"\n                               defaultChecked={isShowNotificationsTextEnabled}\n                               onChange={this.changeIsShowNotificationTextEnabled}/>\n                        <label htmlFor=\"notificationTextPreview\">\n                          {intl.messages['preferencesMessagePreview']}\n                        </label>\n                      </div>\n                      <p className=\"hint\">{intl.messages['preferencesMessagePreviewHint']}</p>\n                    </li>\n                  </ul>\n                </div>\n                <div className={securityTabContentClassName}>\n                  <ul>\n                    <li>\n                      <i className=\"icon material-icons\">devices</i>\n                      <h4>{intl.messages['preferencesSessionsTitle']}</h4>\n                      <ul className=\"session-list\">\n                        {sessionList}\n                        <li className=\"session-list__session\">\n                          <a className=\"link--red\" onClick={this.onTerminateAllSessionsClick}>\n                            {intl.messages['preferencesSessionsTerminateAll']}\n                          </a>\n                        </li>\n                      </ul>\n                    </li>\n                  </ul>\n                </div>\n\n              </div>\n            </div>\n          </div>\n        </div>\n\n      </Modal>\n    );\n  }\n}\n\nexport default Container.create(PreferencesModal);\n"]}