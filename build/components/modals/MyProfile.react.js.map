{"version":3,"sources":["../../../src/components/modals/MyProfile.react.js"],"names":[],"mappings":"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","file":"MyProfile.react.js","sourcesContent":["/*\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\n */\n\nimport React, { Component, PropTypes } from 'react';\nimport { findDOMNode } from 'react-dom';\nimport { Container } from 'flux/utils';\nimport Modal from 'react-modal';\n\nimport { KeyCodes } from '../../constants/ActorAppConstants';\n\nimport MyProfileActions from '../../actions/MyProfileActionCreators';\nimport CropAvatarActionCreators from '../../actions/CropAvatarActionCreators';\n\nimport MyProfileStore from '../../stores/MyProfileStore';\nimport CropAvatarStore from '../../stores/CropAvatarStore';\n\nimport AvatarItem from '../common/AvatarItem.react';\nimport CropAvatarModal from './CropAvatar.react';\n\nimport TextField from '../common/TextField.react';\n\nlet currentName = '',\n    currentNick = '',\n    currentAbout = '';\n\nclass MyProfile extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  static getStores() {\n    return [MyProfileStore, CropAvatarStore];\n  }\n\n  static calculateState() {\n    return {\n      profile: MyProfileStore.getProfile(),\n      name: MyProfileStore.getName(),\n      nick: MyProfileStore.getNick(),\n      about: MyProfileStore.getAbout(),\n      isOpen: MyProfileStore.isModalOpen(),\n      isCropModalOpen: CropAvatarStore.isOpen()\n    };\n  }\n\n  static contextTypes = {\n    intl: PropTypes.object\n  };\n\n  componentWillMount() {\n    const { name, nick, about } = this.state;\n\n    currentName = name;\n    currentNick = nick;\n    currentAbout = about;\n\n    this.setListeners();\n  }\n\n  componentWillUnmount() {\n    this.removeListeners();\n  }\n\n  componentWillUpdate(nextProps, nextState) {\n    if (nextState.isOpen) {\n      if (nextState.isCropModalOpen) {\n        this.removeListeners();\n      } else {\n        this.setListeners();\n      }\n    }\n  }\n\n  setListeners = () => document.addEventListener('keydown', this.onKeyDown, false);\n  removeListeners = () => document.removeEventListener('keydown', this.onKeyDown, false);\n\n  handleClose = () => MyProfileActions.hide();\n\n  onKeyDown = event => {\n    if (event.keyCode === KeyCodes.ESC) {\n      event.preventDefault();\n      this.handleClose();\n    }\n  };\n\n  handleNameChange = event => this.setState({ name: event.target.value });\n  handleNicknameChange = event => this.setState({ nick: event.target.value });\n  handleAboutChange = event => this.setState({ about: event.target.value });\n\n  isProfileChanged = () => {\n    const { name, nick, about } = this.state;\n    return name !== currentName || nick !== currentNick || about !== currentAbout\n  };\n\n  handleSave = () => {\n    const { nick, name, about } = this.state;\n\n    if (name !== currentName) MyProfileActions.saveName(name);\n    if (nick !== currentNick) MyProfileActions.saveNickname(nick);\n    if (about !== currentAbout) MyProfileActions.editMyAbout(about);\n\n    this.handleClose();\n  };\n\n  onProfilePictureInputChange = () => {\n    const imageInput = findDOMNode(this.refs.imageInput);\n    const imageForm = findDOMNode(this.refs.imageForm);\n    const file = imageInput.files[0];\n\n    let reader = new FileReader();\n    reader.onload = (event) => {\n      CropAvatarActionCreators.show(event.target.result);\n      imageForm.reset();\n    };\n    reader.readAsDataURL(file);\n  };\n\n  handleChangeAvatarClick = () => {\n    const imageInput = findDOMNode(this.refs.imageInput);\n    imageInput.click()\n  };\n\n  onProfilePictureRemove = () => MyProfileActions.removeMyAvatar();\n\n  changeMyAvatar = (croppedImage) => MyProfileActions.changeMyAvatar(croppedImage);\n\n  render() {\n    const { isOpen, isCropModalOpen, profile, nick, name, about } = this.state;\n    const { intl } = this.context;\n    const isProfileChanged = this.isProfileChanged();\n\n    const cropAvatar = isCropModalOpen ? <CropAvatarModal onCropFinish={this.changeMyAvatar}/> : null;\n\n    const modalStyle = {\n      content : {\n        position: null,\n        top: null,\n        left: null,\n        right: null,\n        bottom: null,\n        border: null,\n        background: null,\n        overflow: null,\n        outline: null,\n        padding: null,\n        borderRadius: null,\n        width: 440\n      }\n    };\n\n    if (profile !== null && isOpen) {\n      return (\n        <Modal className=\"modal-new modal-new--profile\"\n               closeTimeoutMS={150}\n               isOpen={isOpen}\n               style={modalStyle}>\n\n          <header className=\"modal-new__header\">\n            <a className=\"modal-new__header__icon material-icons\">person</a>\n            <h3 className=\"modal-new__header__title\">{intl.messages['modal.profile.title']}</h3>\n            <div className=\"pull-right\">\n              {\n                isProfileChanged\n                  ? <button className=\"button button--lightblue\" onClick={this.handleSave}>{intl.messages['button.save']}</button>\n                  : <button className=\"button\" onClick={this.handleClose}>{intl.messages['button.close']}</button>\n              }\n            </div>\n          </header>\n          <div className=\"modal-new__body row\">\n            <div className=\"col-xs\">\n              <div className=\"name\">\n                <TextField className=\"input__material--wide\"\n                           floatingLabel={intl.messages['modal.profile.name']}\n                           onChange={this.handleNameChange}\n                           type=\"text\"\n                           value={name}/>\n              </div>\n              <div className=\"nick\">\n                <TextField className=\"input__material--wide\"\n                           floatingLabel={intl.messages['modal.profile.nick']}\n                           onChange={this.handleNicknameChange}\n                           type=\"text\"\n                           value={nick}/>\n              </div>\n              {\n                profile.phones[0]\n                  ? <div className=\"phone\">\n                      <TextField className=\"input__material--wide\"\n                                 floatingLabel={intl.messages['modal.profile.phone']}\n                                 disabled\n                                 type=\"tel\"\n                                 value={(profile.phones[0] || {}).number}/>\n                    </div>\n                  : null\n              }\n              {\n                profile.emails[0]\n                  ? <div className=\"phone\">\n                      <TextField className=\"input__material--wide\"\n                                 floatingLabel={intl.messages['modal.profile.email']}\n                                 disabled\n                                 type=\"email\"\n                                 value={(profile.emails[0] || {}).email}/>\n                    </div>\n                  : null\n              }\n              <div className=\"about\">\n                <label htmlFor=\"about\">{intl.messages['modal.profile.about']}</label>\n                <textarea className=\"textarea\"\n                          id=\"about\"\n                          onChange={this.handleAboutChange}\n                          value={about}/>\n              </div>\n            </div>\n            <div className=\"profile-picture text-center\">\n              <div className=\"profile-picture__changer\">\n                <AvatarItem image={profile.bigAvatar}\n                            placeholder={profile.placeholder}\n                            size=\"big\"\n                            title={profile.name}/>\n                <a onClick={this.handleChangeAvatarClick}>\n                  <span>{intl.messages['modal.profile.avatarChange']}</span>\n                </a>\n              </div>\n              {\n                profile.bigAvatar\n                  ? <div className=\"profile-picture__controls\">\n                      <a onClick={this.onProfilePictureRemove}>{intl.messages['modal.profile.avatarRemove']}</a>\n                    </div>\n                  : null\n              }\n              <form className=\"hide\" ref=\"imageForm\">\n                <input onChange={this.onProfilePictureInputChange} ref=\"imageInput\" type=\"file\"/>\n              </form>\n            </div>\n          </div>\n\n          {cropAvatar}\n        </Modal>\n      );\n    } else {\n      return null;\n    }\n  }\n}\n\nexport default Container.create(MyProfile, { pure: false });\n"]}