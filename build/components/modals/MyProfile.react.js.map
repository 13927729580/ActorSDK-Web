{"version":3,"sources":["../../../src/components/modals/MyProfile.react.js"],"names":[],"mappings":"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","file":"MyProfile.react.js","sourcesContent":["/*\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\n */\n\nimport React, { Component, PropTypes } from 'react';\nimport { findDOMNode } from 'react-dom';\nimport { Container } from 'flux/utils';\nimport Modal from 'react-modal';\n\nimport { KeyCodes } from '../../constants/ActorAppConstants';\n\nimport MyProfileActions from '../../actions/MyProfileActionCreators';\nimport CropAvatarActionCreators from '../../actions/CropAvatarActionCreators';\n\nimport MyProfileStore from '../../stores/MyProfileStore';\nimport CropAvatarStore from '../../stores/CropAvatarStore';\n\nimport AvatarItem from '../common/AvatarItem.react';\nimport CropAvatarModal from './CropAvatar.react';\n\nimport TextField from '../common/TextField.react';\n\nlet currentName = '',\n    currentNick = '',\n    currentAbout = '';\n\nclass MyProfile extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  static getStores = () => [MyProfileStore, CropAvatarStore];\n\n  static calculateState() {\n    return {\n      profile: MyProfileStore.getProfile(),\n      name: MyProfileStore.getName(),\n      nick: MyProfileStore.getNick(),\n      about: MyProfileStore.getAbout(),\n      isOpen: MyProfileStore.isModalOpen(),\n      isCropModalOpen: CropAvatarStore.isOpen()\n    };\n  }\n\n  static contextTypes = {\n    intl: PropTypes.object\n  };\n\n  componentWillMount() {\n    const { name, nick, about } = this.state;\n\n    currentName = name;\n    currentNick = nick;\n    currentAbout = about;\n\n    this.setListeners();\n  }\n\n  componentWillUnmount() {\n    this.removeListeners();\n  }\n\n  componentWillUpdate(nextProps, nextState) {\n    if (nextState.isOpen) {\n      if (nextState.isCropModalOpen) {\n        this.removeListeners();\n      } else {\n        this.setListeners();\n      }\n    }\n  }\n\n  setListeners = () => document.addEventListener('keydown', this.onKeyDown, false);\n  removeListeners = () => document.removeEventListener('keydown', this.onKeyDown, false);\n\n  handleClose = () => MyProfileActions.hide();\n\n  onKeyDown = event => {\n    if (event.keyCode === KeyCodes.ESC) {\n      event.preventDefault();\n      this.handleClose();\n    }\n  };\n\n  handleNameChange = event => this.setState({name: event.target.value});\n  handleNicknameChange = event => this.setState({nick: event.target.value});\n  handleAboutChange = event => this.setState({about: event.target.value});\n\n  isProfileChanged = () => {\n    const { name, nick, about } = this.state;\n    return name !== currentName || nick !== currentNick || about !== currentAbout\n  };\n\n  handleSave = () => {\n    const { nick, name, about } = this.state;\n\n    if (name !== currentName) MyProfileActions.saveName(name);\n    if (nick !== currentNick) MyProfileActions.saveNickname(nick);\n    if (about !== currentAbout) MyProfileActions.editMyAbout(about);\n\n    this.handleClose();\n  };\n\n  onProfilePictureInputChange = () => {\n    const imageInput = findDOMNode(this.refs.imageInput);\n    const imageForm = findDOMNode(this.refs.imageForm);\n    const file = imageInput.files[0];\n\n    let reader = new FileReader();\n    reader.onload = (event) => {\n      CropAvatarActionCreators.show(event.target.result);\n      imageForm.reset();\n    };\n    reader.readAsDataURL(file);\n  };\n\n  handleChangeAvatarClick = () => {\n    const imageInput = findDOMNode(this.refs.imageInput);\n    imageInput.click()\n  };\n\n  onProfilePictureRemove = () => MyProfileActions.removeMyAvatar();\n\n  changeMyAvatar = (croppedImage) => MyProfileActions.changeMyAvatar(croppedImage);\n\n  render() {\n    const { isOpen, isCropModalOpen, profile, nick, name, about } = this.state;\n    const { intl } = this.context;\n    const isProfileChanged = this.isProfileChanged();\n\n    const cropAvatar = isCropModalOpen ? <CropAvatarModal onCropFinish={this.changeMyAvatar}/> : null;\n\n    const modalStyle = {\n      content : {\n        position: null,\n        top: null,\n        left: null,\n        right: null,\n        bottom: null,\n        border: null,\n        background: null,\n        overflow: null,\n        outline: null,\n        padding: null,\n        borderRadius: null,\n        width: 440\n      }\n    };\n\n    if (profile !== null && isOpen) {\n      return (\n        <Modal className=\"modal-new modal-new--profile\"\n               closeTimeoutMS={150}\n               isOpen={isOpen}\n               style={modalStyle}>\n\n          <header className=\"modal-new__header\">\n            <a className=\"modal-new__header__icon material-icons\">person</a>\n            <h3 className=\"modal-new__header__title\">{intl.messages['modal.profile.title']}</h3>\n            <div className=\"pull-right\">\n              {\n                isProfileChanged\n                  ? <button className=\"button button--lightblue\" onClick={this.handleSave}>{intl.messages['button.save']}</button>\n                  : <button className=\"button\" onClick={this.handleClose}>{intl.messages['button.close']}</button>\n              }\n            </div>\n          </header>\n          <div className=\"modal-new__body row\">\n            <div className=\"col-xs\">\n              <div className=\"name\">\n                <TextField className=\"input__material--wide\"\n                           floatingLabel={intl.messages['modal.profile.name']}\n                           onChange={this.handleNameChange}\n                           type=\"text\"\n                           value={name}/>\n              </div>\n              <div className=\"nick\">\n                <TextField className=\"input__material--wide\"\n                           floatingLabel={intl.messages['modal.profile.nick']}\n                           onChange={this.handleNicknameChange}\n                           type=\"text\"\n                           value={nick}/>\n              </div>\n              {\n                profile.phones[0]\n                  ? <div className=\"phone\">\n                      <TextField className=\"input__material--wide\"\n                                 floatingLabel={intl.messages['modal.profile.phone']}\n                                 disabled\n                                 type=\"tel\"\n                                 value={(profile.phones[0] || {}).number}/>\n                    </div>\n                  : null\n              }\n              {\n                profile.emails[0]\n                  ? <div className=\"phone\">\n                      <TextField className=\"input__material--wide\"\n                                 floatingLabel={intl.messages['modal.profile.email']}\n                                 disabled\n                                 type=\"email\"\n                                 value={(profile.emails[0] || {}).email}/>\n                    </div>\n                  : null\n              }\n              <div className=\"about\">\n                <label htmlFor=\"about\">{intl.messages['modal.profile.about']}</label>\n                <textarea className=\"textarea\"\n                          id=\"about\"\n                          onChange={this.handleAboutChange}\n                          value={about}/>\n              </div>\n            </div>\n            <div className=\"profile-picture text-center\">\n              <div className=\"profile-picture__changer\">\n                <AvatarItem image={profile.bigAvatar}\n                            placeholder={profile.placeholder}\n                            size=\"big\"\n                            title={profile.name}/>\n                <a onClick={this.handleChangeAvatarClick}>\n                  <span>{intl.messages['modal.profile.avatarChange']}</span>\n                </a>\n              </div>\n              {\n                profile.bigAvatar\n                  ? <div className=\"profile-picture__controls\">\n                      <a onClick={this.onProfilePictureRemove}>{intl.messages['modal.profile.avatarRemove']}</a>\n                    </div>\n                  : null\n              }\n              <form className=\"hide\" ref=\"imageForm\">\n                <input onChange={this.onProfilePictureInputChange} ref=\"imageInput\" type=\"file\"/>\n              </form>\n            </div>\n          </div>\n\n          {cropAvatar}\n        </Modal>\n      );\n    } else {\n      return null;\n    }\n  }\n}\n\nexport default Container.create(MyProfile, {pure: false});\n"]}