{"version":3,"sources":["../../../src/components/modals/Groups.react.js"],"names":[],"mappings":"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","file":"Groups.react.js","sourcesContent":["/*\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\n */\n\nimport React, { Component, PropTypes } from 'react';\nimport Modal from 'react-modal';\nimport { findDOMNode } from 'react-dom';\nimport { Container } from 'flux/utils';\nimport { FormattedMessage, FormattedHTMLMessage } from 'react-intl';\nimport history from '../../utils/history';\nimport PeerUtils from '../../utils/PeerUtils';\nimport fuzzaldrin from 'fuzzaldrin';\n\nimport ModalCloseButton from './ModalCloseButton.react';\nimport { KeyCodes } from '../../constants/ActorAppConstants';\n\nimport GroupListActionCreators from '../../actions/GroupListActionCreators'\n\nimport GroupListStore from '../../stores/GroupListStore';\n\nimport Group from './groups/Group.react';\n\nclass GroupList extends Component {\n  static contextTypes = {\n    intl: PropTypes.object\n  };\n\n  static getStores() {\n    return [GroupListStore];\n  }\n\n  static calculateState(prevState) {\n    return {\n      ...prevState,\n      selectedIndex: 0,\n      list: GroupListStore.getState()\n    };\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      query: null,\n      selectedIndex: 0\n    }\n\n    this.handleClose = this.handleClose.bind(this);\n    this.handleSearchChange = this.handleSearchChange.bind(this);\n    this.handleGroupSelect = this.handleGroupSelect.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleScroll = this.handleScroll.bind(this);\n  }\n\n  componentDidMount() {\n    this.setFocus();\n    document.addEventListener('keydown', this.handleKeyDown, false);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.handleKeyDown, false);\n  }\n\n  setFocus() {\n    findDOMNode(this.refs.search).focus()\n  }\n\n  handleClose() {\n    GroupListActionCreators.close();\n  }\n\n  handleSearchChange(event) {\n    const query = event.target.value;\n    this.setState({ query });\n  }\n\n  handleGroupSelect(peer) {\n    const peerStr = PeerUtils.peerToString(peer);\n    history.push(`/im/${peerStr}`);\n    this.handleClose()\n  }\n\n  handleKeyDown(event) {\n    const { selectedIndex } = this.state;\n    const results = this.getList();\n    const offset = 18;\n    let index = selectedIndex;\n\n    const selectNext = () => {\n      if (index < results.length - 1) {\n        index += 1;\n      } else if (index === results.length - 1) {\n        index = 0;\n      }\n\n      this.setState({ selectedIndex: index });\n\n      const scrollContainerNode = findDOMNode(this.refs.results);\n      const selectedNode = findDOMNode(this.refs.selected);\n      const scrollContainerNodeRect = scrollContainerNode.getBoundingClientRect();\n      const selectedNodeRect = selectedNode.getBoundingClientRect();\n\n      if ((scrollContainerNodeRect.top + scrollContainerNodeRect.height) < (selectedNodeRect.top + selectedNodeRect.height)) {\n        this.handleScroll(scrollContainerNode.scrollTop + (selectedNodeRect.top + selectedNodeRect.height) - (scrollContainerNodeRect.top + scrollContainerNodeRect.height) + offset);\n      } else if (scrollContainerNodeRect.top > selectedNodeRect.top) {\n        this.handleScroll(0);\n      }\n    };\n    const selectPrev = () => {\n      if (index > 0) {\n        index -= 1;\n      } else if (index === 0) {\n        index = results.length - 1;\n      }\n\n      this.setState({ selectedIndex: index });\n\n      const scrollContainerNode = findDOMNode(this.refs.results);\n      const selectedNode = findDOMNode(this.refs.selected);\n      const scrollContainerNodeRect = scrollContainerNode.getBoundingClientRect();\n      const selectedNodeRect = selectedNode.getBoundingClientRect();\n\n      if (scrollContainerNodeRect.top > selectedNodeRect.top) {\n        this.handleScroll(scrollContainerNode.scrollTop + selectedNodeRect.top - scrollContainerNodeRect.top - offset);\n      } else if (selectedNodeRect.top > (scrollContainerNodeRect.top + scrollContainerNodeRect.height)) {\n       this.handleScroll(scrollContainerNode.scrollHeight);\n      }\n    };\n\n    switch (event.keyCode) {\n      case KeyCodes.ENTER:\n        event.stopPropagation();\n        event.preventDefault();\n        this.handleGroupSelect(results[selectedIndex].peerInfo.peer);\n        break;\n\n      case KeyCodes.ARROW_UP:\n        event.stopPropagation();\n        event.preventDefault();\n        selectPrev();\n        break;\n      case KeyCodes.ARROW_DOWN:\n        event.stopPropagation();\n        event.preventDefault();\n        selectNext();\n        break;\n      case KeyCodes.TAB:\n        event.stopPropagation();\n        event.preventDefault();\n        if (event.shiftKey) {\n          selectPrev();\n        } else {\n          selectNext();\n        }\n        break;\n      default:\n    }\n  }\n\n  handleScroll(top) {\n    findDOMNode(this.refs.results).scrollTop = top;\n  }\n\n  getList() {\n    const { query, list } = this.state;\n\n    if (!query || query === '') return list;\n\n    return list.filter((group) => {\n      return fuzzaldrin.score(group.peerInfo.title, query) > 0;\n    });\n  }\n\n  renderSearchInput() {\n    const { query } = this.state;\n    const { intl } = this.context;\n\n    return (\n      <section className=\"large-search\">\n        <input className=\"input\"\n               onChange={this.handleSearchChange}\n               placeholder={intl.messages['modal.groups.search']}\n               type=\"search\"\n               ref=\"search\"\n               value={query}/>\n      </section>\n    );\n  }\n\n  renderList() {\n    const { query, selectedIndex, list } = this.state;\n    const results = this.getList();\n\n    if (list.length === 0) {\n      return (\n        <div className=\"result-list__item result-list__item--empty text-center\">\n          <FormattedMessage id=\"modal.groups.loading\"/>\n        </div>\n      );\n    }\n\n    if (results.length === 0) {\n      return (\n        <div className=\"result-list__item result-list__item--empty text-center\">\n          <FormattedHTMLMessage id=\"modal.groups.notFound\" values={{ query }}/>\n        </div>\n      );\n    }\n\n    return results.map((result, index) => {\n      return (\n        <Group\n          group={result}\n          key={index}\n          isSelected={selectedIndex === index}\n          ref={selectedIndex === index ? 'selected' : null}\n          onClick={this.handleGroupSelect}\n          onMouseOver={() => this.setState({ selectedIndex: index })}\n        />\n      )\n    });\n  }\n\n  render() {\n    return (\n      <Modal\n        overlayClassName=\"modal-overlay modal-overlay--white\"\n        className=\"modal modal--fullscreen modal--without-scroll\"\n        onRequestClose={this.handleClose}\n        shouldCloseOnOverlayClick={false}\n        isOpen>\n\n        <ModalCloseButton onClick={this.handleClose}/>\n\n        <div className=\"group-list\">\n          <div className=\"modal__content\">\n\n            <header className=\"modal__header\">\n              <FormattedMessage id=\"modal.groups.title\" tagName=\"h1\"/>\n            </header>\n\n            {this.renderSearchInput()}\n\n            <div className=\"modal__body\" ref=\"results\">\n              <div className=\"result-list\">\n                {this.renderList()}\n              </div>\n            </div>\n\n          </div>\n        </div>\n\n      </Modal>\n    )\n  }\n}\n\nexport default Container.create(GroupList, { pure: false });\n"]}