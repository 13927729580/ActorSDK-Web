{"version":3,"sources":["../../../src/components/modals/ModalsWrapper.react.js"],"names":[],"mappings":";;;;AAIA;;;;AACA;;AACA;;;;AACA;;AAEA;;;;AACA;;;;AAEA;;;;AACA;;;;AAEA;;;;AACA;;;;;;;;;;;;;;IAEM,a;;;AACJ,yBAAY,KAAZ,EAAmB;AAAA;;AAAA,iDACjB,sBAAM,KAAN,CADiB;;AAAA,UA4BnB,aA5BmB,GA4BH,UAAC,KAAD,EAAW;AACzB,cAAQ,MAAM,OAAd;AACE,aAAK,4BAAS,GAAd;AACE,gBAAM,cAAN;AACA,gBAAK,WAAL;AACA;AACF,aAAK,4BAAS,CAAd;AACE,cAAI,MAAM,OAAV,EAAmB;AACjB,kBAAM,cAAN;AACA,kBAAK,WAAL;AACA,8CAAwB,IAAxB;AACD;AACD;AACF,aAAK,4BAAS,CAAd;AACE,cAAI,MAAM,OAAV,EAAmB;AACjB,kBAAM,cAAN;AACA,kBAAK,WAAL;AACA,4CAAsB,IAAtB;AACD;AACD;AACF;AAnBF;AAqBD,KAlDkB;;AAAA,UAoDnB,WApDmB,GAoDL,YAAM;AAAA,wBACsB,MAAK,KAD3B;AAAA,UACV,aADU,eACV,aADU;AAAA,UACK,YADL,eACK,YADL;;;AAGlB,UAAI,aAAJ,EAAmB;AACjB,wCAAsB,KAAtB;AACD;AACD,UAAI,YAAJ,EAAkB;AAChB,0CAAwB,KAAxB;AACD;AACF,KA7DkB;;AAAA;AAElB;;gBAEM,S,wBAAY;AACjB,WAAO,iDAAP;AACD,G;;gBAEM,c,6BAAiB;AACtB,WAAO;AACL,qBAAe,sBAAY,MAAZ,EADV;AAEL,oBAAc,yBAAe,MAAf;AAFT,KAAP;AAID,G;;0BAMD,kB,iCAAqB;AACnB,aAAS,gBAAT,CAA0B,SAA1B,EAAqC,KAAK,aAA1C,EAAyD,KAAzD;AAED,G;;0BAED,oB,mCAAuB;AACrB,aAAS,mBAAT,CAA6B,SAA7B,EAAwC,KAAK,aAA7C,EAA4D,KAA5D;AACD,G;;0BAqCD,M,qBAAS;AAAA,iBACiC,KAAK,KADtC;AAAA,QACC,aADD,UACC,aADD;AAAA,QACgB,YADhB,UACgB,YADhB;AAAA,QAEC,IAFD,GAEU,KAAK,OAFf,CAEC,IAFD;;;AAIP,QAAM,mBAAmB,0BAAW,eAAX,EAA4B;AACnD,+BAAyB,iBAAiB;AADS,KAA5B,CAAzB;;AAIA,WACE;AAAA;MAAA,EAAK,WAAW,gBAAhB;MACE;AAAA;QAAA,EAAK,WAAU,sBAAf,EAAsC,SAAS,KAAK,WAApD;QACE;AAAA;UAAA,EAAG,WAAU,2BAAb;UAAA;AAAA,SADF;QAEE;AAAA;UAAA,EAAK,WAAU,MAAf;UAAuB,KAAK,QAAL,CAAc,cAAd;AAAvB;AAFF,OADF;MAMG,gBAAgB,yDAAhB,GAAgC,IANnC;MAOG,eAAe,wDAAf,GAA8B;AAPjC,KADF;AAWD,G;;;;;AAnFG,a,CAgBG,Y,GAAe;AACpB,QAAM,iBAAU;AADI,C;kBAsET,iBAAU,MAAV,CAAiB,aAAjB,EAAgC,EAAE,MAAM,KAAR,EAAhC,C","file":"ModalsWrapper.react.js","sourcesContent":["/*\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\n */\n\nimport React, { Component, PropTypes } from 'react';\nimport { Container } from 'flux/utils';\nimport classnames from 'classnames';\nimport { KeyCodes } from '../../constants/ActorAppConstants';\n\nimport ContactActionCreators from '../../actions/ContactActionCreators';\nimport GroupListActionCreators from '../../actions/GroupListActionCreators';\n\nimport PeopleStore from '../../stores/PeopleStore';\nimport GroupListStore from '../../stores/GroupListStore';\n\nimport PeopleList from './PeopleList'\nimport GroupList from './GroupList'\n\nclass ModalsWrapper extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  static getStores() {\n    return [PeopleStore, GroupListStore];\n  }\n\n  static calculateState() {\n    return {\n      isPeoplesOpen: PeopleStore.isOpen(),\n      isGroupsOpen: GroupListStore.isOpen()\n    };\n  }\n\n  static contextTypes = {\n    intl: PropTypes.object\n  };\n\n  componentWillMount() {\n    document.addEventListener('keydown', this.handleKeyDown, false);\n\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.handleKeyDown, false);\n  }\n\n  handleKeyDown = (event) => {\n    switch (event.keyCode) {\n      case KeyCodes.ESC:\n        event.preventDefault();\n        this.handleClose();\n        break;\n      case KeyCodes.G:\n        if (event.ctrlKey) {\n          event.preventDefault();\n          this.handleClose();\n          GroupListActionCreators.open();\n        }\n        break;\n      case KeyCodes.P:\n        if (event.ctrlKey) {\n          event.preventDefault();\n          this.handleClose();\n          ContactActionCreators.open();\n        }\n        break;\n      default:\n    }\n  };\n\n  handleClose = () => {\n    const { isPeoplesOpen, isGroupsOpen } = this.state;\n\n    if (isPeoplesOpen) {\n      ContactActionCreators.close();\n    }\n    if (isGroupsOpen) {\n      GroupListActionCreators.close();\n    }\n  };\n\n  render() {\n    const { isPeoplesOpen, isGroupsOpen } = this.state;\n    const { intl } = this.context;\n\n    const wrapperClassName = classnames('modal-wrapper', {\n      'modal-wrapper--opened': isPeoplesOpen || isGroupsOpen\n    });\n\n    return (\n      <div className={wrapperClassName}>\n        <div className=\"modal-wrapper__close\" onClick={this.handleClose}>\n          <i className=\"close_icon material-icons\">close</i>\n          <div className=\"text\">{intl.messages['button.close']}</div>\n        </div>\n\n        {isPeoplesOpen ? <PeopleList/> : null}\n        {isGroupsOpen ? <GroupList/> : null}\n      </div>\n    );\n  }\n}\n\nexport default Container.create(ModalsWrapper, { pure: false });\n"]}