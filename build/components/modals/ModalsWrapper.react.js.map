{"version":3,"sources":["../../../src/components/modals/ModalsWrapper.react.js"],"names":[],"mappings":";;;;AAIA;;;;AACA;;AACA;;AAEA;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;;;IAEM,a;;;;;;;;;gBACG,S,wBAAY;AACjB,WAAO,sBAAP;AACD,G;;gBAEM,c,6BAAiB;AACtB,WAAO,qBAAW,QAAX,EAAP;AACD,G;;0BAED,M,qBAAS;AAAA,QACC,YADD,GACkB,KAAK,KADvB,CACC,YADD;;AAEP,QAAI,CAAC,YAAL,EAAmB,OAAO,IAAP;;AAEnB,YAAQ,YAAR;AACE,WAAK,8BAAW,OAAhB;AACE,eAAO,sDAAP;AACF,WAAK,8BAAW,IAAhB;AACE,eAAO,mDAAP;AACF,WAAK,8BAAW,UAAhB;AACE,eAAO,qDAAP;AACF,WAAK,8BAAW,WAAhB;AACE,eAAO,qDAAP;AACF,WAAK,8BAAW,WAAhB;AACE,eAAO,yDAAP;AACF,WAAK,8BAAW,YAAhB;AACE,eAAO,0DAAP;AACF,WAAK,8BAAW,UAAhB;AACE,eAAO,wDAAP;AACF,WAAK,8BAAW,WAAhB;AACE,eAAO,0DAAP;AACF,WAAK,8BAAW,MAAhB;AACE,eAAO,qDAAP;AACF,WAAK,8BAAW,cAAhB;AACE,eAAO,2DAAP;AACF,WAAK,8BAAW,YAAhB;AACE,eAAO,0DAAP;AACF,WAAK,8BAAW,WAAhB;AACE,eAAO,0DAAP;AACF,WAAK,8BAAW,aAAhB;AACE,eAAO,2DAAP;;AAEF;AACE,gBAAQ,IAAR,8BAAwC,YAAxC;AACA,eAAO,IAAP;AA9BJ;AAgCD,G;;;;;kBAGY,iBAAU,MAAV,CAAiB,aAAjB,C","file":"ModalsWrapper.react.js","sourcesContent":["/*\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\n */\n\nimport React, { Component } from 'react';\nimport { Container } from 'flux/utils';\nimport { ModalTypes } from '../../constants/ActorAppConstants';\n\nimport ModalStore from '../../stores/ModalStore';\n\nimport Profile from './Profile.react';\nimport Crop from './Crop.react';\nimport Groups from './Groups.react';\nimport People from './People.react';\nimport AddContact from './AddContact.react';\nimport CreateGroup from './CreateGroup.react';\nimport EditGroup from './EditGroup.react';\nimport Preferences from './Preferences.react';\nimport Invite from './Invite.react';\nimport InviteByLink from './InviteByLink.react';\nimport QuickSearch from './QuickSearch.react';\nimport Attachments from './Attachments.react';\nimport BlockedUsers from './BlockedUsers.react';\n\nclass ModalsWrapper extends Component {\n  static getStores() {\n    return [ModalStore];\n  }\n\n  static calculateState() {\n    return ModalStore.getState();\n  }\n\n  render() {\n    const { currentModal } = this.state;\n    if (!currentModal) return null;\n\n    switch (currentModal) {\n      case ModalTypes.PROFILE:\n        return <Profile/>;\n      case ModalTypes.CROP:\n        return <Crop/>;\n      case ModalTypes.GROUP_LIST:\n        return <Groups/>;\n      case ModalTypes.PEOPLE_LIST:\n        return <People/>;\n      case ModalTypes.ADD_CONTACT:\n        return <AddContact/>;\n      case ModalTypes.CREATE_GROUP:\n        return <CreateGroup/>;\n      case ModalTypes.EDIT_GROUP:\n        return <EditGroup/>;\n      case ModalTypes.PREFERENCES:\n        return <Preferences/>;\n      case ModalTypes.INVITE:\n        return <Invite/>;\n      case ModalTypes.INVITE_BY_LINK:\n        return <InviteByLink/>;\n      case ModalTypes.QUICK_SEARCH:\n        return <QuickSearch/>;\n      case ModalTypes.ATTACHMENTS:\n        return <Attachments/>;\n      case ModalTypes.BLOCKED_USERS:\n        return <BlockedUsers/>;\n\n      default:\n        console.warn(`Unsupported modal type: ${currentModal}`);\n        return null;\n    }\n  }\n}\n\nexport default Container.create(ModalsWrapper);\n"]}