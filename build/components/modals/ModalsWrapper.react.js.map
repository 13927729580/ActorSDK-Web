{"version":3,"sources":["../../../src/components/modals/ModalsWrapper.react.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoBA,IAAM,SAAS,GAAG,SAAZ,SAAS,GAAS;AACtB,SAAO;AACL,kBAAc,EAAE,uBAAc,cAAc,EAAE;AAC9C,gBAAY,EAAE,yBAAe,YAAY,EAAE;GAC5C,CAAA;CACF,CAAC;;IAEI,aAAa;YAAb,aAAa;;AACjB,WADI,aAAa,CACL,KAAK,EAAE;0BADf,aAAa;;uEAAb,aAAa,aAET,KAAK;;UAkBb,YAAY,GAAG;aAAM,MAAK,QAAQ,CAAC,SAAS,EAAE,CAAC;KAAA;;UAE/C,aAAa,GAAG,UAAC,KAAK,EAAK;AACzB,UAAI,KAAK,CAAC,OAAO,KAAK,mBA5CjB,QAAQ,CA4CkB,GAAG,EAAE;AAClC,aAAK,CAAC,cAAc,EAAE,CAAC;AACvB,cAAK,WAAW,EAAE,CAAC;OACpB;KACF;;UAED,WAAW,GAAG,YAAM;wBACuB,MAAK,KAAK;UAA3C,cAAc,eAAd,cAAc;UAAE,YAAY,eAAZ,YAAY;;AAEpC,UAAI,cAAc,EAAE;AAClB,wCAAsB,KAAK,EAAE,CAAC;OAC/B;AACD,UAAI,YAAY,EAAE;AAChB,0CAAwB,KAAK,EAAE,CAAC;OACjC;KACF;;AAlCC,UAAK,KAAK,GAAG,SAAS,EAAE,CAAC;;GAC1B;;eALG,aAAa;;yCAOI;AACnB,cAAQ,CAAC,gBAAgB,CAAC,SAAS,EAAE,IAAI,CAAC,aAAa,EAAE,KAAK,CAAC,CAAC;;AAEhE,6BAAc,iBAAiB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;AACnD,+BAAe,WAAW,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;KAC/C;;;2CAEsB;AACrB,cAAQ,CAAC,mBAAmB,CAAC,SAAS,EAAE,IAAI,CAAC,aAAa,EAAE,KAAK,CAAC,CAAC;;AAEnE,6BAAc,oBAAoB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;KACvD;;;6BAsBQ;mBACkC,IAAI,CAAC,KAAK;UAA3C,cAAc,UAAd,cAAc;UAAE,YAAY,UAAZ,YAAY;;AAEpC,UAAM,gBAAgB,GAAG,0BAAW,eAAe,EAAE;AACnD,+BAAuB,EAAE,cAAc,IAAI,YAAY;OACxD,CAAC,CAAC;;AAEH,aACE;;UAAK,SAAS,EAAE,gBAAgB,AAAC;QAC/B;;YAAK,SAAS,EAAC,sBAAsB,EAAC,OAAO,EAAE,IAAI,CAAC,WAAW,AAAC;UAC9D;;cAAG,SAAS,EAAC,2BAA2B;;WAAU;UAClD;;cAAK,SAAS,EAAC,MAAM;YAAE,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC;WAAO;SAC7D;QAEL,cAAc,GAAG,0DAAW,GAAG,IAAI;QACnC,YAAY,GAAG,wDAAS,GAAG,IAAI;OAC5B,CACN;KACH;;;SA1DG,aAAa;UAvBH,SAAS;;AAoFzB,qBAAW,OAAO,CAAC,aAAa,aAhFvB,SAAS,CAgF0B,CAAC;;kBAE9B,aAAa","file":"ModalsWrapper.react.js","sourcesContent":["/*\n * Copyright (C) 2015 Actor LLC. <https://actor.im>\n */\n\nimport React, { Component } from 'react';\nimport classnames from 'classnames';\nimport { KeyCodes } from '../../constants/ActorAppConstants';\nimport ReactMixin from 'react-mixin';\nimport { IntlMixin } from 'react-intl';\n\nimport ContactActionCreators from '../../actions/ContactActionCreators';\nimport GroupListActionCreators from '../../actions/GroupListActionCreators';\n\nimport ContactsStore from '../../stores/ContactStore';\nimport ContactStore from '../../stores/ContactStore';\nimport GroupListStore from '../../stores/GroupListStore';\n\nimport Contacts from './NewContacts.react'\nimport Groups from './GroupList'\n\nconst getStates = () => {\n  return {\n    isContactsOpen: ContactsStore.isContactsOpen(),\n    isGroupsOpen: GroupListStore.isGroupsOpen()\n  }\n};\n\nclass ModalsWrapper extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = getStates();\n  }\n\n  componentWillMount() {\n    document.addEventListener('keydown', this.handleKeyDown, false);\n\n    ContactsStore.addChangeListener(this.handleChange);\n    GroupListStore.addListener(this.handleChange);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.handleKeyDown, false);\n\n    ContactsStore.removeChangeListener(this.handleChange);\n  }\n\n  handleChange = () => this.setState(getStates());\n\n  handleKeyDown = (event) => {\n    if (event.keyCode === KeyCodes.ESC) {\n      event.preventDefault();\n      this.handleClose();\n    }\n  };\n\n  handleClose = () => {\n    const { isContactsOpen, isGroupsOpen } = this.state;\n\n    if (isContactsOpen) {\n      ContactActionCreators.close();\n    }\n    if (isGroupsOpen) {\n      GroupListActionCreators.close();\n    }\n  };\n\n  render() {\n    const { isContactsOpen, isGroupsOpen } = this.state;\n\n    const wrapperClassName = classnames('modal-wrapper', {\n      'modal-wrapper--opened': isContactsOpen || isGroupsOpen\n    });\n\n    return (\n      <div className={wrapperClassName}>\n        <div className=\"modal-wrapper__close\" onClick={this.handleClose}>\n          <i className=\"close_icon material-icons\">close</i>\n          <div className=\"text\">{this.getIntlMessage('button.close')}</div>\n        </div>\n\n        {isContactsOpen ? <Contacts/> : null}\n        {isGroupsOpen ? <Groups/> : null}\n      </div>\n    );\n  }\n}\n\nReactMixin.onClass(ModalsWrapper, IntlMixin);\n\nexport default ModalsWrapper;\n"]}