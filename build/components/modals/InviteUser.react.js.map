{"version":3,"sources":["../../../src/components/modals/InviteUser.react.js"],"names":[],"mappings":"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","file":"InviteUser.react.js","sourcesContent":["/*\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\n */\n\nimport { find } from 'lodash';\n\nimport React, { Component, PropTypes } from 'react';\nimport Modal from 'react-modal';\nimport { Container } from 'flux/utils';\nimport fuzzaldrin from 'fuzzaldrin';\n\nimport { KeyCodes } from '../../constants/ActorAppConstants';\n\nimport InviteUserActions from '../../actions/InviteUserActions';\nimport InviteUserByLinkActions from '../../actions/InviteUserByLinkActions';\n\nimport PeopleStore from '../../stores/PeopleStore';\nimport InviteUserStore from '../../stores/InviteUserStore';\n\nimport ContactItem from '../common/ContactItem.react';\nimport Stateful from '../common/Stateful.react';\n\nconst hasMember = (group, userId) =>\n  undefined !== find(group.members, (c) => c.peerInfo.peer.id === userId);\n\nclass InviteUser extends Component {\n  static contextTypes = {\n    intl: PropTypes.object\n  };\n\n  static calculateState() {\n    return {\n      isOpen: InviteUserStore.isModalOpen(),\n      contacts: PeopleStore.getList(),\n      group: InviteUserStore.getGroup()\n    };\n  }\n\n  static getStores() {\n    return [InviteUserStore, PeopleStore];\n  }\n\n  componentWillUpdate(nextProps, nextState) {\n    if (nextState.isOpen && !this.state.isOpen) {\n      document.addEventListener('keydown', this.onKeyDown, false);\n    } else if (!nextState.isOpen && this.state.isOpen) {\n      document.removeEventListener('keydown', this.onKeyDown, false);\n    }\n  }\n\n  onClose = () => InviteUserActions.hide();\n  onContactSelect = (uid) => InviteUserActions.inviteUser(this.state.group.id, uid);\n  onSearchChange = (event) => this.setState({search: event.target.value});\n\n  onInviteUrlByClick = () => {\n    const { group } = this.state;\n\n    InviteUserByLinkActions.show(group);\n    InviteUserActions.hide();\n  };\n\n  onKeyDown = (event) => {\n    if (event.keyCode === KeyCodes.ESC) {\n      event.preventDefault();\n      this.onClose();\n    }\n  };\n\n  getContacts() {\n    const { contacts, search } = this.state;\n\n    return fuzzaldrin.filter(contacts, search, {\n      key: 'name'\n    });\n  }\n\n  renderContacts() {\n    const { intl } = this.context;\n    const { group } = this.state;\n    const contacts = this.getContacts();\n\n    if (!contacts.length) {\n      return (\n        <li className=\"contacts__list__item contacts__list__item--empty text-center\">\n          {intl.messages['inviteModalNotFound']}\n        </li>\n      );\n    }\n\n    return contacts.map((contact, i) => {\n      let inviteUserState = InviteUserStore.getInviteUserState(contact.uid);\n      let controls;\n      if (hasMember(group, contact.uid)) {\n        controls = <i className=\"material-icons\">check</i>;\n      } else {\n        controls = (\n          <Stateful\n            currentState={inviteUserState}\n            pending={<a className=\"material-icons\" onClick={() => this.onContactSelect(contact.uid)}>person_add</a>}\n            processing={<i className=\"material-icons spin\">autorenew</i>}\n            success={<i className=\"material-icons\">check</i>}\n            failure={<i className=\"material-icons\">warning</i>}\n          />\n        )\n      }\n\n      return (\n        <ContactItem {...contact} key={i}>\n          {controls}\n        </ContactItem>\n      );\n    });\n  }\n\n  render() {\n    const { isOpen, search } = this.state;\n    const { intl } = this.context;\n\n    if (!isOpen) {\n      return null;\n    }\n\n    const modalStyle = {\n      content : {\n        position: null,\n        top: null,\n        left: null,\n        right: null,\n        bottom: null,\n        border: null,\n        background: null,\n        overflow: null,\n        outline: null,\n        padding: null,\n        borderRadius: null,\n        width: 440\n      }\n    };\n\n    return (\n      <Modal className=\"modal-new modal-new--invite contacts\"\n             closeTimeoutMS={150}\n             isOpen={isOpen}\n             style={modalStyle}>\n\n        <header className=\"modal-new__header\">\n          <a className=\"modal-new__header__icon material-icons\">person_add</a>\n          <h3 className=\"modal-new__header__title\">{intl.messages['inviteModalTitle']}</h3>\n\n          <div className=\"pull-right\">\n            <button className=\"button button--lightblue\" onClick={this.onClose}>{intl.messages['button.done']}</button>\n          </div>\n        </header>\n\n        <div className=\"modal-new__body\">\n          <div className=\"modal-new__search\">\n            <i className=\"material-icons\">search</i>\n            <input className=\"input input--search\"\n                   onChange={this.onSearchChange}\n                   placeholder={intl.messages['inviteModalSearch']}\n                   type=\"search\"\n                   value={search}/>\n          </div>\n\n          <a className=\"link link--blue\" onClick={this.onInviteUrlByClick}>\n            <i className=\"material-icons\">link</i>\n            {intl.messages['inviteByLink']}\n          </a>\n        </div>\n\n        <div className=\"contacts__body\">\n          <ul className=\"contacts__list\">\n            {this.renderContacts()}\n          </ul>\n        </div>\n\n      </Modal>\n    );\n  }\n}\n\nexport default Container.create(InviteUser);\n"]}