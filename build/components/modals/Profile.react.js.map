{"version":3,"sources":["../../../src/components/modals/Profile.react.js"],"names":[],"mappings":"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","file":"Profile.react.js","sourcesContent":["/*\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\n */\n\nimport React, { Component, PropTypes } from 'react';\nimport { Container } from 'flux/utils';\nimport Modal from 'react-modal';\nimport { FormattedMessage } from 'react-intl';\nimport { ModalTypes } from '../../constants/ActorAppConstants';\n\nimport ProfileStore from '../../stores/ProfileStore';\n\nimport ProfileActionCreators from '../../actions/ProfileActionCreators';\n\nimport ModalCloseButton from './ModalCloseButton.react';\nimport TextField from '../common/TextField.react';\nimport PictureChanger from './profile/PictureChanger.react';\n\nclass Profile extends Component {\n  static getStores() {\n    return [ProfileStore];\n  }\n\n  static calculateState(prevState) {\n    const state = ProfileStore.getState();\n    return {\n      profile: state.profile,\n      name: prevState ? prevState.name : state.profile.name,\n      nick: prevState ? prevState.nick : state.profile.nick,\n      about: prevState ? prevState.about : state.profile.about,\n      errors: prevState ? prevState.errors : {}\n    };\n  }\n\n  static contextTypes = {\n    intl: PropTypes.object\n  };\n\n  constructor(props, context) {\n    super(props, context);\n\n    this.handleClose = this.handleClose.bind(this);\n    this.handleSave = this.handleSave.bind(this);\n    this.handleNameChange = this.handleNameChange.bind(this);\n    this.handleNickChange = this.handleNickChange.bind(this);\n    this.handleAboutChange = this.handleAboutChange.bind(this);\n    this.handleAvatarChange = this.handleAvatarChange.bind(this);\n  }\n\n  handleClose() {\n    ProfileActionCreators.hide();\n  }\n\n  handleSave() {\n    const { nick, name, about, profile, errors } = this.state;\n\n    if (!errors.nick) {\n      if (name !== profile.name) ProfileActionCreators.editMyName(name);\n      if (nick !== profile.nick) ProfileActionCreators.editMyNick(nick);\n      if (about !== profile.about) ProfileActionCreators.editMyAbout(about);\n      this.handleClose();\n    }\n  }\n\n  handleNameChange(event) {\n    this.setState({ name: event.target.value });\n  }\n\n  handleNickChange(event) {\n    const nick = event.target.value;\n\n    this.setState({\n      nick,\n      errors: {\n        nick: this.validateNick(nick)\n      }\n    });\n  }\n\n  validateNick(nick) {\n    const { intl } = this.context;\n\n    if (nick.length < 5 || nick.length > 32) {\n      return intl.messages['modal.profile.errors.nick.length'];\n    }\n\n    if (!/^[0-9a-zA-Z_]+$/.test(nick)) {\n      return intl.messages['modal.profile.errors.nick.chars'];\n    }\n\n    return null;\n  }\n\n  handleAboutChange(event) {\n    this.setState({ about: event.target.value });\n  }\n\n  handleAvatarChange(croppedImage) {\n    ProfileActionCreators.changeMyAvatar(croppedImage);\n  }\n\n  handleAvatarRemove() {\n    ProfileActionCreators.removeMyAvatar()\n  }\n\n  renderControls() {\n    const { errors } = this.state;\n\n    return (\n      <div className=\"controls\">\n        <button className=\"button\" onClick={this.handleClose}>\n          <FormattedMessage id=\"button.cancel\"/>\n        </button>\n        <button\n          className=\"button button--rised\"\n          disabled={errors.nick}\n          onClick={this.handleSave}>\n          <FormattedMessage id=\"button.save\"/>\n        </button>\n      </div>\n    );\n  }\n\n  renderName() {\n    const { name } = this.state;\n\n    return (\n      <div className=\"name\">\n        <TextField\n          className=\"input__material--wide\"\n          floatingLabel={<FormattedMessage id=\"modal.profile.name\"/>}\n          onChange={this.handleNameChange}\n          type=\"text\"\n          value={name}/>\n      </div>\n    );\n  }\n\n  renderNick() {\n    const { nick, errors } = this.state;\n\n    return (\n      <div className=\"nick\">\n        <TextField\n          className=\"input__material--wide\"\n          floatingLabel={<FormattedMessage id=\"modal.profile.nick\"/>}\n          errorText={errors.nick}\n          onChange={this.handleNickChange}\n          type=\"text\"\n          value={nick}/>\n      </div>\n    );\n  }\n\n  renderPhones() {\n    const { phones } = this.state.profile;\n    if (phones.length === 0) return null;\n\n    return phones.map((phone, index) => {\n      return (\n        <div className=\"phone\" key={`p${index}`}>\n          <TextField\n            className=\"input__material--wide\"\n            floatingLabel={<FormattedMessage id=\"modal.profile.phone\"/>}\n            disabled\n            type=\"tel\"\n            value={phone.number}/>\n        </div>\n      );\n    });\n  }\n\n  renderEmails() {\n    const { emails } = this.state.profile;\n    if (emails.length === 0) return null;\n\n    return emails.map((email, index) => {\n      return (\n        <div className=\"email\" key={`e${index}`}>\n          <TextField\n            className=\"input__material--wide\"\n            floatingLabel={<FormattedMessage id=\"modal.profile.email\"/>}\n            disabled\n            type=\"email\"\n            value={email.email}/>\n        </div>\n      );\n    });\n  }\n\n  renderAbout() {\n    const { about } = this.state;\n\n    return (\n      <div className=\"about\">\n        <label htmlFor=\"about\"><FormattedMessage id=\"modal.profile.about\"/></label>\n        <textarea\n          className=\"textarea\"\n          id=\"about\"\n          onChange={this.handleAboutChange}\n          value={about}/>\n      </div>\n    );\n  }\n\n  render() {\n    const { profile } = this.state;\n\n    return (\n      <Modal\n        overlayClassName=\"modal-overlay modal-overlay--white\"\n        className=\"modal modal--fullscreen\"\n        onRequestClose={this.handleClose}\n        shouldCloseOnOverlayClick={false}\n        isOpen>\n\n        <ModalCloseButton onClick={this.handleClose}/>\n\n        <div className=\"profile\">\n          <div className=\"modal__content\">\n\n            <header className=\"modal__header\">\n              <FormattedMessage id=\"modal.profile.title\" tagName=\"h1\"/>\n            </header>\n\n            <div className=\"modal__body row\">\n              <div className=\"col-xs\">\n                {this.renderName()}\n                {this.renderNick()}\n                {this.renderPhones()}\n                {this.renderEmails()}\n                {this.renderAbout()}\n              </div>\n\n              <PictureChanger {...profile}\n                fromModal={ModalTypes.PROFILE}\n                onRemove={this.handleAvatarRemove}\n                onChange={this.handleAvatarChange}/>\n            </div>\n\n            <footer className=\"modal__footer\">\n              {this.renderControls()}\n            </footer>\n\n          </div>\n        </div>\n\n      </Modal>\n    );\n  }\n}\n\nexport default Container.create(Profile);\n"]}