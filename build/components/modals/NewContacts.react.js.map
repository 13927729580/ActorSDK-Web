{"version":3,"sources":["../../../src/components/modals/NewContacts.react.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgBA,IAAM,kBAAkB,GAAG,SAArB,kBAAkB,GAAS;AAC/B,SAAQ;AACN,UAAM,EAAE,uBAAa,cAAc,EAAE;AACrC,YAAQ,EAAE,uBAAa,WAAW,EAAE;GACrC,CAAE;CACJ,CAAC;;IAEI,QAAQ;YAAR,QAAQ;;AACZ,WADI,QAAQ,CACA,KAAK,EAAE;0BADf,QAAQ;;uEAAR,QAAQ,aAEJ,KAAK;;UAmBb,YAAY,GAAG;aAAM,MAAK,QAAQ,CAAC,kBAAkB,EAAE,CAAC;KAAA;;UACxD,WAAW,GAAG;aAAM,gCAAsB,KAAK,EAAE;KAAA;;UACjD,kBAAkB,GAAG,UAAC,KAAK;aAAK,MAAK,QAAQ,CAAC,EAAC,MAAM,EAAE,KAAK,CAAC,MAAM,CAAC,KAAK,EAAC,CAAC;KAAA;;UAE3E,mBAAmB,GAAG,UAAC,OAAO,EAAK;AACjC,qCAAqB,oBAAoB,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;AACvD,YAAK,WAAW,EAAE,CAAA;KACnB;;AAxBC,UAAK,KAAK,GAAG,YAtBR,MAAM,EAsBS;AAClB,YAAM,EAAE,EAAE;KACX,EAAE,kBAAkB,EAAE,CAAC,CAAC;;GAC1B;;eAPG,QAAQ;;yCASS;AACnB,6BAAa,iBAAiB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;KACnD;;;wCAEmB;AAClB,sBAAM,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,KAAK,EAAE,CAAC;KAC7C;;;2CAEsB;AACrB,6BAAa,oBAAoB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;KACtD;;;6BAYQ;;;mBACsB,IAAI,CAAC,KAAK;UAA/B,QAAQ,UAAR,QAAQ;UAAE,MAAM,UAAN,MAAM;;AAExB,UAAI,WAAW,GAAG,EAAE,CAAC;;AAErB,kBAtDa,OAAO,EAsDZ,QAAQ,EAAE,UAAC,OAAO,EAAE,CAAC,EAAK;AAChC,YAAM,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;AACxC,YAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,EAAE;AACvC,qBAAW,CAAC,IAAI,CACd,uDAAa,OAAO,EAAE,OAAO,AAAC,EAAC,GAAG,EAAE,CAAC,AAAC,EAAC,QAAQ,EAAE,OAAK,mBAAmB,AAAC,GAAE,CAC7E,CAAC;SACH;OACF,EAAE,IAAI,CAAC,CAAC;;AAET,UAAI,WAAW,CAAC,MAAM,KAAK,CAAC,EAAE;AAC5B,mBAAW,CAAC,IAAI,CACd;;YAAI,SAAS,EAAC,8DAA8D;UACzE,IAAI,CAAC,cAAc,CAAC,yBAAyB,CAAC;SAC5C,CACN,CAAC;OACH;;AAED,aACE;;UAAK,SAAS,EAAC,6BAA6B;QAC1C;;YAAQ,SAAS,EAAC,kBAAkB;UAClC;;;YAAK,IAAI,CAAC,cAAc,CAAC,sBAAsB,CAAC;WAAM;SAC/C;QAET;;YAAS,SAAS,EAAC,kBAAkB;UACnC,yCAAO,SAAS,EAAC,yBAAyB;AACnC,oBAAQ,EAAE,IAAI,CAAC,kBAAkB,AAAC;AAClC,uBAAW,EAAE,IAAI,CAAC,cAAc,CAAC,uBAAuB,CAAC,AAAC;AAC1D,gBAAI,EAAC,QAAQ;AACb,eAAG,EAAC,QAAQ;AACZ,iBAAK,EAAE,MAAM,AAAC,GAAE;SACf;QAEV;;YAAI,SAAS,EAAC,iCAAiC;UAC5C,WAAW;SACT;OACD,CACP;KACF;;;SAzEG,QAAQ;UAnBE,SAAS;;AA+FzB,qBAAW,OAAO,CAAC,QAAQ,aA5FlB,SAAS,CA4FqB,CAAC;;kBAEzB,QAAQ","file":"NewContacts.react.js","sourcesContent":["/*\n * Copyright (C) 2015 Actor LLC. <https://actor.im>\n */\n\nimport React, { Component } from 'react';\nimport { assign, forEach } from 'lodash';\nimport ReactMixin from 'react-mixin';\nimport { IntlMixin } from 'react-intl';\n\nimport ContactActionCreators from '../../actions/ContactActionCreators';\nimport DialogActionCreators from '../../actions/DialogActionCreators';\n\nimport ContactStore from '../../stores/ContactStore';\n\nimport ContactItem from './contacts/ContactItem.react';\n\nconst getStateFromStores = () => {\n  return ({\n    isOpen: ContactStore.isContactsOpen(),\n    contacts: ContactStore.getContacts()\n  });\n};\n\nclass Contacts extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = assign({\n      search: ''\n    }, getStateFromStores());\n  }\n\n  componentWillMount() {\n    ContactStore.addChangeListener(this.handleChange);\n  }\n\n  componentDidMount() {\n    React.findDOMNode(this.refs.search).focus();\n  }\n\n  componentWillUnmount() {\n    ContactStore.removeChangeListener(this.handleChange);\n  }\n\n  handleChange = () => this.setState(getStateFromStores());\n  handleClose = () => ContactActionCreators.close();\n  handleSearchChange = (event) => this.setState({search: event.target.value});\n\n  handleContactSelect = (contact) => {\n    DialogActionCreators.selectDialogPeerUser(contact.uid);\n    this.handleClose()\n  };\n\n\n  render() {\n    const { contacts, search } = this.state;\n\n    let contactList = [];\n\n    forEach(contacts, (contact, i) => {\n      const name = contact.name.toLowerCase();\n      if (name.includes(search.toLowerCase())) {\n        contactList.push(\n          <ContactItem contact={contact} key={i} onSelect={this.handleContactSelect}/>\n        );\n      }\n    }, this);\n\n    if (contactList.length === 0) {\n      contactList.push(\n        <li className=\"contacts__list__item contacts__list__item--empty text-center\">\n          {this.getIntlMessage('modal.contacts.notFound')}\n        </li>\n      );\n    }\n\n    return (\n      <div className=\"newmodal newmodal__contacts\">\n        <header className=\"newmodal__header\">\n          <h2>{this.getIntlMessage('modal.contacts.title')}</h2>\n        </header>\n\n        <section className=\"newmodal__search\">\n          <input className=\"newmodal__search__input\"\n                 onChange={this.handleSearchChange}\n                 placeholder={this.getIntlMessage('modal.contacts.search')}\n                 type=\"search\"\n                 ref=\"search\"\n                 value={search}/>\n        </section>\n\n        <ul className=\"newmodal__result contacts__list\">\n          {contactList}\n        </ul>\n      </div>\n    )\n  }\n}\n\nReactMixin.onClass(Contacts, IntlMixin);\n\nexport default Contacts;\n"]}