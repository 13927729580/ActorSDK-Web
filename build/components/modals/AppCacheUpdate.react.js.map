{"version":3,"sources":["../../../src/components/modals/AppCacheUpdate.react.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAUA,IAAM,YAAY,GAAG,IAAI,mBAAO,YAAY,EAAE,CAAC;;AAE/C,IAAM,UAAU,GAAG,QAAQ,CAAC,cAAc,CAAC,eAAe,CAAC,CAAC;AAC5D,qBAAM,aAAa,CAAC,UAAU,CAAC,CAAC;;AAEhC,IAAM,kBAAkB,GAAG,SAArB,kBAAkB,GAAS;AAC/B,SAAO;AACL,WAAO,EAAE,wBAAc,WAAW,EAAE;GACrC,CAAC;CACH,CAAC;;IAEI,UAAU;YAAV,UAAU;;eAAV,UAAU;;sCAKI;AAChB,aAAO;AACL,gBAAQ,EAAE,YAAY,CAAC,eAAe,EAAE;OACzC,CAAC;KACH;;;AAED,WAXI,UAAU,CAWF,KAAK,EAAE;0BAXf,UAAU;;uEAAV,UAAU,aAYN,KAAK;;UA2Cb,OAAO,GAAG,YAAM;AACd,uCAAuB,UAAU,EAAE,CAAC;KACrC;;UAED,SAAS,GAAG,YAAM;AAChB,uCAAuB,aAAa,EAAE,CAAC;KACxC;;UAED,QAAQ,GAAG,YAAM;AACf,YAAK,QAAQ,CAAC,kBAAkB,EAAE,CAAC,CAAC;KACrC;;UAED,SAAS,GAAG,UAAC,KAAK,EAAK;AACrB,UAAI,KAAK,CAAC,OAAO,KAAK,4BAAS,GAAG,EAAE;AAClC,aAAK,CAAC,cAAc,EAAE,CAAC;AACvB,cAAK,OAAO,EAAE,CAAC;OAChB;KACF;;AA1DC,UAAK,KAAK,GAAG,kBAAkB,EAAE,CAAC;;AAElC,4BAAc,iBAAiB,CAAC,MAAK,QAAQ,CAAC,CAAC;AAC/C,YAAQ,CAAC,gBAAgB,CAAC,SAAS,EAAE,MAAK,SAAS,EAAE,KAAK,CAAC,CAAC;;AAE5D,gBAAY,CAAC,QAAQ,sBAAY,CAAC;;GACnC;;eApBG,UAAU;;2CAsBS;AACrB,8BAAc,oBAAoB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AAClD,cAAQ,CAAC,mBAAmB,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;KAChE;;;6BAEQ;AACP,aACE;;UAAO,SAAS,EAAC,6BAA6B;AACvC,wBAAc,EAAE,GAAG,AAAC;AACpB,gBAAM,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,AAAC;AAC3B,eAAK,EAAE,EAAC,KAAK,EAAE,GAAG,EAAC,AAAC;QAEzB;;YAAK,SAAS,EAAC,iBAAiB;UAC9B;;;;WAAyB;UACzB;;;;WAAgD;UAChD;;;;WAA4E;SACxE;QAEN;;YAAQ,SAAS,EAAC,8BAA8B;UAC9C,wDAAY,UAAU,EAAC,sBAAsB;AACjC,iBAAK,EAAC,QAAQ;AACd,mBAAO,EAAE,IAAI,CAAC,OAAO,AAAC;AACtB,qBAAS,EAAE,IAAI,AAAC,GAAG;UAC/B,wDAAY,UAAU,EAAC,sBAAsB;AACjC,iBAAK,EAAC,QAAQ;AACd,mBAAO,EAAE,IAAI,CAAC,SAAS,AAAC;AACxB,qBAAS,EAAE,IAAI,AAAC,GAAG;SACxB;OAEH,CACR;KACH;;;SArDG,UAAU;GAAS,gBAAM,SAAS;;AAAlC,UAAU,CACP,iBAAiB,GAAG;AACzB,UAAQ,EAAE,gBAAM,SAAS,CAAC,MAAM;CACjC;kBAwEY,UAAU","file":"AppCacheUpdate.react.js","sourcesContent":["import React from 'react';\nimport Modal from 'react-modal';\nimport { Styles, FlatButton } from 'material-ui';\n\nimport AppCacheStore from '../../stores/AppCacheStore';\nimport AppCacheActionCreators from '../../actions/AppCacheActionCreators';\n\nimport { KeyCodes } from '../../constants/ActorAppConstants';\nimport ActorTheme from '../../constants/ActorTheme';\n\nconst ThemeManager = new Styles.ThemeManager();\n\nconst appElement = document.getElementById('actor-web-app');\nModal.setAppElement(appElement);\n\nconst getStateFromStores = () => {\n  return {\n    isShown: AppCacheStore.isModalOpen()\n  };\n};\n\nclass AddContact extends React.Component {\n  static childContextTypes = {\n    muiTheme: React.PropTypes.object\n  };\n\n  getChildContext() {\n    return {\n      muiTheme: ThemeManager.getCurrentTheme()\n    };\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.state = getStateFromStores();\n\n    AppCacheStore.addChangeListener(this.onChange);\n    document.addEventListener('keydown', this.onKeyDown, false);\n\n    ThemeManager.setTheme(ActorTheme);\n  }\n\n  componentWillUnmount() {\n    AppCacheStore.removeChangeListener(this.onChange);\n    document.removeEventListener('keydown', this.onKeyDown, false);\n  }\n\n  render() {\n    return (\n      <Modal className=\"modal-new modal-new--update\"\n             closeTimeoutMS={150}\n             isOpen={this.state.isShown}\n             style={{width: 400}}>\n\n        <div className=\"modal-new__body\">\n          <h1>Update available</h1>\n          <h3>New version of Actor Web App available.</h3>\n          <p>It's already downloaded to your browser, you just need to reload tab.</p>\n        </div>\n\n        <footer className=\"modal-new__footer text-right\">\n          <FlatButton hoverColor=\"rgba(74,144,226,.12)\"\n                      label=\"Cancel\"\n                      onClick={this.onClose}\n                      secondary={true} />\n          <FlatButton hoverColor=\"rgba(74,144,226,.12)\"\n                      label=\"Reload\"\n                      onClick={this.onConfirm}\n                      secondary={true} />\n        </footer>\n\n      </Modal>\n    );\n  }\n\n  onClose = () => {\n    AppCacheActionCreators.closeModal();\n  };\n\n  onConfirm = () => {\n    AppCacheActionCreators.confirmUpdate();\n  };\n\n  onChange = () => {\n    this.setState(getStateFromStores());\n  };\n\n  onKeyDown = (event) => {\n    if (event.keyCode === KeyCodes.ESC) {\n      event.preventDefault();\n      this.onClose();\n    }\n  };\n}\n\nexport default AddContact;\n"]}