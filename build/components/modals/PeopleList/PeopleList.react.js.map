{"version":3,"sources":["../../../../src/components/modals/PeopleList/PeopleList.react.js"],"names":[],"mappings":"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","file":"PeopleList.react.js","sourcesContent":["/*\n * Copyright (C) 2015 Actor LLC. <https://actor.im>\n */\n\nimport { map, debounce } from 'lodash';\n\nimport React, { Component } from 'react';\nimport { Container } from 'flux/utils';\nimport ReactMixin from 'react-mixin';\nimport { IntlMixin } from 'react-intl';\n\nimport { KeyCodes } from '../../../constants/ActorAppConstants';\n\nimport ContactActionCreators from '../../../actions/ContactActionCreators';\nimport DialogActionCreators from '../../../actions/DialogActionCreators';\n\nimport PeopleStore from '../../../stores/PeopleStore';\n\nimport People from './PeopleItem.react';\n\nclass PeopleList extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  static getStores = () => [PeopleStore];\n\n  static calculateState() {\n    return {\n      list: PeopleStore.getList(),\n      results: PeopleStore.getResults(),\n      selectedIndex: 0\n    };\n  }\n\n  componentDidMount() {\n    this.setFocus();\n    document.addEventListener('keydown', this.handleKeyDown, false);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.handleKeyDown, false);\n  }\n\n  setFocus = () => React.findDOMNode(this.refs.search).focus();\n\n  handleClose = () => ContactActionCreators.close();\n\n  handleSearchChange = (event) => {\n    const query = event.target.value;\n    this.setState({query});\n    this.searchPeople(query)\n  };\n\n  searchPeople = debounce((query) => ContactActionCreators.search(query), 300, {trailing: true});\n\n  handleContactSelect = (contact) => {\n    DialogActionCreators.selectDialogPeerUser(contact.uid);\n    this.handleClose()\n  };\n\n  handleKeyDown = (event) => {\n    const { results, selectedIndex } = this.state;\n    let index = selectedIndex;\n\n    const selectNext = () => {\n      if (index < results.length - 1) {\n        index += 1;\n      } else if (index === results.length - 1) {\n        index = 0;\n      }\n\n      this.setState({selectedIndex: index});\n\n      const scrollContainerNode = React.findDOMNode(this.refs.results);\n      const selectedNode = React.findDOMNode(this.refs.selected);\n      const scrollContainerNodeRect = scrollContainerNode.getBoundingClientRect();\n      const selectedNodeRect = selectedNode.getBoundingClientRect();\n\n      if ((scrollContainerNodeRect.top + scrollContainerNodeRect.height) < (selectedNodeRect.top + selectedNodeRect.height)) {\n        this.handleScroll(scrollContainerNode.scrollTop + (selectedNodeRect.top + selectedNodeRect.height) - (scrollContainerNodeRect.top + scrollContainerNodeRect.height));\n      } else if (scrollContainerNodeRect.top > selectedNodeRect.top) {\n        this.handleScroll(0);\n      }\n    };\n    const selectPrev = () => {\n      if (index > 0) {\n        index -= 1;\n      } else if (index === 0) {\n        index = results.length - 1;\n      }\n\n      this.setState({selectedIndex: index});\n\n      const scrollContainerNode = React.findDOMNode(this.refs.results);\n      const selectedNode = React.findDOMNode(this.refs.selected);\n      const scrollContainerNodeRect = scrollContainerNode.getBoundingClientRect();\n      const selectedNodeRect = selectedNode.getBoundingClientRect();\n\n      if (scrollContainerNodeRect.top > selectedNodeRect.top) {\n        this.handleScroll(scrollContainerNode.scrollTop + selectedNodeRect.top - scrollContainerNodeRect.top);\n      } else if (selectedNodeRect.top > (scrollContainerNodeRect.top + scrollContainerNodeRect.height)) {\n        this.handleScroll(scrollContainerNode.scrollHeight);\n      }\n    };\n\n    switch (event.keyCode) {\n      case KeyCodes.ENTER:\n        event.stopPropagation();\n        event.preventDefault();\n        this.handleContactSelect(results[selectedIndex]);\n        break;\n\n      case KeyCodes.ARROW_UP:\n        event.stopPropagation();\n        event.preventDefault();\n        selectPrev();\n        break;\n      case KeyCodes.ARROW_DOWN:\n        event.stopPropagation();\n        event.preventDefault();\n        selectNext();\n        break;\n      case KeyCodes.TAB:\n        event.stopPropagation();\n        event.preventDefault();\n        if (event.shiftKey) {\n          selectPrev();\n        } else {\n          selectNext();\n        }\n        break;\n      default:\n    }\n  };\n\n  handleScroll = (top) => {\n    const resultsNode = React.findDOMNode(this.refs.results);\n    resultsNode.scrollTop = top;\n  };\n\n  render() {\n    const { query, results, selectedIndex, list } = this.state;\n\n    const peopleList = map(results, (result, index) => <People contact={result} key={index}\n                                                               onClick={this.handleContactSelect}\n                                                               isSelected={selectedIndex === index}\n                                                               ref={selectedIndex === index ? 'selected' : null}\n                                                               onMouseOver={() => this.setState({selectedIndex: index})}/>);\n\n    return (\n      <div className=\"newmodal newmodal__contacts\">\n        <header className=\"newmodal__header\">\n          <h2>{this.getIntlMessage('modal.contacts.title')}</h2>\n        </header>\n\n        <section className=\"newmodal__search\">\n          <input className=\"newmodal__search__input\"\n                 onChange={this.handleSearchChange}\n                 placeholder={this.getIntlMessage('modal.contacts.search')}\n                 type=\"search\"\n                 ref=\"search\"\n                 value={query}/>\n        </section>\n\n        <ul className=\"newmodal__result contacts__list\" ref=\"results\">\n          {\n            list.length === 0\n              ? <div>{this.getIntlMessage('modal.contacts.loading')}</div>\n              : results.length === 0\n              ? <li className=\"contacts__list__item contacts__list__item--empty text-center\">\n                  {this.getIntlMessage('modal.contacts.notFound')}\n                </li>\n              : peopleList\n          }\n        </ul>\n      </div>\n    )\n  }\n}\n\nReactMixin.onClass(PeopleList, IntlMixin);\n\nexport default Container.create(PeopleList, {pure: false});\n\n"]}