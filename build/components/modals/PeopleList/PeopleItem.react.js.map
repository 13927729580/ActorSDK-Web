{"version":3,"sources":["../../../../src/components/modals/PeopleList/PeopleItem.react.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAaM,UAAU;YAAV,UAAU;;AACd,WADI,UAAU,CACF,KAAK,EAAE;0BADf,UAAU;;iDAEZ,sBAAM,KAAK,CAAC;;UAUd,WAAW,GAAG,YAAM;wBACW,MAAK,KAAK;UAA/B,OAAO,eAAP,OAAO;UAAE,OAAO,eAAP,OAAO;;AACxB,aAAO,CAAC,OAAO,CAAC,CAAC;KAClB;;UAED,eAAe,GAAE,YAAM;UACb,WAAW,GAAK,MAAK,KAAK,CAA1B,WAAW;;AACnB,iBAAW,EAAE,CAAC;KACf;;;GAjBA;;AAHG,YAAU,WAuBd,MAAM,qBAAG;iBACyB,IAAI,CAAC,KAAK;QAAlC,OAAO,UAAP,OAAO;QAAE,UAAU,UAAV,UAAU;;AAC3B,QAAM,eAAe,GAAG,0BAAW,0BAA0B,EAAE;AAC7D,oCAA8B,EAAE,UAAU;KAC3C,CAAC,CAAC;;AAEH,WACE;;QAAI,SAAS,EAAE,eAAe,AAAC;AAC3B,eAAO,EAAE,IAAI,CAAC,WAAW,AAAC;AAC1B,mBAAW,EAAE,IAAI,CAAC,eAAe,AAAC;MACpC,sDAAY,KAAK,EAAE,OAAO,CAAC,MAAM,AAAC;AACtB,mBAAW,EAAE,OAAO,CAAC,WAAW,AAAC;AACjC,YAAI,EAAC,QAAQ;AACb,aAAK,EAAE,OAAO,CAAC,IAAI,AAAC,GAAE;MAElC;;UAAK,SAAS,EAAC,QAAQ;QACrB,wCAAM,SAAS,EAAC,OAAO,EAAC,uBAAuB,EAAE,EAAC,MAAM,EAAE,iCAAgB,OAAO,CAAC,IAAI,CAAC,EAAC,AAAC,GAAE;OACvF;KACH,CACL;GACH;;SA3CG,UAAU;;;AAAV,UAAU,CAKP,SAAS,GAAG;AACjB,SAAO,EAAE,iBAAU,MAAM,CAAC,UAAU;AACpC,YAAU,EAAE,iBAAU,IAAI,CAAC,UAAU;AACrC,SAAO,EAAE,iBAAU,IAAI,CAAC,UAAU;AAClC,aAAW,EAAE,iBAAU,IAAI,CAAC,UAAU;CACvC;;AAoCH,qBAAW,OAAO,CAAC,UAAU,uCAAkB,CAAC;;kBAEjC,UAAU","file":"PeopleItem.react.js","sourcesContent":["/*\n * Copyright (C) 2015 Actor LLC. <https://actor.im>\n */\n\nimport React, { Component, PropTypes } from 'react';\nimport ReactMixin from 'react-mixin';\nimport PureRenderMixin from 'react-addons-pure-render-mixin';\nimport classnames from 'classnames';\n\nimport AvatarItem from '../../common/AvatarItem.react';\n\nimport { escapeWithEmoji } from '../../../utils/EmojiUtils';\n\nclass PeopleItem extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  static propTypes = {\n    contact: PropTypes.object.isRequired,\n    isSelected: PropTypes.bool.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onMouseOver: PropTypes.func.isRequired\n  };\n\n  handleClick = () => {\n    const { contact, onClick } = this.props;\n    onClick(contact);\n  };\n\n  handleMouseOver= () => {\n    const { onMouseOver } = this.props;\n    onMouseOver();\n  };\n\n\n  render() {\n    const { contact, isSelected } = this.props;\n    const resultClassName = classnames('contacts__list__item row', {\n      'contacts__list__item--active': isSelected\n    });\n\n    return (\n      <li className={resultClassName}\n          onClick={this.handleClick}\n          onMouseOver={this.handleMouseOver}>\n        <AvatarItem image={contact.avatar}\n                    placeholder={contact.placeholder}\n                    size=\"medium\"\n                    title={contact.name}/>\n\n        <div className=\"col-xs\">\n          <span className=\"title\" dangerouslySetInnerHTML={{__html: escapeWithEmoji(contact.name)}}/>\n        </div>\n      </li>\n    );\n  }\n}\n\nReactMixin.onClass(PeopleItem, PureRenderMixin);\n\nexport default PeopleItem;\n"]}