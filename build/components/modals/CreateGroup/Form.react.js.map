{"version":3,"sources":["../../../../src/components/modals/CreateGroup/Form.react.js"],"names":[],"mappings":"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","file":"Form.react.js","sourcesContent":["/*\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\n */\n\nimport React, { Component, PropTypes } from 'react';\nimport { Container } from 'flux/utils';\nimport { FormattedMessage } from 'react-intl';\nimport fuzzaldrin from 'fuzzaldrin';\nimport { CreateGroupSteps } from '../../../constants/ActorAppConstants';\n\nimport CreateGroupActionCreators from '../../../actions/CreateGroupActionCreators';\n\nimport ContactsStore from '../../../stores/ContactsStore';\nimport CreateGroupStore from '../../../stores/CreateGroupStore';\n\nimport ContactItem from '../../common/ContactItem.react';\nimport TextField from '../../common/TextField.react';\n\nclass CreateGroupForm extends Component {\n  static contextTypes = {\n    intl: PropTypes.object\n  };\n\n  static getStores() {\n    return [CreateGroupStore, ContactsStore];\n  }\n\n  static calculateState() {\n    return {\n      step: CreateGroupStore.getCurrentStep(),\n      name: CreateGroupStore.getGroupName(),\n      selectedUserIds: CreateGroupStore.getSelectedUserIds(),\n      contacts: ContactsStore.getState()\n    };\n  }\n\n  componentDidMount() {\n    if (this.state.step === CreateGroupSteps.NAME_INPUT) {\n      this.refs.groupName.focus();\n    }\n  }\n\n  getContacts() {\n    const { contacts, search } = this.state;\n\n    return fuzzaldrin.filter(contacts, search, {\n      key: 'name'\n    });\n  }\n\n  renderContacts() {\n    const { intl } = this.context;\n    const { selectedUserIds } = this.state;\n    const contacts = this.getContacts();\n\n    if (!contacts.length) {\n      return (\n        <li className=\"contacts__list__item contacts__list__item--empty text-center\">\n          {intl.messages['inviteModalNotFound']}\n        </li>\n      );\n    }\n\n    return contacts.map((contact, i) => {\n      const isSelected = selectedUserIds.has(contact.uid);\n      const icon = isSelected ? 'check_box' : 'check_box_outline_blank';\n\n      return (\n        <ContactItem {...contact} key={i}>\n          <a className=\"material-icons\" onClick={() => this.onContactToggle(contact, !isSelected)}>\n            {icon}\n          </a>\n        </ContactItem>\n      );\n    });\n  }\n\n  onContactToggle = (contact, isSelected) => {\n    const { selectedUserIds } = this.state;\n\n    if (isSelected) {\n      CreateGroupActionCreators.setSelectedUserIds(selectedUserIds.add(contact.uid));\n    } else {\n      CreateGroupActionCreators.setSelectedUserIds(selectedUserIds.remove(contact.uid));\n    }\n  };\n\n  handleNameChange = event => {\n    event.preventDefault();\n\n    this.setState({name: event.target.value});\n  };\n\n  handleNameSubmit = event => {\n    event.preventDefault();\n\n    const { name } = this.state;\n    const trimmedName = name.trim();\n\n    if (trimmedName.length > 0) {\n      CreateGroupActionCreators.setGroupName(trimmedName);\n    }\n  };\n\n  handleCreateGroup = event => {\n    const { name, selectedUserIds } = this.state;\n\n    event.preventDefault();\n    CreateGroupActionCreators.createGroup(name, null, selectedUserIds.toJS());\n  };\n\n  onSearchChange = (e) => {\n    this.setState({search: e.target.value});\n  };\n\n  render() {\n    const { step, name, selectedUserIds, search } = this.state;\n    const { intl } = this.context;\n    let stepForm;\n\n    switch (step) {\n      case CreateGroupSteps.NAME_INPUT:\n        stepForm = (\n          <form className=\"group-name\">\n            <div className=\"modal-new__body\">\n              <TextField className=\"input__material--wide\"\n                         floatingLabel={intl.messages['modal.createGroup.groupName']}\n                         ref=\"groupName\"\n                         onChange={this.handleNameChange}\n                         value={name}/>\n            </div>\n\n            <footer className=\"modal-new__footer text-right\">\n              <button className=\"button button--lightblue\"\n                      onClick={this.handleNameSubmit}>\n                {intl.messages['button.addMembers']}\n              </button>\n            </footer>\n\n          </form>\n        );\n        break;\n\n      case CreateGroupSteps.CONTACTS_SELECTION:\n      case CreateGroupSteps.CREATION_STARTED:\n        stepForm = (\n          <form className=\"group-members\">\n            <div className=\"modal-new__body\">\n              {/*TODO: refactor this!!! */}\n              <div className=\"modal-new__search\">\n                <i className=\"material-icons\">search</i>\n                <input className=\"input input--search\"\n                       onChange={this.onSearchChange}\n                       placeholder={intl.messages['inviteModalSearch']}\n                       type=\"search\"\n                       value={search}/>\n              </div>\n\n              <ul className=\"contacts__list\">\n                {this.renderContacts()}\n              </ul>\n            </div>\n\n            <footer className=\"modal-new__footer \">\n              <span className=\"pull-left\">\n                {\n                  step === CreateGroupSteps.CONTACTS_SELECTION ||\n                  step === CreateGroupSteps.CREATION_STARTED\n                    ? <div className=\"count\">\n                        <FormattedMessage id=\"members\" values={{numMembers: selectedUserIds.size}}/>\n                      </div>\n                    : null\n                }\n              </span>\n              <span className=\"text-right\">\n                {\n                  step === CreateGroupSteps.CREATION_STARTED\n                    ? <button className=\"button button--lightblue\"\n                              disabled>{intl.messages['button.createGroup']}</button>\n                    : <button className=\"button button--lightblue\"\n                              onClick={this.handleCreateGroup}>{intl.messages['button.createGroup']}</button>\n                }\n              </span>\n\n            </footer>\n          </form>\n        );\n        break;\n      default:\n    }\n\n    return stepForm;\n  }\n}\n\nexport default Container.create(CreateGroupForm, {pure: false});\n"]}