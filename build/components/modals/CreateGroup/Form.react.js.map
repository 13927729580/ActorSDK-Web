{"version":3,"sources":["../../../../src/components/modals/CreateGroup/Form.react.js"],"names":[],"mappings":"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","file":"Form.react.js","sourcesContent":["/*\n * Copyright (C) 2015 Actor LLC. <https://actor.im>\n */\n\nimport _ from 'lodash';\n\nimport React, { Component, PropTypes } from 'react';\nimport { Container } from 'flux/utils';\nimport ReactMixin from 'react-mixin';\nimport { IntlMixin, FormattedMessage } from 'react-intl';\nimport { CreateGroupSteps } from '../../../constants/ActorAppConstants';\n\nimport { Styles, TextField, FlatButton } from 'material-ui';\n\nimport CreateGroupActionCreators from '../../../actions/CreateGroupActionCreators';\n\nimport ContactStore from '../../../stores/PeopleStore';\nimport CreateGroupStore from '../../../stores/CreateGroupStore';\n\nimport ContactItem from './ContactItem.react';\n\nimport ActorTheme from '../../../constants/ActorTheme';\n\nconst ThemeManager = new Styles.ThemeManager();\n\nclass CreateGroupForm extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  static childContextTypes = {\n    muiTheme: PropTypes.object\n  };\n\n  static getStores() {\n    return [CreateGroupStore];\n  }\n\n  static calculateState() {\n    return {\n      step: CreateGroupStore.getCurrentStep(),\n      name: CreateGroupStore.getGroupName(),\n      selectedUserIds: CreateGroupStore.getSelectedUserIds(),\n      contacts: ContactStore.getList()\n    }\n  }\n\n  getChildContext() {\n    return {\n      muiTheme: ThemeManager.getCurrentTheme()\n    };\n  }\n\n  componentWillMount() {\n    ThemeManager.setTheme(ActorTheme);\n    ThemeManager.setComponentThemes({\n      textField: {\n        textColor: 'rgba(0,0,0,.87)',\n        focusColor: '#68a3e7',\n        backgroundColor: 'transparent',\n        borderColor: '#68a3e7'\n      }\n    });\n  }\n\n  componentDidMount() {\n    if (this.state.step === CreateGroupSteps.NAME_INPUT) {\n      setTimeout(() => {\n        this.refs.groupName.focus();\n      }, 10);\n    }\n  }\n\n  onContactToggle = (contact, isSelected) => {\n    const { selectedUserIds } = this.state;\n\n    if (isSelected) {\n      CreateGroupActionCreators.setSelectedUserIds(selectedUserIds.add(contact.uid));\n    } else {\n      CreateGroupActionCreators.setSelectedUserIds(selectedUserIds.remove(contact.uid));\n    }\n  };\n\n  handleNameChange = event => {\n    event.preventDefault();\n\n    this.setState({name: event.target.value});\n  };\n\n  handleNameSubmit = event => {\n    event.preventDefault();\n\n    const { name } = this.state;\n    const trimmedName = name.trim();\n\n    if (trimmedName.length > 0) {\n      CreateGroupActionCreators.setGroupName(trimmedName);\n    }\n  };\n\n  handleCreateGroup = event => {\n    const { name, selectedUserIds } = this.state;\n\n    event.preventDefault();\n    CreateGroupActionCreators.createGroup(name, null, selectedUserIds.toJS());\n  };\n\n  render() {\n    const { step, name, selectedUserIds, contacts } = this.state;\n    let stepForm;\n\n    switch (step) {\n      case CreateGroupSteps.NAME_INPUT:\n        stepForm = (\n          <form className=\"group-name\">\n            <div className=\"modal-new__body\">\n              <TextField className=\"login__form__input\"\n                         floatingLabelText={this.getIntlMessage('modal.createGroup.groupName')}\n                         fullWidth\n                         ref=\"groupName\"\n                         onChange={this.handleNameChange}\n                         value={name}/>\n            </div>\n\n            <footer className=\"modal-new__footer text-right\">\n              <button className=\"button button--lightblue\"\n                      onClick={this.handleNameSubmit}>\n                {this.getIntlMessage('button.addMembers')}\n              </button>\n            </footer>\n\n          </form>\n        );\n        break;\n\n      case CreateGroupSteps.CONTACTS_SELECTION:\n      case CreateGroupSteps.CREATION_STARTED:\n        let contactList = _.map(contacts, (contact, i) => {\n          return (\n            <ContactItem contact={contact} key={i} onToggle={this.onContactToggle}/>\n          );\n        });\n        stepForm = (\n          <form className=\"group-members\">\n            <div className=\"count\">\n              <FormattedMessage message={this.getIntlMessage('members')} numMembers={selectedUserIds.size}/>\n            </div>\n\n            <div className=\"modal-new__body\">\n              <ul className=\"contacts__list\">\n                {contactList}\n              </ul>\n            </div>\n\n            <footer className=\"modal-new__footer text-right\">\n              {\n                step === CreateGroupSteps.CREATION_STARTED\n                  ? <button className=\"button button--lightblue\"\n                            disabled>{this.getIntlMessage('button.createGroup')}</button>\n                  : <button className=\"button button--lightblue\"\n                            onClick={this.handleCreateGroup}>{this.getIntlMessage('button.createGroup')}</button>\n              }\n\n            </footer>\n\n          </form>\n        );\n        break;\n      default:\n    }\n\n    return stepForm;\n  }\n}\n\nReactMixin.onClass(CreateGroupForm, IntlMixin);\n\nexport default Container.create(CreateGroupForm, {pure: false});\n"]}