{"version":3,"sources":["../../../../src/components/modals/CreateGroup/CreateGroup.react.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAiBM,WAAW;YAAX,WAAW;;AACf,WADI,WAAW,CACH,KAAK,EAAE;0BADf,WAAW;;uEAAX,WAAW,aAEP,KAAK;;UAkBb,WAAW,GAAG;aAAM,oCAA0B,KAAK,EAAE;KAAA;;UAErD,aAAa,GAAG,UAAC,KAAK,EAAK;AACzB,UAAI,KAAK,CAAC,OAAO,KAAK,4BAAS,GAAG,EAAE;AAClC,aAAK,CAAC,cAAc,EAAE,CAAC;AACvB,cAAK,WAAW,EAAE,CAAC;OACpB;KACF;;;GAxBA;;eAHG,WAAW;;yCAYM;AACnB,cAAQ,CAAC,gBAAgB,CAAC,SAAS,EAAE,IAAI,CAAC,aAAa,EAAE,KAAK,CAAC,CAAC;KACjE;;;2CAEsB;AACrB,cAAQ,CAAC,mBAAmB,CAAC,SAAS,EAAE,IAAI,CAAC,aAAa,EAAE,KAAK,CAAC,CAAC;KACpE;;;6BAWQ;UACC,MAAM,GAAK,IAAI,CAAC,KAAK,CAArB,MAAM;;AAEd,aACE;;UAAO,SAAS,EAAC,mCAAmC;AAC7C,wBAAc,EAAE,GAAG,AAAC;AACpB,gBAAM,EAAE,MAAM,AAAC;AACf,eAAK,EAAE,EAAC,KAAK,EAAE,GAAG,EAAC,AAAC;QAEzB;;YAAQ,SAAS,EAAC,mBAAmB;UACnC;;cAAI,SAAS,EAAC,0BAA0B;YAAE,IAAI,CAAC,cAAc,CAAC,yBAAyB,CAAC;WAAM;UAC9F;;cAAG,SAAS,EAAC,4EAA4E;AACtF,qBAAO,EAAE,IAAI,CAAC,WAAW,AAAC;;WAAU;SAChC;QAET,mDAAkB;OAEZ,CACR;KACH;;;qCA1CuB;AACtB,aAAO;AACL,cAAM,EAAE,2BAAiB,WAAW,EAAE;OACvC,CAAC;KACH;;;SAVG,WAAW;;;AAAX,WAAW,CAKR,SAAS,GAAG;SAAM,4BAAkB;CAAA;;AA8C7C,qBAAW,OAAO,CAAC,WAAW,uBAAY,CAAC;;kBAE5B,iBAAU,MAAM,CAAC,WAAW,CAAC","file":"CreateGroup.react.js","sourcesContent":["/*\n * Copyright (C) 2015 Actor LLC. <https://actor.im>\n */\n\nimport React, { Component } from 'react';\nimport { Container } from 'flux/utils';\nimport ReactMixin from 'react-mixin';\nimport { IntlMixin } from 'react-intl';\nimport Modal from 'react-modal';\nimport { KeyCodes } from '../../../constants/ActorAppConstants';\n\nimport CreateGroupActionCreators from '../../../actions/CreateGroupActionCreators';\n\nimport CreateGroupStore from '../../../stores/CreateGroupStore';\n\nimport CreateGroupForm from './Form.react';\n\nclass CreateGroup extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  static getStores = () => [CreateGroupStore];\n  static calculateState() {\n    return {\n      isOpen: CreateGroupStore.isModalOpen()\n    };\n  }\n\n  componentWillMount() {\n    document.addEventListener('keydown', this.handleKeyDown, false);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.handleKeyDown, false);\n  }\n\n  handleClose = () => CreateGroupActionCreators.close();\n\n  handleKeyDown = (event) => {\n    if (event.keyCode === KeyCodes.ESC) {\n      event.preventDefault();\n      this.handleClose();\n    }\n  };\n\n  render() {\n    const { isOpen } = this.state;\n\n    return (\n      <Modal className=\"modal-new modal-new--create-group\"\n             closeTimeoutMS={150}\n             isOpen={isOpen}\n             style={{width: 350}}>\n\n        <header className=\"modal-new__header\">\n          <h3 className=\"modal-new__header__title\">{this.getIntlMessage('modal.createGroup.title')}</h3>\n          <a className=\"modal-new__header__close modal-new__header__icon material-icons pull-right\"\n             onClick={this.handleClose}>clear</a>\n        </header>\n\n        <CreateGroupForm/>\n\n      </Modal>\n    );\n  }\n}\n\nReactMixin.onClass(CreateGroup, IntlMixin);\n\nexport default Container.create(CreateGroup);\n"]}