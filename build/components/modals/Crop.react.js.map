{"version":3,"sources":["../../../src/components/modals/Crop.react.js"],"names":[],"mappings":"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","file":"Crop.react.js","sourcesContent":["/*\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\n */\n\nimport React, { Component } from 'react';\nimport { findDOMNode } from 'react-dom';\nimport { Container } from 'flux/utils';\nimport { dataURItoBlob } from '../../utils/ImageUtils';\nimport { FormattedMessage } from 'react-intl';\nimport Modal from 'react-modal';\n\nimport CropActionCreators from '../../actions/CropActionCreators';\n\nimport CropStore from '../../stores/CropAvatarStore';\n\nimport ModalCloseButton from './ModalCloseButton.react';\n\nconst MIN_CROP_SIZE = 100;\n\nclass CropAvatarModal extends Component {\n  static getStores() {\n    return [CropStore];\n  }\n\n  static calculateState() {\n    return {\n      pictureSource: CropStore.getState().source,\n      callback: CropStore.getState().callback,\n      cropPosition: {\n        x: 0,\n        y: 0\n      },\n      cropSize: 200,\n      scaledWidth: 0,\n      scaledHeight: 0,\n      naturalWidth: 0,\n      naturalHeight: 0,\n      maxImageHeight: (document.body.clientHeight * .9) - 64 // 64 is modal header height.\n    };\n  }\n\n  componentDidMount() {\n    const originalImage = findDOMNode(this.refs.originalImage);\n    window.addEventListener('resize', this.storeScaledSizes, false);\n    originalImage.addEventListener('load', this.storeScaledSizes, false);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.storeScaledSizes, false);\n  }\n\n  handleClose = () => CropActionCreators.hide();\n\n  onStartMoving = (event) => {\n    const { cropPosition } = this.state;\n\n    event.preventDefault();\n\n    const wrapper = findDOMNode(this.refs.wrapper);\n    const wrapperRect = wrapper.getBoundingClientRect();\n\n    const dragOffset = {\n      x: (event.pageX - wrapperRect.left) - cropPosition.x,\n      y: (event.pageY - wrapperRect.top) - cropPosition.y\n    };\n    this.setState({ dragOffset });\n\n    wrapper.addEventListener('mousemove', this.onMoving);\n    wrapper.addEventListener('touchmove', this.onMoving);\n  };\n  onMoving = (event) => {\n    const { dragOffset, cropSize } = this.state;\n    const wrapper = findDOMNode(this.refs.wrapper);\n    const wrapperRect = wrapper.getBoundingClientRect();\n\n    let cropPosition = {\n      x: (event.pageX - wrapperRect.left) - dragOffset.x,\n      y: (event.pageY - wrapperRect.top) - dragOffset.y\n    };\n\n    if (cropPosition.x < 0) {\n      cropPosition.x = 0;\n    } else if (cropPosition.x > wrapperRect.width - cropSize) {\n      cropPosition.x = wrapperRect.width - cropSize;\n    }\n\n    if (cropPosition.y < 0) {\n      cropPosition.y = 0;\n    } else if (cropPosition.y > wrapperRect.height - cropSize) {\n      cropPosition.y = wrapperRect.height - cropSize;\n    }\n\n    this.setState({ cropPosition })\n  };\n\n  onStartResizeTop = (event) => {\n    const wrapper = findDOMNode(this.refs.wrapper);\n    const resizeLastCoord = event.pageY;\n    event.preventDefault();\n    this.setState({ resizeLastCoord });\n    wrapper.addEventListener('mousemove', this.onResizeTop);\n    wrapper.addEventListener('touchmove', this.onResizeTop);\n  };\n\n  onStartResizeRight = (event) => {\n    const wrapper = findDOMNode(this.refs.wrapper);\n    const resizeLastCoord = event.pageX;\n    event.preventDefault();\n    this.setState({ resizeLastCoord });\n    wrapper.addEventListener('mousemove', this.onResizeRight);\n    wrapper.addEventListener('touchmove', this.onResizeRight);\n  };\n\n  onStartResizeBottom = (event) => {\n    const wrapper = findDOMNode(this.refs.wrapper);\n    const resizeLastCoord = event.pageY;\n    event.preventDefault();\n    this.setState({ resizeLastCoord });\n    wrapper.addEventListener('mousemove', this.onResizeBottom);\n    wrapper.addEventListener('touchmove', this.onResizeBottom);\n  };\n\n  onStartResizeLeft = (event) => {\n    const wrapper = findDOMNode(this.refs.wrapper);\n    const resizeLastCoord = event.pageX;\n    event.preventDefault();\n    this.setState({ resizeLastCoord });\n    wrapper.addEventListener('mousemove', this.onResizeLeft);\n    wrapper.addEventListener('touchmove', this.onResizeLeft);\n  };\n\n  onResizeTop = (event) => this.onCropResize(event, 'TOP');\n  onResizeRight = (event) => this.onCropResize(event, 'RIGHT');\n  onResizeBottom = (event) => this.onCropResize(event, 'BOTTOM');\n  onResizeLeft = (event) => this.onCropResize(event, 'LEFT');\n\n  onCropResize = (event, direction) => {\n    const { cropPosition, resizeLastCoord, cropSize, scaledWidth, scaledHeight } = this.state;\n    const axisCoord = (direction === 'RIGHT' || direction === 'LEFT') ? event.pageX : event.pageY;\n    const resizeValue = resizeLastCoord - axisCoord;\n\n    let resizeCropPosition, resizedCropSize;\n    switch (direction) {\n      case 'TOP':\n        resizedCropSize = cropSize + resizeValue;\n        resizeCropPosition = {\n          x: cropPosition.x - (resizeValue / 2),\n          y: cropPosition.y - resizeValue\n        };\n        break;\n      case 'RIGHT':\n        resizedCropSize = cropSize - resizeValue;\n        resizeCropPosition = {\n          x: cropPosition.x,\n          y: cropPosition.y + (resizeValue / 2)\n        };\n        break;\n      case 'BOTTOM':\n        resizedCropSize = cropSize - resizeValue;\n        resizeCropPosition = {\n          x: cropPosition.x + (resizeValue / 2),\n          y: cropPosition.y\n        };\n        break;\n      case 'LEFT':\n        resizedCropSize = cropSize + resizeValue;\n        resizeCropPosition = {\n          x: cropPosition.x - resizeValue,\n          y: cropPosition.y - (resizeValue / 2)\n        };\n        break;\n      default:\n    }\n\n    if (resizedCropSize < MIN_CROP_SIZE || resizedCropSize > scaledWidth || resizedCropSize > scaledHeight) {\n      resizedCropSize = cropSize;\n      resizeCropPosition = cropPosition;\n    }\n\n    this.setState({ resizeLastCoord: axisCoord });\n    this.updateCropSize(resizedCropSize, resizeCropPosition);\n  };\n\n  removeListeners = () => {\n    const wrapper = findDOMNode(this.refs.wrapper);\n\n    wrapper.removeEventListener('mousemove', this.onMoving);\n    wrapper.removeEventListener('touchmove', this.onMoving);\n    wrapper.removeEventListener('mousemove', this.onResizeTop);\n    wrapper.removeEventListener('touchmove', this.onResizeTop);\n    wrapper.removeEventListener('mousemove', this.onResizeRight);\n    wrapper.removeEventListener('touchmove', this.onResizeRight);\n    wrapper.removeEventListener('mousemove', this.onResizeBottom);\n    wrapper.removeEventListener('touchmove', this.onResizeBottom);\n    wrapper.removeEventListener('mousemove', this.onResizeLeft);\n    wrapper.removeEventListener('touchmove', this.onResizeLeft);\n  };\n\n  updateCropSize = (cropSize, cropPosition) => this.setState({ cropSize, cropPosition });\n\n  onCrop = () => {\n    const { cropPosition, cropSize, scaleRatio, callback } = this.state;\n    const cropImage = findDOMNode(this.refs.cropImage);\n    let canvas = document.createElement('canvas');\n    let context = canvas.getContext('2d');\n\n    canvas.width = canvas.height = cropSize;\n\n    context.drawImage(cropImage, cropPosition.x / scaleRatio, cropPosition.y / scaleRatio, cropSize / scaleRatio, cropSize / scaleRatio, 0, 0, cropSize, cropSize);\n\n    const croppedImage = dataURItoBlob(canvas.toDataURL());\n\n    callback && callback(croppedImage);\n    this.handleClose();\n  };\n\n  storeScaledSizes = () => {\n    const { cropSize } = this.state;\n    const originalImage = findDOMNode(this.refs.originalImage);\n    const scaledWidth = originalImage.width;\n    const scaledHeight = originalImage.height;\n    const naturalWidth = originalImage.naturalWidth;\n    const naturalHeight = originalImage.naturalHeight;\n    const scaleRatio = scaledWidth/naturalWidth;\n    const cropPosition = {\n      x: ((naturalWidth / 2) - (cropSize / 2)) * scaleRatio,\n      y: ((naturalHeight / 2) - (cropSize / 2)) * scaleRatio\n    };\n\n    this.setState({ cropPosition, scaledWidth, scaledHeight, naturalWidth, naturalHeight, scaleRatio });\n  };\n\n  renderControls() {\n    return (\n      <div className=\"controls\">\n        <button className=\"button\" onClick={this.handleClose}>\n          <FormattedMessage id=\"button.cancel\"/>\n        </button>\n        <button className=\"button button--rised\" onClick={this.onCrop}>\n          <FormattedMessage id=\"button.done\"/>\n        </button>\n      </div>\n    );\n  }\n\n  render() {\n    const { pictureSource, cropPosition, cropSize, scaledWidth, scaledHeight, maxImageHeight } = this.state;\n\n    return (\n      <Modal\n        overlayClassName=\"modal-overlay modal-overlay--white\"\n        className=\"modal modal--fullscreen\"\n        onRequestClose={this.handleClose}\n        shouldCloseOnOverlayClick={false}\n        isOpen>\n\n        <ModalCloseButton onClick={this.handleClose}/>\n\n        <div className=\"crop\">\n          <div className=\"modal__content\">\n\n            <header className=\"modal__header\">\n                <FormattedMessage id=\"modal.crop.title\" tagName=\"h1\"/>\n            </header>\n\n            <div className=\"modal__body\">\n              <div className=\"crop-wrapper\"\n                   ref=\"wrapper\"\n                   onTouchEnd={this.removeListeners}\n                   onMouseUp={this.removeListeners}>\n                <div className=\"crop-wrapper__scale\"\n                     style={{ width: cropSize, height: cropSize, left: cropPosition.x, top: cropPosition.y }}>\n                  <div className=\"crop-wrapper__scale__handler crop-wrapper__scale__handler--top\"\n                       onMouseDown={this.onStartResizeTop}\n                       onTouchStart={this.onStartResizeTop}/>\n                  <div className=\"crop-wrapper__scale__handler crop-wrapper__scale__handler--right\"\n                       onMouseDown={this.onStartResizeRight}\n                       onTouchStart={this.onStartResizeRight}/>\n                  <div className=\"crop-wrapper__scale__handler crop-wrapper__scale__handler--bottom\"\n                       onMouseDown={this.onStartResizeBottom}\n                       onTouchStart={this.onStartResizeBottom}/>\n                  <div className=\"crop-wrapper__scale__handler crop-wrapper__scale__handler--left\"\n                       onMouseDown={this.onStartResizeLeft}\n                       onTouchStart={this.onStartResizeLeft}/>\n                </div>\n                <div className=\"crop-wrapper__overlay\"\n                     onMouseDown={this.onStartMoving}\n                     onTouchStart={this.onStartMoving}\n                     style={{ width: cropSize, height: cropSize, left: cropPosition.x, top: cropPosition.y }}>\n                  <img className=\"crop-wrapper__image-crop\"\n                       draggable=\"false\"\n                       ref=\"cropImage\"\n                       src={pictureSource}\n                       style={{ left: -cropPosition.x, top: -cropPosition.y, width: scaledWidth, height: scaledHeight }}/>\n                </div>\n\n                <img\n                  className=\"crop-wrapper__image-original\"\n                  draggable=\"false\"\n                  ref=\"originalImage\"\n                  src={pictureSource}\n                  style={{ maxHeight: maxImageHeight }}/>\n              </div>\n            </div>\n\n            <footer className=\"modal__footer\">\n              {this.renderControls()}\n            </footer>\n\n          </div>\n        </div>\n\n      </Modal>\n    );\n  }\n}\n\nexport default Container.create(CropAvatarModal);\n"]}