{"version":3,"sources":["../../../src/components/modals/CallModal.react.js"],"names":[],"mappings":"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","file":"CallModal.react.js","sourcesContent":["/*\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\n */\n\nimport React, { Component } from 'react';\nimport { Container } from 'flux/utils';\nimport Modal from 'react-modal';\n import { FormattedMessage } from 'react-intl';\nimport AvatarItem from '../common/AvatarItem.react';\n\nimport { KeyCodes, CallStates } from '../../constants/ActorAppConstants';\n\nimport CallActionCreators from '../../actions/CallActionCreators';\n\nimport CallStore from '../../stores/CallStore';\nimport UserStore from '../../stores/UserStore';\n\nclass CallModal extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  static getStores = () => [CallStore];\n\n  static calculateState() {\n    return {\n      isOpen: CallStore.isOpen(),\n      isOutgoing: CallStore.isOutgoing(),\n      callId: CallStore.getId(),\n      callMembers: CallStore.getMembers(),\n      callPeer: CallStore.getPeer(),\n      callState: CallStore.getState()\n    };\n  }\n\n  handleClose = () => CallActionCreators.hide();\n\n  onKeyDown = (event) => {\n    if (event.keyCode === KeyCodes.ESC) {\n      event.preventDefault();\n      this.handleClose();\n    }\n  };\n\n  handleAnswer = () => {\n    const { callId } = this.state;\n    CallActionCreators.answerCall(callId);\n  };\n\n  handleEnd = () => {\n    const { callId } = this.state;\n    CallActionCreators.endCall(callId);\n    //this.handleClose();\n  };\n\n  handleMute = () => {\n    console.debug('handleMute');\n  };\n\n  render() {\n    const { isOpen, isOutgoing, callPeer, callMembers, callState } = this.state;\n    const peerInfo = callPeer ? ( callPeer.type == \"user\" ? UserStore.getUser(callPeer.id) : null) : null;\n\n    const modalStyles = {\n      content : {\n        position: null,\n        top: null,\n        left: null,\n        right: null,\n        bottom: null,\n        border: null,\n        background: null,\n        overflow: null,\n        outline: null,\n        padding: null,\n        borderRadius: null,\n        width: 240,\n        minWidth: 240\n      }\n    };\n\n    const modalBody = peerInfo ? (\n      <div>\n        <AvatarItem image={peerInfo.avatar} placeholder={peerInfo.placeholder}\n                    size=\"big\" title={peerInfo.name}/>\n        <h4 className=\"caller-name\">{peerInfo.name}</h4>\n      </div>\n    ) : null;\n\n    let modalFooter;\n    switch (callState) {\n      case CallStates.CALLING:\n        modalFooter = (\n          <div>\n            {\n              isOutgoing\n                ? null\n                : <button className=\"button button--rised button--wide\" onClick={this.handleAnswer}>\n                    <FormattedMessage id=\"call.answer\"/>\n                  </button>\n            }\n            <button className=\"button button--rised button--wide\" onClick={this.handleEnd}>\n              {\n                isOutgoing\n                  ? <FormattedMessage id=\"button.cancel\"/>\n                  : <FormattedMessage id=\"call.decline\"/>\n              }\n            </button>\n          </div>\n        );\n        break;\n      case CallStates.IN_PROGRESS:\n      case CallStates.CONNECTING:\n        modalFooter = (\n          <div>\n            <button className=\"button button--rised button--wide\" onClick={this.handleMute}>\n              <FormattedMessage id=\"call.mute\"/>\n            </button>\n            <button className=\"button button--rised button--wide\" onClick={this.handleEnd}>\n              <FormattedMessage id=\"call.end\"/>\n            </button>\n          </div>\n        );\n        break;\n      case CallStates.ENDED:\n        modalFooter = (\n          <div>\n            <button className=\"button button--rised button--wide\" onClick={this.handleClose}>\n              <FormattedMessage id=\"button.close\"/>\n            </button>\n          </div>\n        );\n        break;\n      default:\n    }\n\n    if (isOpen) {\n      return (\n        <Modal className=\"modal-new modal-new--call\"\n               closeTimeoutMS={150}\n               style={modalStyles}\n               isOpen={isOpen}>\n\n          <div className=\"modal-new__header\">\n            <h3 className=\"modal-new__header__title\">\n              {\n                isOutgoing\n                  ? <FormattedMessage id=\"call.outgoing\"/>\n                  : <FormattedMessage id=\"call.incoming\"/>\n              }\n            </h3>\n          </div>\n\n          <div className=\"modal-new__body\">\n            {/* <small>STATE: {callState}</small> */}\n            {modalBody}\n          </div>\n\n          <div className=\"modal-new__footer\">\n            {modalFooter}\n          </div>\n        </Modal>\n      );\n    } else {\n      return null;\n    }\n  }\n}\n\nexport default Container.create(CallModal, {pure: false});\n"]}