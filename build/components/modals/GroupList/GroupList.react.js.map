{"version":3,"sources":["../../../../src/components/modals/GroupList/GroupList.react.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAkBM,SAAS;YAAT,SAAS;;AACb,WADI,SAAS,CACD,KAAK,EAAE;0BADf,SAAS;;uEAAT,SAAS,aAEL,KAAK;;UAgBb,WAAW,GAAG;aAAM,kCAAwB,KAAK,EAAE;KAAA;;UACnD,kBAAkB,GAAG,UAAC,KAAK;aAAK,kCAAwB,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;KAAA;;UAElF,iBAAiB,GAAG,UAAC,IAAI,EAAK;AAC5B,qCAAqB,gBAAgB,CAAC,IAAI,CAAC,CAAC;AAC5C,YAAK,WAAW,EAAE,CAAA;KACnB;;;GArBA;;eAHG,SAAS;;wCAcO;AAClB,sBAAM,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,KAAK,EAAE,CAAC;KAC7C;;;6BAWQ;;;mBACyB,IAAI,CAAC,KAAK;UAAlC,MAAM,UAAN,MAAM;UAAE,WAAW,UAAX,WAAW;;AAE3B,UAAI,SAAS,GAAG,EAAE,CAAC;;AAEnB,kBA9CK,OAAO,EA8CJ,MAAM,EAAE,UAAC,KAAK,EAAE,CAAC,EAAK;AAC5B,YAAM,KAAK,GAAG,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC;AACjD,YAAI,KAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC,EAAE;AAC7C,mBAAS,CAAC,IAAI,CACZ,iDAAO,KAAK,EAAE,KAAK,AAAC,EAAC,GAAG,EAAE,CAAC,AAAC,EAAC,OAAO,EAAE,OAAK,iBAAiB,AAAC,GAAE,CAChE,CAAC;SACH;OACF,EAAE,IAAI,CAAC,CAAC;;AAET,UAAI,SAAS,CAAC,MAAM,KAAK,CAAC,EAAE;AAC1B,iBAAS,CAAC,IAAI,CACZ;;YAAI,SAAS,EAAC,wDAAwD;UACpE,yCArDU,oBAAoB;AAsD5B,mBAAO,EAAE,IAAI,CAAC,cAAc,CAAC,uBAAuB,CAAC,AAAC;AACtD,iBAAK,EAAE,WAAW,AAAC,GAAG;SACrB,CACN,CAAC;OACH;;AAED,aACE;;UAAK,SAAS,EAAC,2BAA2B;QACxC;;YAAQ,SAAS,EAAC,kBAAkB;UAClC;;;YAAK,IAAI,CAAC,cAAc,CAAC,oBAAoB,CAAC;WAAM;SAC7C;QAET;;YAAS,SAAS,EAAC,kBAAkB;UACnC,yCAAO,SAAS,EAAC,yBAAyB;AACnC,oBAAQ,EAAE,IAAI,CAAC,kBAAkB,AAAC;AAClC,uBAAW,EAAE,IAAI,CAAC,cAAc,CAAC,qBAAqB,CAAC,AAAC;AACxD,gBAAI,EAAC,QAAQ;AACb,eAAG,EAAC,QAAQ;AACZ,iBAAK,EAAE,WAAW,AAAC,GAAE;SACpB;QAEV;;YAAI,SAAS,EAAC,8BAA8B;UAExC,MAAM,CAAC,MAAM,KAAK,CAAC,GACf;;;YAAM,IAAI,CAAC,cAAc,CAAC,sBAAsB,CAAC;WAAO,GACxD,SAAS;SAEZ;OACD,CACP;KACF;;;qCApEuB;AACtB,aAAO;AACL,cAAM,EAAE,yBAAe,OAAO,EAAE;AAChC,mBAAW,EAAE,yBAAe,cAAc,EAAE;OAC7C,CAAC;KACH;;;SAZG,SAAS;UAZC,SAAS;;AAYnB,SAAS,CAKN,SAAS,GAAG;SAAM,0BAAgB;CAAA;;AAyE3C,qBAAW,OAAO,CAAC,SAAS,aAvFnB,SAAS,CAuFsB,CAAC;;kBAE1B,OA3FN,SAAS,CA2FO,MAAM,CAAC,SAAS,EAAE,EAAC,IAAI,EAAE,KAAK,EAAC,CAAC","file":"GroupList.react.js","sourcesContent":["/*\n * Copyright (C) 2015 Actor LLC. <https://actor.im>\n */\n\nimport { forEach } from 'lodash';\n\nimport React, { Component } from 'react';\nimport { Container } from 'flux/utils';\nimport ReactMixin from 'react-mixin';\nimport { IntlMixin, FormattedHTMLMessage } from 'react-intl';\n\nimport GroupListActionCreators from '../../../actions/GroupListActionCreators'\nimport DialogActionCreators from '../../../actions/DialogActionCreators'\n\nimport GroupListStore from '../../../stores/GroupListStore';\n\nimport Group from './Group.react';\n\nclass GroupList extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  static getStores = () => [GroupListStore];\n\n  static calculateState() {\n    return {\n      groups: GroupListStore.getList(),\n      searchQuery: GroupListStore.getSearchQuery()\n    };\n  }\n\n  componentDidMount() {\n    React.findDOMNode(this.refs.search).focus();\n  }\n\n  handleClose = () => GroupListActionCreators.close();\n  handleSearchChange = (event) => GroupListActionCreators.search(event.target.value);\n\n  handleGroupSelect = (peer) => {\n    DialogActionCreators.selectDialogPeer(peer);\n    this.handleClose()\n  };\n\n\n  render() {\n    const { groups, searchQuery } = this.state;\n\n    let groupList = [];\n\n    forEach(groups, (group, i) => {\n      const title = group.peerInfo.title.toLowerCase();\n      if (title.includes(searchQuery.toLowerCase())) {\n        groupList.push(\n          <Group group={group} key={i} onClick={this.handleGroupSelect}/>\n        );\n      }\n    }, this);\n\n    if (groupList.length === 0) {\n      groupList.push(\n        <li className=\"group__list__item group__list__item--empty text-center\">\n          <FormattedHTMLMessage\n            message={this.getIntlMessage('modal.groups.notFound')}\n            query={searchQuery} />\n        </li>\n      );\n    }\n\n    return (\n      <div className=\"newmodal newmodal__groups\">\n        <header className=\"newmodal__header\">\n          <h2>{this.getIntlMessage('modal.groups.title')}</h2>\n        </header>\n\n        <section className=\"newmodal__search\">\n          <input className=\"newmodal__search__input\"\n                 onChange={this.handleSearchChange}\n                 placeholder={this.getIntlMessage('modal.groups.search')}\n                 type=\"search\"\n                 ref=\"search\"\n                 value={searchQuery}/>\n        </section>\n\n        <ul className=\"newmodal__result group__list\">\n          {\n            groups.length === 0\n              ? <div>{this.getIntlMessage('modal.groups.loading')}</div>\n              : groupList\n          }\n        </ul>\n      </div>\n    )\n  }\n}\n\nReactMixin.onClass(GroupList, IntlMixin);\n\nexport default Container.create(GroupList, {pure: false});\n"]}