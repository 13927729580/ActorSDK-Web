{"version":3,"sources":["../../../../src/components/modals/GroupList/GroupList.react.js"],"names":[],"mappings":"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","file":"GroupList.react.js","sourcesContent":["/*\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\n */\n\nimport { debounce } from 'lodash';\n\nimport React, { Component, PropTypes } from 'react';\nimport { findDOMNode } from 'react-dom';\nimport { Container } from 'flux/utils';\nimport { FormattedMessage, FormattedHTMLMessage } from 'react-intl';\nimport history from '../../../utils/history';\nimport PeerUtils from '../../../utils/PeerUtils';\nimport Scrollbar from '../../common/Scrollbar.react';\n\nimport { KeyCodes } from '../../../constants/ActorAppConstants';\n\nimport GroupListActionCreators from '../../../actions/GroupListActionCreators'\n\nimport GroupListStore from '../../../stores/GroupListStore';\n\nimport Group from './Group.react';\n\nclass GroupList extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  static contextTypes = {\n    intl: PropTypes.object\n  };\n\n  static getStores() {\n    return [GroupListStore];\n  }\n\n  static calculateState() {\n    return {\n      list: GroupListStore.getList(),\n      results: GroupListStore.getResults(),\n      selectedIndex: 0\n    };\n  }\n\n  componentDidMount() {\n    this.setFocus();\n    document.addEventListener('keydown', this.handleKeyDown, false);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.handleKeyDown, false);\n  }\n\n  setFocus = () => findDOMNode(this.refs.search).focus();\n  handleClose = () => GroupListActionCreators.close();\n\n  handleSearchChange = (event) => {\n    const query = event.target.value;\n    this.setState({ query });\n    this.searchGroups(query)\n  };\n\n  searchGroups = debounce((query) => GroupListActionCreators.search(query), 300, { trailing: true });\n\n  handleGroupSelect = (peer) => {\n    const peerStr = PeerUtils.peerToString(peer);\n    history.push(`/im/${peerStr}`);\n    this.handleClose()\n  };\n\n  handleKeyDown = (event) => {\n    const { results, selectedIndex } = this.state;\n    let index = selectedIndex;\n\n    const selectNext = () => {\n      if (index < results.length - 1) {\n        index += 1;\n      } else if (index === results.length - 1) {\n        index = 0;\n      }\n\n      this.setState({ selectedIndex: index });\n\n      const scrollContainerNode = findDOMNode(this.refs.results).getElementsByClassName('ss-scrollarea')[0];\n      const selectedNode = findDOMNode(this.refs.selected);\n      const scrollContainerNodeRect = scrollContainerNode.getBoundingClientRect();\n      const selectedNodeRect = selectedNode.getBoundingClientRect();\n\n      if ((scrollContainerNodeRect.top + scrollContainerNodeRect.height) < (selectedNodeRect.top + selectedNodeRect.height)) {\n        this.handleScroll(scrollContainerNode.scrollTop + (selectedNodeRect.top + selectedNodeRect.height) - (scrollContainerNodeRect.top + scrollContainerNodeRect.height));\n      } else if (scrollContainerNodeRect.top > selectedNodeRect.top) {\n        this.handleScroll(0);\n      }\n    };\n    const selectPrev = () => {\n      if (index > 0) {\n        index -= 1;\n      } else if (index === 0) {\n        index = results.length - 1;\n      }\n\n      this.setState({ selectedIndex: index });\n\n      const scrollContainerNode = findDOMNode(this.refs.results).getElementsByClassName('ss-scrollarea')[0];\n      const selectedNode = findDOMNode(this.refs.selected);\n      const scrollContainerNodeRect = scrollContainerNode.getBoundingClientRect();\n      const selectedNodeRect = selectedNode.getBoundingClientRect();\n\n      if (scrollContainerNodeRect.top > selectedNodeRect.top) {\n        this.handleScroll(scrollContainerNode.scrollTop + selectedNodeRect.top - scrollContainerNodeRect.top);\n      } else if (selectedNodeRect.top > (scrollContainerNodeRect.top + scrollContainerNodeRect.height)) {\n       this.handleScroll(scrollContainerNode.scrollHeight);\n      }\n    };\n\n    switch (event.keyCode) {\n      case KeyCodes.ENTER:\n        event.stopPropagation();\n        event.preventDefault();\n        this.handleGroupSelect(results[selectedIndex].peerInfo.peer);\n        break;\n\n      case KeyCodes.ARROW_UP:\n        event.stopPropagation();\n        event.preventDefault();\n        selectPrev();\n        break;\n      case KeyCodes.ARROW_DOWN:\n        event.stopPropagation();\n        event.preventDefault();\n        selectNext();\n        break;\n      case KeyCodes.TAB:\n        event.stopPropagation();\n        event.preventDefault();\n        if (event.shiftKey) {\n          selectPrev();\n        } else {\n          selectNext();\n        }\n        break;\n      default:\n    }\n  };\n\n  handleScroll = (top) => this.refs.results.scrollTo(top);\n\n  renderSearchInput() {\n    const { query } = this.state;\n    const { intl } = this.context;\n\n    return (\n      <input className=\"newmodal__search__input\"\n             onChange={this.handleSearchChange}\n             placeholder={intl.messages['modal.groups.search']}\n             type=\"search\"\n             ref=\"search\"\n             value={query}/>\n    );\n  }\n\n  renderLoading() {\n    const { list } = this.state;\n\n    if (list.length !== 0) return null;\n\n    return (\n      <div><FormattedMessage id=\"modal.groups.loading\"/></div>\n    );\n  }\n\n  renderList() {\n    const { query, results, selectedIndex } = this.state;\n\n    if (results.length === 0) {\n      return (\n        <li className=\"group__list__item group__list__item--empty text-center\">\n          <FormattedHTMLMessage id=\"modal.groups.notFound\" values={{ query }} />\n        </li>\n      );\n    }\n\n    return results.map((result, index) => {\n      return (\n        <Group\n          group={result}\n          key={index}\n          isSelected={selectedIndex === index}\n          ref={selectedIndex === index ? 'selected' : null}\n          onClick={this.handleGroupSelect}\n          onMouseOver={() => this.setState({ selectedIndex: index })}\n        />\n      )\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"newmodal newmodal__groups\">\n        <header className=\"newmodal__header\">\n          <h2><FormattedMessage id=\"modal.groups.title\"/></h2>\n        </header>\n\n        <section className=\"newmodal__search\">\n          {this.renderSearchInput()}\n        </section>\n\n        <Scrollbar ref=\"results\">\n          <div className=\"newmodal__result group__list\">\n            {this.renderLoading()}\n            {this.renderList()}\n          </div>\n        </Scrollbar>\n      </div>\n    )\n  }\n}\n\nexport default Container.create(GroupList, { pure: false });\n"]}