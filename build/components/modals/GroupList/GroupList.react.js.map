{"version":3,"sources":["../../../../src/components/modals/GroupList/GroupList.react.js"],"names":[],"mappings":"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","file":"GroupList.react.js","sourcesContent":["/*\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\n */\n\nimport { debounce } from 'lodash';\n\nimport React, { Component, PropTypes } from 'react';\nimport { findDOMNode } from 'react-dom';\nimport { Container } from 'flux/utils';\nimport { FormattedMessage, FormattedHTMLMessage } from 'react-intl';\nimport history from '../../../utils/history';\nimport PeerUtils from '../../../utils/PeerUtils';\nimport Scrollbar from '../../common/Scrollbar.react';\n\nimport { KeyCodes } from '../../../constants/ActorAppConstants';\n\nimport GroupListActionCreators from '../../../actions/GroupListActionCreators'\n\nimport GroupListStore from '../../../stores/GroupListStore';\n\nimport Group from './Group.react';\n\nclass GroupList extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  static contextTypes = {\n    intl: PropTypes.object\n  };\n\n  static getStores() {\n    return [GroupListStore];\n  }\n\n  static calculateState() {\n    return {\n      list: GroupListStore.getList(),\n      results: GroupListStore.getResults(),\n      selectedIndex: 0\n    };\n  }\n\n  componentDidMount() {\n    this.setFocus();\n    document.addEventListener('keydown', this.handleKeyDown, false);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.handleKeyDown, false);\n  }\n\n  setFocus = () => findDOMNode(this.refs.search).focus();\n  handleClose = () => GroupListActionCreators.close();\n\n  handleSearchChange = (event) => {\n    const query = event.target.value;\n    this.setState({ query });\n    this.searchGroups(query)\n  };\n\n  searchGroups = debounce((query) => GroupListActionCreators.search(query), 300, { trailing: true });\n\n  handleGroupSelect = (peer) => {\n    const peerStr = PeerUtils.peerToString(peer);\n    history.push(`/im/${peerStr}`);\n    this.handleClose()\n  };\n\n  handleKeyDown = (event) => {\n    const { results, selectedIndex } = this.state;\n    let index = selectedIndex;\n\n    const selectNext = () => {\n      if (index < results.length - 1) {\n        index += 1;\n      } else if (index === results.length - 1) {\n        index = 0;\n      }\n\n      this.setState({ selectedIndex: index });\n\n      const scrollContainerNode = findDOMNode(this.refs.results).getElementsByClassName('ss-scrollarea')[0];\n      const selectedNode = findDOMNode(this.refs.selected);\n      const scrollContainerNodeRect = scrollContainerNode.getBoundingClientRect();\n      const selectedNodeRect = selectedNode.getBoundingClientRect();\n\n      if ((scrollContainerNodeRect.top + scrollContainerNodeRect.height) < (selectedNodeRect.top + selectedNodeRect.height)) {\n        this.handleScroll(scrollContainerNode.scrollTop + (selectedNodeRect.top + selectedNodeRect.height) - (scrollContainerNodeRect.top + scrollContainerNodeRect.height));\n      } else if (scrollContainerNodeRect.top > selectedNodeRect.top) {\n        this.handleScroll(0);\n      }\n    };\n    const selectPrev = () => {\n      if (index > 0) {\n        index -= 1;\n      } else if (index === 0) {\n        index = results.length - 1;\n      }\n\n      this.setState({ selectedIndex: index });\n\n      const scrollContainerNode = findDOMNode(this.refs.results).getElementsByClassName('ss-scrollarea')[0];\n      const selectedNode = findDOMNode(this.refs.selected);\n      const scrollContainerNodeRect = scrollContainerNode.getBoundingClientRect();\n      const selectedNodeRect = selectedNode.getBoundingClientRect();\n\n      if (scrollContainerNodeRect.top > selectedNodeRect.top) {\n        this.handleScroll(scrollContainerNode.scrollTop + selectedNodeRect.top - scrollContainerNodeRect.top);\n      } else if (selectedNodeRect.top > (scrollContainerNodeRect.top + scrollContainerNodeRect.height)) {\n       this.handleScroll(scrollContainerNode.scrollHeight);\n      }\n    };\n\n    switch (event.keyCode) {\n      case KeyCodes.ENTER:\n        event.stopPropagation();\n        event.preventDefault();\n        this.handleGroupSelect(results[selectedIndex].peerInfo.peer);\n        break;\n\n      case KeyCodes.ARROW_UP:\n        event.stopPropagation();\n        event.preventDefault();\n        selectPrev();\n        break;\n      case KeyCodes.ARROW_DOWN:\n        event.stopPropagation();\n        event.preventDefault();\n        selectNext();\n        break;\n      case KeyCodes.TAB:\n        event.stopPropagation();\n        event.preventDefault();\n        if (event.shiftKey) {\n          selectPrev();\n        } else {\n          selectNext();\n        }\n        break;\n      default:\n    }\n  };\n\n  handleScroll = (top) => this.refs.results.scrollTo(top);\n\n  renderSearchInput() {\n    const { query } = this.state;\n    const { intl } = this.context;\n\n    return (\n      <input className=\"newmodal__search__input\"\n             onChange={this.handleSearchChange}\n             placeholder={intl.messages['modal.groups.search']}\n             type=\"search\"\n             ref=\"search\"\n             value={query}/>\n    );\n  }\n\n  renderLoading() {\n    const { list } = this.state;\n\n    if (list.length !== 0) return null;\n\n    return (\n      <div><FormattedMessage id=\"modal.groups.loading\"/></div>\n    );\n  }\n\n  renderList() {\n    const { query, results, selectedIndex } = this.state;\n\n    if (results.length === 0) {\n      return (\n        <li className=\"group__list__item group__list__item--empty text-center\">\n          <FormattedHTMLMessage id=\"modal.groups.notFound\" values={{ query }} />\n        </li>\n      );\n    }\n\n    return results.map((result, index) => {\n      return (\n        <Group\n          group={result}\n          key={index}\n          isSelected={selectedIndex === index}\n          ref={selectedIndex === index ? 'selected' : null}\n          onClick={this.handleGroupSelect}\n          onMouseOver={() => this.setState({ selectedIndex: index })}\n        />\n      )\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"newmodal newmodal__groups\">\n        <header className=\"newmodal__header\">\n          <h2><FormattedMessage id=\"modal.groups.title\"/></h2>\n        </header>\n\n        <section className=\"newmodal__search\">\n          {this.renderSearchInput()}\n        </section>\n\n        <Scrollbar ref=\"results\">\n          <div className=\"newmodal__result group__list\">\n            {this.renderLoading()}\n            {this.renderList()}\n          </div>\n        </Scrollbar>\n      </div>\n    )\n  }\n}\n\nexport default Container.create(GroupList, { pure: false });\n"]}