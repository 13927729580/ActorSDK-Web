{"version":3,"sources":["../../../src/components/modals/Contacts.react.js"],"names":[],"mappings":"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","file":"Contacts.react.js","sourcesContent":["/*\n * Copyright (C) 2015 Actor LLC. <https://actor.im>\n */\n\nimport { find, assign, forEach } from 'lodash';\n\nimport React from 'react';\nimport Modal from 'react-modal';\nimport ReactMixin from 'react-mixin';\nimport { IntlMixin } from 'react-intl';\n\nimport ActorClient from '../../utils/ActorClient';\nimport { KeyCodes } from '../../constants/ActorAppConstants';\n\nimport ContactActionCreators from '../../actions/ContactActionCreators';\nimport DialogActionCreators from '../../actions/DialogActionCreators';\n\nimport ContactStore from '../../stores/ContactStore';\n\nimport ContactItem from './contacts/ContactItem.react';\n\nconst getStateFromStores = () => {\n  return ({\n    isOpen: ContactStore.isContactsOpen(),\n    contacts: ContactStore.getContacts()\n  });\n};\n\nclass ContactsModal extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = assign({\n      search: ''\n    }, getStateFromStores());\n\n    ContactStore.addChangeListener(this.onChange);\n    document.addEventListener('keydown', this.handleKeyDown, false);\n  }\n\n  componentWillUnmount() {\n    ContactStore.removeChangeListener(this.onChange);\n    document.removeEventListener('keydown', this.handleKeyDown, false);\n  }\n\n  onChange = () => this.setState(getStateFromStores());\n  handleClose = () => ContactActionCreators.close();\n\n  onContactSelect = (contact) => {\n    DialogActionCreators.selectDialogPeerUser(contact.uid);\n    this.handleClose()\n  };\n  onSearchChange = (event) => this.setState({search: event.target.value});\n\n  handleKeyDown = (event) => {\n    if (event.keyCode === KeyCodes.ESC) {\n      event.preventDefault();\n      this.handleClose();\n    }\n  };\n\n  render() {\n    const { contacts, search, isOpen } = this.state;\n\n    let contactList = [];\n\n    if (isOpen) {\n\n      forEach(contacts, (contact, i) => {\n        const name = contact.name.toLowerCase();\n        if (name.includes(search.toLowerCase())) {\n          contactList.push(\n            <ContactItem contact={contact} key={i} onSelect={this.onContactSelect}/>\n          );\n        }\n      }, this);\n\n      if (contactList.length === 0) {\n        contactList.push(\n          <li className=\"contacts__list__item contacts__list__item--empty text-center\">\n            {this.getIntlMessage('modal.contacts.notFound')}\n          </li>\n        );\n      }\n\n      return (\n        <Modal className=\"modal-new modal-new--contacts contacts\"\n               closeTimeoutMS={150}\n               isOpen={isOpen}\n               style={{width: 340}}>\n\n          <header className=\"modal-new__header\">\n            <a className=\"modal-new__header__icon material-icons\">person</a>\n\n            <h3 className=\"modal-new__header__title\">{this.getIntlMessage('modal.contacts.title')}</h3>\n\n            <div className=\"pull-right\">\n              <button className=\"button button--lightblue\"\n                      onClick={this.handleClose}>{this.getIntlMessage('button.done')}</button>\n            </div>\n          </header>\n\n          <div className=\"modal-new__body\">\n            <div className=\"modal-new__search\">\n              <i className=\"material-icons\">search</i>\n              <input className=\"input input--search\"\n                     onChange={this.onSearchChange}\n                     placeholder={this.getIntlMessage('modal.contacts.search')}\n                     type=\"search\"\n                     value={search}/>\n            </div>\n          </div>\n\n          <div className=\"contacts__body\">\n            <ul className=\"contacts__list\">\n              {contactList}\n            </ul>\n          </div>\n\n        </Modal>\n      );\n    } else {\n      return null;\n    }\n  }\n}\n\nReactMixin.onClass(ContactsModal, IntlMixin);\n\nexport default ContactsModal;\n"]}