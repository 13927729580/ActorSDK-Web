{"version":3,"sources":["../../../../src/components/modals/peoples/PeopleItem.react.js"],"names":[],"mappings":";;;;AAIA;;;;AACA;;AACA;;;;AAEA;;;;AAEA;;;;;;;;;;;;IAEM,U;;;AAQJ,sBAAY,KAAZ,EAAmB;AAAA;;AAAA,iDACjB,sBAAM,KAAN,CADiB;;AAAA,UAMnB,WANmB,GAML,YAAM;AAAA,wBACW,MAAK,KADhB;AAAA,UACV,OADU,eACV,OADU;AAAA,UACD,OADC,eACD,OADC;;AAElB,cAAQ,OAAR;AACD,KATkB;;AAAA,UAWnB,eAXmB,GAWD,YAAM;AAAA,UACd,WADc,GACE,MAAK,KADP,CACd,WADc;;AAEtB;AACD,KAdkB;;AAGjB,UAAK,qBAAL,GAA6B,kDAAsB,IAAtB,OAA7B;AAHiB;AAIlB;;uBAaD,M,qBAAS;AAAA,iBACyB,KAAK,KAD9B;AAAA,QACC,OADD,UACC,OADD;AAAA,QACU,UADV,UACU,UADV;;AAEP,QAAM,kBAAkB,0BAAW,uBAAX,EAAoC;AAC1D,mCAA6B;AAD6B,KAApC,CAAxB;;AAIA,WACE;AAAA;AAAA,QAAI,WAAW,eAAf;AACI,iBAAS,KAAK,WADlB;AAEI,qBAAa,KAAK,eAFtB;AAGE,4DAAY,OAAO,QAAQ,MAA3B;AACY,qBAAa,QAAQ,WADjC;AAEY,cAAK,QAFjB;AAGY,eAAO,QAAQ,IAH3B,GAHF;AAQE;AAAA;AAAA,UAAK,WAAU,QAAf;AACE,gDAAM,WAAU,OAAhB,EAAwB,yBAAyB,EAAE,QAAQ,iCAAgB,QAAQ,IAAxB,CAAV,EAAjD;AADF;AARF,KADF;AAcD,G;;;;;AA7CG,U,CACG,S,GAAY;AACjB,WAAS,iBAAU,MAAV,CAAiB,UADT;AAEjB,cAAY,iBAAU,IAAV,CAAe,UAFV;AAGjB,WAAS,iBAAU,IAAV,CAAe,UAHP;AAIjB,eAAa,iBAAU,IAAV,CAAe;AAJX,C;kBA+CN,U","file":"PeopleItem.react.js","sourcesContent":["/*\n * Copyright (C) 2015 Actor LLC. <https://actor.im>\n */\n\nimport React, { Component, PropTypes } from 'react';\nimport { shouldComponentUpdate } from 'react-addons-pure-render-mixin';\nimport classnames from 'classnames';\n\nimport AvatarItem from '../../common/AvatarItem.react';\n\nimport { escapeWithEmoji } from '../../../utils/EmojiUtils';\n\nclass PeopleItem extends Component {\n  static propTypes = {\n    contact: PropTypes.object.isRequired,\n    isSelected: PropTypes.bool.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onMouseOver: PropTypes.func.isRequired\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.shouldComponentUpdate = shouldComponentUpdate.bind(this);\n  }\n\n  handleClick = () => {\n    const { contact, onClick } = this.props;\n    onClick(contact);\n  };\n\n  handleMouseOver = () => {\n    const { onMouseOver } = this.props;\n    onMouseOver();\n  };\n\n\n  render() {\n    const { contact, isSelected } = this.props;\n    const resultClassName = classnames('result-list__item row', {\n      'result-list__item--active': isSelected\n    });\n\n    return (\n      <li className={resultClassName}\n          onClick={this.handleClick}\n          onMouseOver={this.handleMouseOver}>\n        <AvatarItem image={contact.avatar}\n                    placeholder={contact.placeholder}\n                    size=\"medium\"\n                    title={contact.name}/>\n\n        <div className=\"col-xs\">\n          <span className=\"title\" dangerouslySetInnerHTML={{ __html: escapeWithEmoji(contact.name) }}/>\n        </div>\n      </li>\n    );\n  }\n}\n\nexport default PeopleItem;\n"]}