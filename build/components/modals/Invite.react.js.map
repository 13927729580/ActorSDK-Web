{"version":3,"sources":["../../../src/components/modals/Invite.react.js"],"names":[],"mappings":"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","file":"Invite.react.js","sourcesContent":["/*\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\n */\n\nimport React, { Component, PropTypes } from 'react';\nimport Modal from 'react-modal';\nimport { Container } from 'flux/utils';\nimport fuzzaldrin from 'fuzzaldrin';\nimport classNames from 'classnames';\nimport { FormattedMessage } from 'react-intl';\n\nimport { AsyncActionStates, ModalTypes } from '../../constants/ActorAppConstants';\nimport { hasMember } from '../../utils/GroupUtils';\n\nimport InviteUserActions from '../../actions/InviteUserActions';\nimport InviteUserByLinkActions from '../../actions/InviteUserByLinkActions';\n\nimport PeopleStore from '../../stores/PeopleStore';\nimport InviteUserStore from '../../stores/InviteUserStore';\n\nimport ContactItem from '../common/ContactItem.react';\nimport Stateful from '../common/Stateful.react';\n\nclass InviteUser extends Component {\n  static getStores() {\n    return [InviteUserStore, PeopleStore];\n  }\n\n  static calculateState() {\n    return {\n      contacts: PeopleStore.getState(),\n      group: InviteUserStore.getState().group,\n      users: InviteUserStore.getState().users\n    };\n  }\n\n  static contextTypes = {\n    intl: PropTypes.object\n  }\n\n  constructor(props, context) {\n    super(props, context);\n\n    this.handleClose = this.handleClose.bind(this);\n    this.onSearchChange = this.onSearchChange.bind(this);\n    this.onContactSelect = this.onContactSelect.bind(this);\n    this.onInviteUrlByClick = this.onInviteUrlByClick.bind(this);\n  }\n\n  handleClose() {\n    InviteUserActions.hide();\n  }\n\n  onContactSelect(uid) {\n    InviteUserActions.inviteUser(this.state.group.id, uid);\n  }\n\n  onInviteUrlByClick() {\n    const { group } = this.state;\n\n    InviteUserByLinkActions.show(group, ModalTypes.INVITE);\n  }\n\n  onSearchChange(event) {\n    this.setState({ search: event.target.value });\n  }\n\n  getContacts() {\n    const { contacts, search } = this.state;\n    if (!search) return contacts;\n\n    return contacts.filter((contact) => {\n      return fuzzaldrin.score(contact.name, search) > 0;\n    });\n  }\n\n  renderContacts() {\n    const { group, users } = this.state;\n    const contacts = this.getContacts();\n\n    if (!contacts.length) {\n      return (\n        <li className=\"contacts__list__item contacts__list__item--empty text-center\">\n          <FormattedMessage id=\"invite.notFound\"/>\n        </li>\n      );\n    }\n\n    return contacts.map((contact) => {\n\n      const isMember = hasMember(group.id, contact.uid);\n      const currentState = isMember ? AsyncActionStates.SUCCESS : (users[contact.uid] || AsyncActionStates.PENDING);\n\n      const onClick = () => {\n        console.log(`%c Trying to invite \"${contact.name}\"(uid=${contact.uid}) to group ${group.id}`, 'color: #fd5c52');\n        this.onContactSelect(contact.uid)\n      };\n\n      const contactClassName = classNames({\n        'contact--disabled': currentState === AsyncActionStates.SUCCESS\n      });\n\n      return (\n        <ContactItem {...contact} className={contactClassName} key={contact.uid}>\n          <Stateful\n            currentState={currentState}\n            pending={<a className=\"material-icons\" onClick={onClick}>person_add</a>}\n            processing={<i className=\"material-icons spin\">autorenew</i>}\n            success={<i className=\"material-icons\">check</i>}\n            failure={<i className=\"material-icons\">warning</i>}\n          />\n        </ContactItem>\n      );\n    });\n  }\n\n  renderSearch() {\n    const { search } = this.state;\n    const { intl } = this.context;\n\n    return (\n      <div className=\"small-search\">\n        <i className=\"material-icons\">search</i>\n        <input className=\"input\"\n               onChange={this.onSearchChange}\n               ref=\"search\"\n               placeholder={intl.messages['invite.search']}\n               type=\"search\"\n               value={search}/>\n      </div>\n    );\n  }\n\n  inviteByLinkButton() {\n    return (\n      <a className=\"link link--blue\" onClick={this.onInviteUrlByClick}>\n        <i className=\"material-icons\">link</i>\n        <FormattedMessage id=\"invite.inviteByLink\"/>\n      </a>\n    );\n  }\n\n  render() {\n    return (\n      <Modal\n        overlayClassName=\"modal-overlay\"\n        className=\"modal\"\n        onRequestClose={this.handleClose}\n        isOpen>\n\n        <div className=\"invite\">\n          <div className=\"modal__content\">\n\n            <header className=\"modal__header\">\n              <i className=\"modal__header__icon material-icons\">person_add</i>\n              <FormattedMessage id=\"invite.title\" tagName=\"h1\"/>\n              <button className=\"button button--lightblue\" onClick={this.handleClose}>\n                <FormattedMessage id=\"button.done\"/>\n              </button>\n            </header>\n\n            <div className=\"modal__body\">\n              {this.renderSearch()}\n\n              {this.inviteByLinkButton()}\n\n              <ul className=\"contacts__list\">\n                {this.renderContacts()}\n              </ul>\n            </div>\n\n          </div>\n        </div>\n\n      </Modal>\n    );\n  }\n}\n\nexport default Container.create(InviteUser);\n"]}