{"version":3,"sources":["../../../src/components/modals/CropAvatar.react.js"],"names":[],"mappings":"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","file":"CropAvatar.react.js","sourcesContent":["/*\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\n */\n\nimport React, { Component, PropTypes } from 'react';\nimport { findDOMNode } from 'react-dom';\nimport { Container } from 'flux/utils';\nimport { dataURItoBlob } from '../../utils/ImageUtils';\n\nimport Modal from 'react-modal';\n\nimport { KeyCodes } from '../../constants/ActorAppConstants';\n\nimport CropAvatarActionCreators from '../../actions/CropAvatarActionCreators';\n\nimport CropAvatarStore from '../../stores/CropAvatarStore'\n\nconst minCropSize = 100;\n\nclass CropAvatarModal extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  static propTypes = {\n    onCropFinish: PropTypes.func.isRequired\n  };\n\n  static getStores() {\n    return [CropAvatarStore];\n  }\n\n  static calculateState() {\n    return {\n      isOpen: CropAvatarStore.isOpen(),\n      pictureSource: CropAvatarStore.getPictureSource(),\n      cropPosition: {\n        x: 0,\n        y: 0\n      },\n      cropSize: 200,\n      scaledWidth: 0,\n      scaledHeight: 0,\n      naturalWidth: 0,\n      naturalHeight: 0,\n      maxImageHeight: (document.body.clientHeight * .9) - 64 // 64 is modal header height.\n    };\n  }\n\n  static contextTypes = {\n    intl: PropTypes.object\n  };\n\n  componentDidMount() {\n    const originalImage = findDOMNode(this.refs.originalImage);\n    document.addEventListener('keydown', this.onKeyDown, false);\n    window.addEventListener('resize', this.storeScaledSizes, false);\n    originalImage.addEventListener('load', this.storeScaledSizes, false);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.onKeyDown, false);\n    window.removeEventListener('resize', this.storeScaledSizes, false);\n  }\n\n  onClose = () => CropAvatarActionCreators.hide();\n\n  onKeyDown = (event) => {\n    if (event.keyCode === KeyCodes.ESC) {\n      event.preventDefault();\n      this.onClose();\n    }\n  };\n\n  onStartMoving = (event) => {\n    const { cropPosition } = this.state;\n\n    event.preventDefault();\n\n    const wrapper = findDOMNode(this.refs.wrapper);\n    const wrapperRect = wrapper.getBoundingClientRect();\n\n    const dragOffset = {\n      x: (event.pageX - wrapperRect.left) - cropPosition.x,\n      y: (event.pageY - wrapperRect.top) - cropPosition.y\n    };\n    this.setState({ dragOffset });\n\n    wrapper.addEventListener('mousemove', this.onMoving);\n    wrapper.addEventListener('touchmove', this.onMoving);\n  };\n  onMoving = (event) => {\n    const { dragOffset, cropSize } = this.state;\n    const wrapper = findDOMNode(this.refs.wrapper);\n    const wrapperRect = wrapper.getBoundingClientRect();\n\n    let cropPosition = {\n      x: (event.pageX - wrapperRect.left) - dragOffset.x,\n      y: (event.pageY - wrapperRect.top) - dragOffset.y\n    };\n\n    if (cropPosition.x < 0) {\n      cropPosition.x = 0;\n    } else if (cropPosition.x > wrapperRect.width - cropSize) {\n      cropPosition.x = wrapperRect.width - cropSize;\n    }\n\n    if (cropPosition.y < 0) {\n      cropPosition.y = 0;\n    } else if (cropPosition.y > wrapperRect.height - cropSize) {\n      cropPosition.y = wrapperRect.height - cropSize;\n    }\n\n    this.setState({ cropPosition })\n  };\n\n  onStartResizeTop = (event) => {\n    const wrapper = findDOMNode(this.refs.wrapper);\n    const resizeLastCoord = event.pageY;\n    event.preventDefault();\n    this.setState({ resizeLastCoord });\n    wrapper.addEventListener('mousemove', this.onResizeTop);\n    wrapper.addEventListener('touchmove', this.onResizeTop);\n  };\n\n  onStartResizeRight = (event) => {\n    const wrapper = findDOMNode(this.refs.wrapper);\n    const resizeLastCoord = event.pageX;\n    event.preventDefault();\n    this.setState({ resizeLastCoord });\n    wrapper.addEventListener('mousemove', this.onResizeRight);\n    wrapper.addEventListener('touchmove', this.onResizeRight);\n  };\n\n  onStartResizeBottom = (event) => {\n    const wrapper = findDOMNode(this.refs.wrapper);\n    const resizeLastCoord = event.pageY;\n    event.preventDefault();\n    this.setState({ resizeLastCoord });\n    wrapper.addEventListener('mousemove', this.onResizeBottom);\n    wrapper.addEventListener('touchmove', this.onResizeBottom);\n  };\n\n  onStartResizeLeft = (event) => {\n    const wrapper = findDOMNode(this.refs.wrapper);\n    const resizeLastCoord = event.pageX;\n    event.preventDefault();\n    this.setState({ resizeLastCoord });\n    wrapper.addEventListener('mousemove', this.onResizeLeft);\n    wrapper.addEventListener('touchmove', this.onResizeLeft);\n  };\n\n  onResizeTop = (event) => this.onCropResize(event, 'TOP');\n  onResizeRight = (event) => this.onCropResize(event, 'RIGHT');\n  onResizeBottom = (event) => this.onCropResize(event, 'BOTTOM');\n  onResizeLeft = (event) => this.onCropResize(event, 'LEFT');\n\n  onCropResize = (event, direction) => {\n    const { cropPosition, resizeLastCoord, cropSize, scaledWidth, scaledHeight } = this.state;\n    const axisCoord = (direction === 'RIGHT' || direction === 'LEFT') ? event.pageX : event.pageY;\n    const resizeValue = resizeLastCoord - axisCoord;\n\n    let resizeCropPosition, resizedCropSize;\n    switch (direction) {\n      case 'TOP':\n        resizedCropSize = cropSize + resizeValue;\n        resizeCropPosition = {\n          x: cropPosition.x - (resizeValue / 2),\n          y: cropPosition.y - resizeValue\n        };\n        break;\n      case 'RIGHT':\n        resizedCropSize = cropSize - resizeValue;\n        resizeCropPosition = {\n          x: cropPosition.x,\n          y: cropPosition.y + (resizeValue / 2)\n        };\n        break;\n      case 'BOTTOM':\n        resizedCropSize = cropSize - resizeValue;\n        resizeCropPosition = {\n          x: cropPosition.x + (resizeValue / 2),\n          y: cropPosition.y\n        };\n        break;\n      case 'LEFT':\n        resizedCropSize = cropSize + resizeValue;\n        resizeCropPosition = {\n          x: cropPosition.x - resizeValue,\n          y: cropPosition.y - (resizeValue / 2)\n        };\n        break;\n      default:\n    }\n\n    if (resizedCropSize < minCropSize || resizedCropSize > scaledWidth || resizedCropSize > scaledHeight) {\n      resizedCropSize = cropSize;\n      resizeCropPosition = cropPosition;\n    }\n\n    this.setState({ resizeLastCoord: axisCoord });\n    this.updateCropSize(resizedCropSize, resizeCropPosition);\n  };\n\n  removeListeners = () => {\n    const wrapper = findDOMNode(this.refs.wrapper);\n\n    wrapper.removeEventListener('mousemove', this.onMoving);\n    wrapper.removeEventListener('touchmove', this.onMoving);\n    wrapper.removeEventListener('mousemove', this.onResizeTop);\n    wrapper.removeEventListener('touchmove', this.onResizeTop);\n    wrapper.removeEventListener('mousemove', this.onResizeRight);\n    wrapper.removeEventListener('touchmove', this.onResizeRight);\n    wrapper.removeEventListener('mousemove', this.onResizeBottom);\n    wrapper.removeEventListener('touchmove', this.onResizeBottom);\n    wrapper.removeEventListener('mousemove', this.onResizeLeft);\n    wrapper.removeEventListener('touchmove', this.onResizeLeft);\n  };\n\n  updateCropSize = (cropSize, cropPosition) => this.setState({ cropSize, cropPosition });\n\n  onCrop = () => {\n    const { cropPosition, cropSize, scaleRatio } = this.state;\n    const { onCropFinish } = this.props;\n    const cropImage = findDOMNode(this.refs.cropImage);\n    let canvas = document.createElement('canvas');\n    let context = canvas.getContext('2d');\n\n    canvas.width = canvas.height = cropSize;\n\n    context.drawImage(cropImage, cropPosition.x / scaleRatio, cropPosition.y / scaleRatio, cropSize / scaleRatio, cropSize / scaleRatio, 0, 0, cropSize, cropSize);\n\n    const croppedImage = dataURItoBlob(canvas.toDataURL());\n\n    onCropFinish(croppedImage);\n    this.onClose();\n  };\n\n  storeScaledSizes = () => {\n    const { cropSize } = this.state;\n    const originalImage = findDOMNode(this.refs.originalImage);\n    const scaledWidth = originalImage.width;\n    const scaledHeight = originalImage.height;\n    const naturalWidth = originalImage.naturalWidth;\n    const naturalHeight = originalImage.naturalHeight;\n    const scaleRatio = scaledWidth/naturalWidth;\n    const cropPosition = {\n      x: ((naturalWidth / 2) - (cropSize / 2)) * scaleRatio,\n      y: ((naturalHeight / 2) - (cropSize / 2)) * scaleRatio\n    };\n\n    this.setState({ cropPosition, scaledWidth, scaledHeight, naturalWidth, naturalHeight, scaleRatio });\n  };\n\n  render() {\n    const { isOpen, pictureSource, cropPosition, cropSize, scaledWidth, scaledHeight, maxImageHeight } = this.state;\n    const { intl } = this.context;\n    const modalStyle = {\n      content : {\n        position: null,\n        top: null,\n        left: null,\n        right: null,\n        bottom: null,\n        border: null,\n        background: null,\n        overflow: null,\n        outline: null,\n        padding: null,\n        borderRadius: null\n      }\n    };\n\n    if (isOpen) {\n      return (\n        <Modal className=\"modal-new modal-new--profile-picture\"\n               closeTimeoutMS={150}\n               isOpen={isOpen}\n               style={modalStyle}>\n\n          <div className=\"modal-new__header\">\n            <i className=\"modal-new__header__icon material-icons\">crop</i>\n            <h3 className=\"modal-new__header__title\">{intl.messages['modal.crop.title']}</h3>\n            <div className=\"pull-right\">\n              <button className=\"button button--lightblue\" onClick={this.onCrop}>{intl.messages['button.done']}</button>\n            </div>\n          </div>\n\n          <div className=\"modal-new__body\">\n            <div className=\"crop-wrapper\"\n                 ref=\"wrapper\"\n                 onTouchEnd={this.removeListeners}\n                 onMouseUp={this.removeListeners}>\n              <div className=\"crop-wrapper__scale\"\n                   style={{ width: cropSize, height: cropSize, left: cropPosition.x, top: cropPosition.y }}>\n                <div className=\"crop-wrapper__scale__handler crop-wrapper__scale__handler--top\"\n                     onMouseDown={this.onStartResizeTop}\n                     onTouchStart={this.onStartResizeTop}/>\n                <div className=\"crop-wrapper__scale__handler crop-wrapper__scale__handler--right\"\n                     onMouseDown={this.onStartResizeRight}\n                     onTouchStart={this.onStartResizeRight}/>\n                <div className=\"crop-wrapper__scale__handler crop-wrapper__scale__handler--bottom\"\n                     onMouseDown={this.onStartResizeBottom}\n                     onTouchStart={this.onStartResizeBottom}/>\n                <div className=\"crop-wrapper__scale__handler crop-wrapper__scale__handler--left\"\n                     onMouseDown={this.onStartResizeLeft}\n                     onTouchStart={this.onStartResizeLeft}/>\n              </div>\n              <div className=\"crop-wrapper__overlay\"\n                   onMouseDown={this.onStartMoving}\n                   onTouchStart={this.onStartMoving}\n                   style={{ width: cropSize, height: cropSize, left: cropPosition.x, top: cropPosition.y }}>\n                <img className=\"crop-wrapper__image-crop\"\n                     draggable=\"false\"\n                     ref=\"cropImage\"\n                     src={pictureSource}\n                     style={{ left: -cropPosition.x, top: -cropPosition.y, width: scaledWidth, height: scaledHeight }}/>\n              </div>\n              <img className=\"crop-wrapper__image-original\"\n                   draggable=\"false\"\n                   ref=\"originalImage\"\n                   src={pictureSource}\n                   style={{ maxHeight: maxImageHeight }}/>\n            </div>\n          </div>\n        </Modal>\n      );\n    } else {\n      return null;\n    }\n  }\n}\n\nexport default Container.create(CropAvatarModal);\n"]}