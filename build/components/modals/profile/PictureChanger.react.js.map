{"version":3,"sources":["../../../../src/components/modals/profile/PictureChanger.react.js"],"names":[],"mappings":";;;;AAIA;;;;AACA;;AACA;;AACA;;AACA;;;;AAEA;;;;AAEA;;;;;;;;;;;;;;IAEM,c;;;AAkBJ,0BAAY,KAAZ,EAAmB;AAAA;;AAAA,iDACjB,sBAAM,KAAN,CADiB;;AAGjB,UAAK,uBAAL,GAA+B,MAAK,uBAAL,CAA6B,IAA7B,OAA/B;AACA,UAAK,wBAAL,GAAgC,MAAK,wBAAL,CAA8B,IAA9B,OAAhC;AAJiB;AAKlB;;2BAED,uB,oCAAwB,K,EAAO;AAC7B,QAAM,aAAa,2BAAY,KAAK,IAAL,CAAU,UAAtB,CAAnB;AACA,eAAW,KAAX,CAAiB,KAAjB;AACD,G;;2BAED,wB,uCAA2B;AAAA,iBACO,KAAK,KADZ;AAAA,QACjB,SADiB,UACjB,SADiB;AAAA,QACN,QADM,UACN,QADM;;AAEzB,QAAM,SAAS,IAAI,UAAJ,EAAf;AACA,QAAM,YAAY,2BAAY,KAAK,IAAL,CAAU,SAAtB,CAAlB;AACA,QAAM,OAAO,2BAAY,KAAK,IAAL,CAAU,UAAtB,EAAkC,KAAlC,CAAwC,CAAxC,CAAb;;AAEA,WAAO,MAAP,GAAgB,UAAC,KAAD,EAAW;AACzB,mCAAmB,IAAnB,CAAwB,MAAM,MAAN,CAAa,MAArC,EAA6C,SAA7C,EAAwD,QAAxD;AACA,gBAAU,KAAV;AACD,KAHD;AAIA,WAAO,aAAP,CAAqB,IAArB;AACD,G;;2BAED,oB,mCAAuB;AAAA,kBAC2B,KAAK,KADhC;AAAA,QACb,SADa,WACb,SADa;AAAA,QACF,WADE,WACF,WADE;AAAA,QACW,IADX,WACW,IADX;AAAA,QACiB,KADjB,WACiB,KADjB;;;AAGrB,WACE;AAAA;AAAA,QAAK,WAAU,0BAAf;AACE;AACE,mBAAU,yBADZ;AAEE,eAAO,SAFT;AAGE,qBAAa,WAHf;AAIE,cAAM,QAAQ,KAAR,GAAgB,MAJxB;AAKE,eAAO;AALT,QADF;AASE;AAAA;AAAA,UAAG,SAAS,KAAK,uBAAjB;AACE,qEAAkB,IAAG,4BAArB;AADF;AATF,KADF;AAgBD,G;;2BAED,oB,mCAAuB;AAAA,QACb,SADa,GACC,KAAK,KADN,CACb,SADa;;AAErB,QAAI,CAAC,SAAL,EAAgB,OAAO,IAAP;;AAEhB,WACE;AAAA;AAAA,QAAK,WAAU,2BAAf;AACE;AAAA;AAAA,UAAG,SAAS,KAAK,KAAL,CAAW,QAAvB;AACE,qEAAkB,IAAG,4BAArB;AADF;AADF,KADF;AAOD,G;;2BAED,M,qBAAS;AACP,QAAM,0BAA0B,0BAAW,iBAAX,EAA8B;AAC5D,gCAA0B,KAAK,KAAL,CAAW;AADuB,KAA9B,CAAhC;;AAIA,WACE;AAAA;AAAA,QAAK,WAAW,uBAAhB;AACG,WAAK,oBAAL,EADH;AAEG,WAAK,oBAAL,EAFH;AAIE;AAAA;AAAA,UAAM,WAAU,MAAhB,EAAuB,KAAI,WAA3B;AACE,iDAAO,UAAU,KAAK,wBAAtB,EAAgD,KAAI,YAApD,EAAiE,MAAK,MAAtE;AADF;AAJF,KADF;AAUD,G;;;;;AA5FG,c,CACG,S,GAAY;AACjB,aAAW,iBAAU,MADJ;AAEjB,eAAa,iBAAU,MAAV,CAAiB,UAFb;AAGjB,QAAM,iBAAU,MAAV,CAAiB,UAHN;;AAKjB,SAAO,iBAAU,IALA;;AAOjB,aAAW,iBAAU,KAAV,CAAgB,CACzB,8BAAW,OADc,EAEzB,8BAAW,YAFc,EAGzB,8BAAW,UAHc,CAAhB,EAIR,UAXc;;AAajB,YAAU,iBAAU,IAAV,CAAe,UAbR;AAcjB,YAAU,iBAAU,IAAV,CAAe;AAdR,C;kBA+FN,c","file":"PictureChanger.react.js","sourcesContent":["/*\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\n */\n\nimport React, { Component, PropTypes } from 'react';\nimport { findDOMNode } from 'react-dom';\nimport { FormattedMessage } from 'react-intl';\nimport { ModalTypes } from '../../../constants/ActorAppConstants';\nimport classnames from 'classnames';\n\nimport CropActionCreators from '../../../actions/CropActionCreators';\n\nimport AvatarItem from '../../common/AvatarItem.react';\n\nclass PictureChanger extends Component {\n  static propTypes = {\n    bigAvatar: PropTypes.string,\n    placeholder: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n\n    small: PropTypes.bool,\n\n    fromModal: PropTypes.oneOf([\n      ModalTypes.PROFILE,\n      ModalTypes.CREATE_GROUP,\n      ModalTypes.EDIT_GROUP\n    ]).isRequired,\n\n    onRemove: PropTypes.func.isRequired,\n    onChange: PropTypes.func.isRequired\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.handleChangeAvatarClick = this.handleChangeAvatarClick.bind(this);\n    this.handlePictureInputChange = this.handlePictureInputChange.bind(this);\n  }\n\n  handleChangeAvatarClick(event) {\n    const imageInput = findDOMNode(this.refs.imageInput);\n    imageInput.click(event);\n  }\n\n  handlePictureInputChange() {\n    const { fromModal, onChange } = this.props;\n    const reader = new FileReader();\n    const imageForm = findDOMNode(this.refs.imageForm);\n    const file = findDOMNode(this.refs.imageInput).files[0];\n\n    reader.onload = (event) => {\n      CropActionCreators.show(event.target.result, fromModal, onChange);\n      imageForm.reset();\n    }\n    reader.readAsDataURL(file);\n  }\n\n  renderPictureChanger() {\n    const { bigAvatar, placeholder, name, small } = this.props;\n\n    return (\n      <div className=\"picture-changer__changer\">\n        <AvatarItem\n          className=\"picture-changer__avatar\"\n          image={bigAvatar}\n          placeholder={placeholder}\n          size={small ? 'big' : 'huge'}\n          title={name}\n        />\n\n        <a onClick={this.handleChangeAvatarClick}>\n          <FormattedMessage id=\"modal.profile.avatarChange\"/>\n        </a>\n\n      </div>\n    );\n  }\n\n  renderPictureRemover() {\n    const { bigAvatar } = this.props;\n    if (!bigAvatar) return null;\n\n    return (\n      <div className=\"picture-changer__controls\">\n        <a onClick={this.props.onRemove}>\n          <FormattedMessage id=\"modal.profile.avatarRemove\"/>\n        </a>\n      </div>\n    );\n  }\n\n  render() {\n    const pictureChangerClassName = classnames('picture-changer', {\n      'picture-changer--small': this.props.small\n    })\n\n    return (\n      <div className={pictureChangerClassName}>\n        {this.renderPictureChanger()}\n        {this.renderPictureRemover()}\n\n        <form className=\"hide\" ref=\"imageForm\">\n          <input onChange={this.handlePictureInputChange} ref=\"imageInput\" type=\"file\"/>\n        </form>\n      </div>\n    );\n  }\n\n}\n\nexport default PictureChanger;\n"]}