{"version":3,"sources":["../../src/components/DialogSection.react.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA,IAAM,qBAAqB,GAAG,GAAG,CAAC;;AAElC,IAAM,0BAA0B,GAAG,EAAE,CAAC;AACtC,IAAM,kBAAkB,GAAG,EAAE,CAAC;;AAE9B,IAAI,mBAAmB,GAAG,0BAA0B,CAAC;;AAErD,IAAI,QAAQ,GAAG,IAAI,CAAC;AACpB,IAAI,sBAAsB,GAAG,CAAC,CAAC;;AAE/B,IAAM,kBAAkB,GAAG,SAArB,kBAAkB,GAAS;AAC/B,MAAM,QAAQ,GAAG,uBAAa,MAAM,EAAE,CAAC;AACvC,MAAI,gBAAgB,YAAA,CAAC;;AAErB,MAAI,QAAQ,CAAC,MAAM,GAAG,mBAAmB,EAAE;AACzC,oBAAgB,GAAG,QAAQ,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,GAAG,mBAAmB,CAAC,CAAC;GAC1E,MAAM;AACL,oBAAgB,GAAG,QAAQ,CAAC;GAC7B;;AAED,SAAO;AACL,QAAI,EAAE,sBAAY,qBAAqB,EAAE;AACzC,YAAQ,EAAE,QAAQ;AAClB,oBAAgB,EAAE,gBAAgB;GACnC,CAAC;CACH,CAAC;;IAEI,aAAa;YAAb,aAAa;;AAKjB,WALI,aAAa,CAKL,KAAK,EAAE;0BALf,aAAa;;uEAAb,aAAa,aAMT,KAAK;;UAsHb,gBAAgB,GAAG,YAAM;AACvB,gBAAU,CAAC,MAAK,SAAS,EAAE,EAAE,CAAC,CAAC;KAChC;;UAED,SAAS,GAAG,YAAM;AAChB,UAAM,IAAI,GAAG,gBAAM,WAAW,CAAC,MAAK,IAAI,CAAC,eAAe,CAAC,CAAC;AAC1D,UAAI,IAAI,EAAE;AACR,YAAI,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,GAAG,sBAAsB,GAAG,IAAI,CAAC,YAAY,CAAC;OACjF;KACF;;UAED,sBAAsB,GAAG,YAAM;AAC7B,4BAAsB,GAAG,CAAC,CAAC;AAC3B,yBAAmB,GAAG,0BAA0B;;;AAAC,AAGjD,UAAI,QAAQ,IAAI,IAAI,EAAE;AACpB,uCAAqB,oBAAoB,CAAC,QAAQ,CAAC,CAAC;OACrD;;AAED,cAAQ,GAAG,sBAAY,qBAAqB,EAAE,CAAC;AAC/C,qCAAqB,kBAAkB,CAAC,QAAQ,CAAC,CAAC;KACnD;;UAED,gBAAgB,GAAG,YApMZ,QAAQ,EAoMa,YAAM;AAChC,YAAK,QAAQ,CAAC,kBAAkB,EAAE,CAAC,CAAC;KACrC,EAAE,EAAE,EAAE,EAAC,OAAO,EAAE,EAAE,EAAE,OAAO,EAAE,IAAI,EAAC,CAAC;UAEpC,oBAAoB,GAAG,YAxMhB,QAAQ,EAwMiB,YAAM;AACpC,UAAI,MAAK,KAAK,CAAC,IAAI,EAAE;AACnB,YAAI,IAAI,GAAG,gBAAM,WAAW,CAAC,MAAK,IAAI,CAAC,eAAe,CAAC,CAAC;AACxD,YAAI,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;AAC/B,8BAAsB,GAAG,IAAI,CAAC,YAAY,GAAG,SAAS,GAAG,IAAI,CAAC,YAAY;;AAAC,AAE3E,YAAI,IAAI,CAAC,SAAS,GAAG,qBAAqB,EAAE;AAC1C,yCAAqB,SAAS,CAAC,MAAK,KAAK,CAAC,IAAI,CAAC,CAAC;;AAEhD,cAAI,MAAK,KAAK,CAAC,QAAQ,CAAC,MAAM,GAAG,MAAK,KAAK,CAAC,gBAAgB,CAAC,MAAM,EAAE;AACnE,+BAAmB,IAAI,kBAAkB,CAAC;;AAE1C,gBAAI,mBAAmB,GAAG,MAAK,KAAK,CAAC,QAAQ,CAAC,MAAM,EAAE;AACpD,iCAAmB,GAAG,MAAK,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC;aAClD;;AAED,kBAAK,QAAQ,CAAC,kBAAkB,EAAE,CAAC,CAAC;WACrC;SACF;OACF;KACF,EAAE,CAAC,EAAE,EAAC,OAAO,EAAE,EAAE,EAAC,CAAC;;AApKlB,UAAK,KAAK,GAAG,kBAAkB,EAAE,CAAC;;AAElC,4BAAc,iBAAiB,CAAC,MAAK,gBAAgB,CAAC,CAAC;AACvD,0BAAY,iBAAiB,CAAC,MAAK,sBAAsB,CAAC,CAAC;AAC3D,2BAAa,iBAAiB,CAAC,MAAK,gBAAgB,CAAC,CAAC;;GACvD;;eAbG,aAAa;;2CAeM;AACrB,8BAAc,oBAAoB,CAAC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;AACrE,4BAAY,oBAAoB,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC;AAC9D,6BAAa,oBAAoB,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;KAC1D;;;wCAEmB;AAClB,UAAM,IAAI,GAAG,sBAAY,qBAAqB,EAAE,CAAC;;AAEjD,UAAI,IAAI,EAAE;AACR,uCAAqB,kBAAkB,CAAC,IAAI,CAAC,CAAC;AAC9C,YAAI,CAAC,SAAS,EAAE,CAAC;AACjB,YAAI,CAAC,oBAAoB,EAAE,CAAC;OAC7B;KACF;;;yCAEoB;AACnB,UAAI,CAAC,SAAS,EAAE,CAAC;AACjB,UAAI,CAAC,oBAAoB,EAAE,CAAC;KAC7B;;;6BAEQ;UACC,IAAI,GAAK,IAAI,CAAC,KAAK,CAAnB,IAAI;UACJ,QAAQ,GAAK,IAAI,CAAC,OAAO,CAAzB,QAAQ;;AAEhB,UAAI,WAAW,YAAA;UACX,QAAQ,GAAG,EAAE;UACb,cAAc,YAAA;UAAE,aAAa,YAAA;UAAE,cAAc,YAAA,CAAC;;AAElD,UAAI,QAAQ,CAAC,UAAU,CAAC,MAAM,KAAK,IAAI,IAAI,OAAO,QAAQ,CAAC,UAAU,CAAC,MAAM,KAAK,UAAU,EAAE;AAC3F,sBAAc,GAAG,QAAQ,CAAC,UAAU,CAAC,MAAM,CAAC,OAAO,4BAAyB,CAAC;AAC7E,qBAAa,GAAG,QAAQ,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,2BAAwB,CAAC;AAC1E,sBAAc,GAAG,QAAQ,CAAC,UAAU,CAAC,MAAM,CAAC,OAAO,4BAAyB,CAAC;AAC7E,YAAI,QAAQ,CAAC,UAAU,CAAC,MAAM,CAAC,QAAQ,EAAE;AACvC,sBAjGW,OAAO,EAiGV,QAAQ,CAAC,UAAU,CAAC,MAAM,CAAC,QAAQ,EAAE,UAAC,QAAQ;mBAAK,QAAQ,CAAC,IAAI,CAAC,8BAAC,QAAQ,OAAE,CAAC;WAAA,CAAC,CAAC;SACxF;OACF,MAAM;AACL,sBAAc,2BAAwB,CAAC;AACvC,qBAAa,0BAAuB,CAAC;AACrC,sBAAc,2BAAwB,CAAC;AACvC,gBAAQ,CAAC,IAAI,CAAC,8DAAyB,CAAC,CAAC;OAC1C;;AAED,UAAI,IAAI,EAAE;AACR,YAAI,QAAQ,GAAG,IAAI;YACf,UAAU,YAAA,CAAC;;AAEf,YAAI,IAAI,CAAC,IAAI,KAAK,mBA5Gf,SAAS,CA4GgB,KAAK,EAAE;AACjC,cAAM,KAAK,GAAG,qBAAW,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AAC3C,kBAAQ,GAAG,sBAAY,aAAa,CAAC,KAAK,CAAC,CAAC;SAC7C;;AAED,YAAI,QAAQ,EAAE;AACZ,oBAAU,GACR;;;YACE,8BAAC,aAAa,OAAE;YAChB,8BAAC,cAAc,IAAC,IAAI,EAAE,IAAI,AAAC,GAAE;WACzB,AACP,CAAC;SACH,MAAM;AACL,oBAAU,GACR;;cAAS,SAAS,EAAC,mDAAmD;YACpE;;;;aAA6B;WACrB,AACX,CAAC;SACH;;AAED,mBAAW,GACT;;YAAS,SAAS,EAAC,QAAQ,EAAC,QAAQ,EAAE,IAAI,CAAC,oBAAoB,AAAC;UAC9D,8DAAkB;UAElB;;cAAK,SAAS,EAAC,UAAU;YACvB,2DAAiB,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,gBAAgB,AAAC;AACtC,kBAAI,EAAE,IAAI,AAAC;AACX,iBAAG,EAAC,iBAAiB,GAAE;WAEpC;UAEL,UAAU;SACH,AACX,CAAC;OACH,MAAM;AACL,mBAAW,GACT;;YAAS,SAAS,EAAC,8CAA8C;UAC/D,8DAAkB;UAElB;;cAAK,SAAS,EAAC,QAAQ;YACrB;;gBAAK,SAAS,EAAC,YAAY;cACzB,uCAAK,SAAS,EAAC,iBAAiB;AAC3B,uCAAuB,EAAE,EAAC,MAAM,EAAE,kDAAkD,EAAC,AAAC,GAAE;aACzF;YACN;;;;aAAyC;WACrC;SACE,AACX,CAAC;OACH;;AAED,aACE;;UAAS,SAAS,EAAC,MAAM;QACvB,8BAAC,cAAc,OAAE;QAEjB;;YAAK,SAAS,EAAC,SAAS;UACrB,WAAW;UACX,QAAQ;SACL;OACE,CACV;KACH;;;SA1HG,aAAa;UAjDH,SAAS;;AAiDnB,aAAa,CACV,YAAY,GAAG;AACpB,UAAQ,EAAE,OAnDa,SAAS,CAmDZ,MAAM;CAC3B;kBA4KY,aAAa","file":"DialogSection.react.js","sourcesContent":["/*\n * Copyright (C) 2015 Actor LLC. <https://actor.im>\n */\n\nimport React, { Component, PropTypes } from 'react';\nimport { debounce, forEach } from 'lodash';\n\nimport { PeerTypes } from '../constants/ActorAppConstants';\n\nimport PeerUtils from '../utils/PeerUtils';\n\nimport MessagesSection from './dialog/MessagesSection.react';\nimport DefaultTypingSection from './dialog/TypingSection.react';\nimport DefaultComposeSection from './dialog/ComposeSection.react';\nimport DefaultToolbarSection from './ToolbarSection.react';\nimport DefaultActivitySection from './ActivitySection.react';\nimport ConnectionState from './common/ConnectionState.react';\n\nimport ActivityStore from '../stores/ActivityStore';\nimport DialogStore from '../stores/DialogStore';\nimport MessageStore from '../stores/MessageStore';\nimport GroupStore from '../stores/GroupStore';\n\nimport DialogActionCreators from '../actions/DialogActionCreators';\n\n// On which scrollTop value start loading older messages\nconst LoadMessagesScrollTop = 100;\n\nconst initialRenderMessagesCount = 20;\nconst renderMessagesStep = 20;\n\nlet renderMessagesCount = initialRenderMessagesCount;\n\nlet lastPeer = null;\nlet lastScrolledFromBottom = 0;\n\nconst getStateFromStores = () => {\n  const messages = MessageStore.getAll();\n  let messagesToRender;\n\n  if (messages.length > renderMessagesCount) {\n    messagesToRender = messages.slice(messages.length - renderMessagesCount);\n  } else {\n    messagesToRender = messages;\n  }\n\n  return {\n    peer: DialogStore.getSelectedDialogPeer(),\n    messages: messages,\n    messagesToRender: messagesToRender\n  };\n};\n\nclass DialogSection extends Component {\n  static contextTypes = {\n    delegate: PropTypes.object\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = getStateFromStores();\n\n    ActivityStore.addChangeListener(this.fixScrollTimeout);\n    DialogStore.addSelectListener(this.onSelectedDialogChange);\n    MessageStore.addChangeListener(this.onMessagesChange);\n  }\n\n  componentWillUnmount() {\n    ActivityStore.removeChangeListener(this.fixScrollTimeout.bind(this));\n    DialogStore.removeSelectListener(this.onSelectedDialogChange);\n    MessageStore.removeChangeListener(this.onMessagesChange);\n  }\n\n  componentDidMount() {\n    const peer = DialogStore.getSelectedDialogPeer();\n\n    if (peer) {\n      DialogActionCreators.onConversationOpen(peer);\n      this.fixScroll();\n      this.loadMessagesByScroll();\n    }\n  }\n\n  componentDidUpdate() {\n    this.fixScroll();\n    this.loadMessagesByScroll();\n  }\n\n  render() {\n    const { peer } = this.state;\n    const { delegate } = this.context;\n\n    let mainContent,\n        activity = [],\n        ToolbarSection, TypingSection, ComposeSection;\n\n    if (delegate.components.dialog !== null && typeof delegate.components.dialog !== 'function') {\n      ToolbarSection = delegate.components.dialog.toolbar || DefaultToolbarSection;\n      TypingSection = delegate.components.dialog.typing || DefaultTypingSection;\n      ComposeSection = delegate.components.dialog.compose || DefaultComposeSection;\n      if (delegate.components.dialog.activity) {\n        forEach(delegate.components.dialog.activity, (Activity) => activity.push(<Activity/>));\n      }\n    } else {\n      ToolbarSection = DefaultToolbarSection;\n      TypingSection = DefaultTypingSection;\n      ComposeSection = DefaultComposeSection;\n      activity.push(<DefaultActivitySection/>);\n    }\n\n    if (peer) {\n      let isMember = true,\n          memberArea;\n\n      if (peer.type === PeerTypes.GROUP) {\n        const group = GroupStore.getGroup(peer.id);\n        isMember = DialogStore.isGroupMember(group);\n      }\n\n      if (isMember) {\n        memberArea = (\n          <div>\n            <TypingSection/>\n            <ComposeSection peer={peer}/>\n          </div>\n        );\n      } else {\n        memberArea = (\n          <section className=\"compose compose--disabled row center-xs middle-xs\">\n            <h3>You are not a member</h3>\n          </section>\n        );\n      }\n\n      mainContent = (\n        <section className=\"dialog\" onScroll={this.loadMessagesByScroll}>\n          <ConnectionState/>\n\n          <div className=\"messages\">\n            <MessagesSection messages={this.state.messagesToRender}\n                             peer={peer}\n                             ref=\"MessagesSection\"/>\n\n          </div>\n\n          {memberArea}\n        </section>\n      );\n    } else {\n      mainContent = (\n        <section className=\"dialog dialog--empty row center-xs middle-xs\">\n          <ConnectionState/>\n\n          <div className=\"advice\">\n            <div className=\"actor-logo\">\n              <svg className=\"icon icon--gray\"\n                   dangerouslySetInnerHTML={{__html: '<use xlink:href=\"assets/images/icons.svg#star\"/>'}}/>\n            </div>\n            <h2>Try to be better than yesterday!</h2>\n          </div>\n        </section>\n      );\n    }\n\n    return (\n      <section className=\"main\">\n        <ToolbarSection/>\n\n        <div className=\"flexrow\">\n          {mainContent}\n          {activity}\n        </div>\n      </section>\n    );\n  }\n\n  fixScrollTimeout = () => {\n    setTimeout(this.fixScroll, 50);\n  };\n\n  fixScroll = () => {\n    const node = React.findDOMNode(this.refs.MessagesSection);\n    if (node) {\n      node.scrollTop = node.scrollHeight - lastScrolledFromBottom - node.offsetHeight;\n    }\n  };\n\n  onSelectedDialogChange = () => {\n    lastScrolledFromBottom = 0;\n    renderMessagesCount = initialRenderMessagesCount;\n\n    // TODO: Move this to actions\n    if (lastPeer != null) {\n      DialogActionCreators.onConversationClosed(lastPeer);\n    }\n\n    lastPeer = DialogStore.getSelectedDialogPeer();\n    DialogActionCreators.onConversationOpen(lastPeer);\n  };\n\n  onMessagesChange = debounce(() => {\n    this.setState(getStateFromStores());\n  }, 10, {maxWait: 50, leading: true});\n\n  loadMessagesByScroll = debounce(() => {\n    if (this.state.peer) {\n      let node = React.findDOMNode(this.refs.MessagesSection);\n      let scrollTop = node.scrollTop;\n      lastScrolledFromBottom = node.scrollHeight - scrollTop - node.offsetHeight; // was node.scrollHeight - scrollTop\n\n      if (node.scrollTop < LoadMessagesScrollTop) {\n        DialogActionCreators.onChatEnd(this.state.peer);\n\n        if (this.state.messages.length > this.state.messagesToRender.length) {\n          renderMessagesCount += renderMessagesStep;\n\n          if (renderMessagesCount > this.state.messages.length) {\n            renderMessagesCount = this.state.messages.length;\n          }\n\n          this.setState(getStateFromStores());\n        }\n      }\n    }\n  }, 5, {maxWait: 30});\n}\n\nexport default DialogSection;\n"]}