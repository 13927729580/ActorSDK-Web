{"version":3,"sources":["../../../src/components/search/SearchInput.react.js"],"names":[],"mappings":";;;;AAIA;;;;AACA;;;;AACA;;;;;;;;;;;;IAEM,W;;;AAaJ,uBAAY,KAAZ,EAAmB;AAAA;;AAAA,iDACjB,sBAAM,KAAN,CADiB;;AAGjB,UAAK,YAAL,GAAoB,MAAK,YAAL,CAAkB,IAAlB,OAApB;AACA,UAAK,aAAL,GAAqB,MAAK,aAAL,CAAmB,IAAnB,OAArB;AAJiB;AAKlB;;wBAED,iB,gCAAoB;AAClB,SAAK,SAAL,GAAiB,CACf,wBAAc,MAAd,CAAqB,QAArB,EAA+B,SAA/B,EAA0C,KAAK,aAA/C,CADe,CAAjB;AAGD,G;;wBAED,oB,mCAAuB;AACrB,SAAK,SAAL,CAAe,OAAf,CAAuB,UAAC,QAAD;AAAA,aAAc,SAAS,MAAT,EAAd;AAAA,KAAvB;AACA,SAAK,SAAL,GAAiB,IAAjB;AACD,G;;wBAED,Y,yBAAa,K,EAAO;AAClB,SAAK,KAAL,CAAW,QAAX,CAAoB,MAAM,MAAN,CAAa,KAAjC;AACD,G;;wBAED,a,0BAAc,K,EAAO;AACnB,QAAI,MAAM,OAAN,KAAkB,4BAAS,CAA3B,KAAiC,MAAM,OAAN,IAAiB,MAAM,OAAxD,CAAJ,EAAsE;AACpE,YAAM,cAAN;AACA,WAAK,KAAL;AACD;;AAED,QAAI,MAAM,OAAN,KAAkB,4BAAS,GAA3B,IAAkC,KAAK,SAAL,EAAtC,EAAwD;AACtD,YAAM,cAAN;AACA,WAAK,KAAL,CAAW,OAAX;AACD;AACF,G;;wBAED,W,0BAAc;AACZ,QAAI,CAAC,KAAK,KAAL,CAAW,KAAhB,EAAuB;AACrB,aAAO,IAAP;AACD;;AAED,WACE;AAAA;MAAA,EAAG,WAAU,2BAAb,EAAyC,SAAS,KAAK,KAAL,CAAW,OAA7D;MAAA;AAAA,KADF;AAGD,G;;wBAED,M,qBAAS;AAAA,QACC,KADD,GACW,KAAK,KADhB,CACC,KADD;AAAA,QAEC,IAFD,GAEU,KAAK,OAFf,CAEC,IAFD;;;AAIP,WACE;AAAA;MAAA,EAAK,WAAU,mCAAf;MACE;AACE,mBAAU,4BADZ;AAEE,cAAK,QAFP;AAGE,aAAI,QAHN;AAIE,kBAAS,GAJX;AAKE,eAAO,KALT;AAME,qBAAa,KAAK,QAAL,CAAc,oBAAd,CANf;AAOE,iBAAS,KAAK,KAAL,CAAW,OAPtB;AAQE,gBAAQ,KAAK,KAAL,CAAW,MARrB;AASE,kBAAU,KAAK;AATjB,QADF;MAYG,KAAK,WAAL;AAZH,KADF;AAgBD,G;;wBAED,K,oBAAQ;AACN,QAAI,KAAK,IAAL,CAAU,MAAd,EAAsB;AACpB,WAAK,IAAL,CAAU,MAAV,CAAiB,KAAjB;AACD;AACF,G;;wBAED,S,wBAAY;AACV,WAAO,SAAS,aAAT,KAA2B,KAAK,IAAL,CAAU,MAA5C;AACD,G;;;;;AAvFG,W,CACG,Y,GAAe;AACpB,QAAM,iBAAU,MAAV,CAAiB;AADH,C;AADlB,W,CAKG,S,GAAY;AACjB,SAAO,iBAAU,MAAV,CAAiB,UADP;AAEjB,WAAS,iBAAU,IAAV,CAAe,UAFP;AAGjB,UAAQ,iBAAU,IAAV,CAAe,UAHN;AAIjB,WAAS,iBAAU,IAAV,CAAe,UAJP;AAKjB,YAAU,iBAAU,IAAV,CAAe;AALR,C;kBAqFN,W","file":"SearchInput.react.js","sourcesContent":["/*\n * Copyright (C) 2015 Actor LLC. <https://actor.im>\n */\n\nimport React, { Component, PropTypes } from 'react';\nimport EventListener from 'fbjs/lib/EventListener';\nimport { KeyCodes } from '../../constants/ActorAppConstants';\n\nclass SearchInput extends Component {\n  static contextTypes = {\n    intl: PropTypes.object.isRequired\n  };\n\n  static propTypes = {\n    value: PropTypes.string.isRequired,\n    onFocus: PropTypes.func.isRequired,\n    onBlur: PropTypes.func.isRequired,\n    onClear: PropTypes.func.isRequired,\n    onChange: PropTypes.func.isRequired\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n  }\n\n  componentDidMount() {\n    this.listeners = [\n      EventListener.listen(document, 'keydown', this.handleKeyDown)\n    ];\n  }\n\n  componentWillUnmount() {\n    this.listeners.forEach((listener) => listener.remove());\n    this.listeners = null;\n  }\n\n  handleChange(event) {\n    this.props.onChange(event.target.value);\n  }\n\n  handleKeyDown(event) {\n    if (event.keyCode === KeyCodes.K && (event.metaKey || event.ctrlKey)) {\n      event.preventDefault();\n      this.focus();\n    }\n\n    if (event.keyCode === KeyCodes.ESC && this.isFocused()) {\n      event.preventDefault();\n      this.props.onClear();\n    }\n  }\n\n  renderClear() {\n    if (!this.props.value) {\n      return null;\n    }\n\n    return (\n      <i className=\"close-icon material-icons\" onClick={this.props.onClear}>close</i>\n    );\n  }\n\n  render() {\n    const { value } = this.props;\n    const { intl } = this.context;\n\n    return (\n      <div className=\"row toolbar__search__input col-xs\">\n        <input\n          className=\"input input--search col-xs\"\n          type=\"search\"\n          ref=\"search\"\n          tabIndex=\"1\"\n          value={value}\n          placeholder={intl.messages['search.placeholder']}\n          onFocus={this.props.onFocus}\n          onBlur={this.props.onBlur}\n          onChange={this.handleChange}\n        />\n        {this.renderClear()}\n      </div>\n    );\n  }\n\n  focus() {\n    if (this.refs.search) {\n      this.refs.search.focus();\n    }\n  }\n\n  isFocused() {\n    return document.activeElement === this.refs.search;\n  }\n}\n\nexport default SearchInput;\n"]}