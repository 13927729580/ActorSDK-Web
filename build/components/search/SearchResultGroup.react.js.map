{"version":3,"sources":["../../../src/components/search/SearchResultGroup.react.js"],"names":[],"mappings":";;;;AAIA;;;;AACA;;AACA;;;;AACA;;;;;;;;;;;;;;IAEM,iB;;;;;;;;;8BAOJ,a,4BAAgB;AAAA,iBACgB,KAAK,KADrB;AAAA,QACN,EADM,UACN,EADM;AAAA,QACF,KADE,UACF,KADE;AAAA,QACK,MADL,UACK,MADL;;;AAGd,QAAI,CAAC,MAAM,MAAX,EAAmB;AACjB,aACE;AAAA;QAAA,EAAK,WAAU,WAAf;QACE,6DAAkB,wBAAsB,EAAtB,cAAlB;AADF,OADF;AAKD;;AAED,WAAO,MAAM,GAAN,CAAU,UAAC,IAAD,EAAO,KAAP,EAAiB;AAChC,aACE;AAAA;QAAA,EAAgB,OAAO,QAAQ,MAA/B,EAAuC,KAAK,KAAK,QAAL,CAAc,IAAd,CAAmB,GAA/D;QACE;AACE,eAAK,KAAK,QAAL,CAAc,IAAd,CAAmB,EAD1B;AAEE,gBAAM,KAAK,QAAL,CAAc,KAFtB;AAGE,kBAAQ,KAAK,QAAL,CAAc,MAHxB;AAIE,uBAAa,KAAK,QAAL,CAAc;AAJ7B;AADF,OADF;AAUD,KAXM,CAAP;AAYD,G;;8BAED,M,qBAAS;AAAA,QACC,EADD,GACQ,KAAK,KADb,CACC,EADD;;;AAGP,WACE;AAAA;MAAA;MACE;AAAA;QAAA;QACE,6DAAkB,wBAAsB,EAAtB,WAAlB;AADF,OADF;MAIG,KAAK,aAAL;AAJH,KADF;AAQD,G;;;;;AA3CG,iB,CACG,S,GAAY;AACjB,MAAI,iBAAU,MAAV,CAAiB,UADJ;AAEjB,SAAO,iBAAU,KAAV,CAAgB,UAFN;AAGjB,UAAQ,iBAAU,MAAV,CAAiB;AAHR,C;kBA6CN,iB","file":"SearchResultGroup.react.js","sourcesContent":["/*\n * Copyright (C) 2015 Actor LLC. <https://actor.im>\n */\n\nimport React, { Component, PropTypes } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport ContactItem from '../common/ContactItem.react';\nimport SelectListItem from '../common/SelectListItem.react';\n\nclass SearchResultGroup extends Component {\n  static propTypes = {\n    id: PropTypes.string.isRequired,\n    items: PropTypes.array.isRequired,\n    offset: PropTypes.number.isRequired\n  };\n\n  renderResults() {\n    const { id, items, offset } = this.props;\n\n    if (!items.length) {\n      return (\n        <div className=\"not-found\">\n          <FormattedMessage id={`toolbar.search.${id}.notFound`} />\n        </div>\n      );\n    }\n\n    return items.map((item, index) => {\n      return (\n        <SelectListItem index={index + offset} key={item.peerInfo.peer.key}>\n          <ContactItem\n            uid={item.peerInfo.peer.id}\n            name={item.peerInfo.title}\n            avatar={item.peerInfo.avatar}\n            placeholder={item.peerInfo.placeholder}\n          />\n        </SelectListItem>\n      )\n    });\n  }\n\n  render() {\n    const { id } = this.props;\n\n    return (\n      <div>\n        <header>\n          <FormattedMessage id={`toolbar.search.${id}.title`}/>\n        </header>\n        {this.renderResults()}\n      </div>\n    );\n  }\n}\n\nexport default SearchResultGroup;\n"]}