{"version":3,"sources":["../../../src/components/search/SearchResults.react.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAIA;;;;AACA;;AACA;;AAEA;;;;;;;;;;IAEM;;;AASJ,WATI,aASJ,CAAY,KAAZ,EAAmB;wCATf,eASe;;+DACjB,sBAAM,KAAN,GADiB;;AAGjB,UAAK,qBAAL,GAA6B,kDAAsB,IAAtB,OAA7B,CAHiB;;GAAnB;;AATI,0BAeJ,yCAAgB;iBAC0B,KAAK,KAAL,CAD1B;QACN,qBADM;QACC,yBADD;QACU,iCADV;;;AAGd,QAAI,CAAC,KAAD,EAAQ;AACV,aACE;;UAAI,WAAU,oDAAV,EAAJ;QACE,6DAAkB,IAAG,mBAAH,EAAlB,CADF;OADF,CADU;KAAZ;;AAQA,QAAI,WAAJ,EAAiB;AACf,aACE;;UAAI,WAAU,wDAAV,EAAJ;QACE,6DAAkB,IAAG,kBAAH,EAAsB,QAAQ,EAAE,YAAF,EAAR,EAAxC,CADF;OADF,CADe;KAAjB;;AAQA,QAAI,CAAC,QAAQ,MAAR,EAAgB;AACnB,aACE;;UAAI,WAAU,wDAAV,EAAJ;QACE,iEAAsB,IAAG,iBAAH,EAAqB,QAAQ,EAAE,YAAF,EAAR,EAA3C,CADF;OADF,CADmB;KAArB;;AAQA,WAAO,QAAQ,GAAR,CAAY,UAAC,MAAD,EAAS,KAAT,EAAmB;AACpC,aAAO,qFAAsB,UAAQ,KAAK,KAAL,GAA9B,CAAP,CADoC;KAAnB,CAAnB,CA3Bc;;;AAfZ,0BA+CJ,2BAAS;kBACkC,KAAK,KAAL,CADlC;QACC,gCADD;QACa,4CADb;;;AAGP,WACE;;;MACE;;UAAK,WAAU,gBAAV,EAA2B,SAAS,gBAAT,EAAhC;QACE;;YAAG,WAAU,gBAAV,EAAH;UAA+B,aAAa,eAAb,GAA+B,cAA/B;SADjC;QAEE;;YAAG,WAAU,gBAAV,EAAH;UAA+B,aAAa,eAAb,GAA+B,cAA/B;SAFjC;OADF;MAKE;;UAAQ,WAAU,gBAAV,EAAR;QACE;;YAAI,WAAU,gBAAV,EAAJ;UACE;;cAAI,WAAU,mDAAV,EAAJ;;WADF;SADF;OALF;MAUE;;UAAK,WAAU,cAAV,EAAL;QACE;;YAAI,WAAU,iBAAV,EAAJ;UACG,KAAK,aAAL,EADH;SADF;OAVF;KADF,CAHO;;;SA/CL;;;cACG,YAAY;AACjB,SAAO,iBAAU,MAAV,CAAiB,UAAjB;AACP,WAAS,iBAAU,KAAV,CAAgB,UAAhB;AACT,cAAY,iBAAU,IAAV,CAAe,UAAf;AACZ,eAAa,iBAAU,IAAV,CAAe,UAAf;AACb,oBAAkB,iBAAU,IAAV,CAAe,UAAf;;kBAiEP","file":"SearchResults.react.js","sourcesContent":["/*\n * Copyright (C) 2015 Actor LLC. <https://actor.im>\n */\n\nimport React, { Component, PropTypes } from 'react';\nimport { shouldComponentUpdate } from 'react-addons-pure-render-mixin';\nimport { FormattedMessage, FormattedHTMLMessage } from 'react-intl';\n\nimport SearchResultItem from './SearchResultItem.react';\n\nclass SearchResults extends Component {\n  static propTypes = {\n    query: PropTypes.string.isRequired,\n    results: PropTypes.array.isRequired,\n    isExpanded: PropTypes.bool.isRequired,\n    isSearching: PropTypes.bool.isRequired,\n    onToggleExpanded: PropTypes.func.isRequired\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.shouldComponentUpdate = shouldComponentUpdate.bind(this);\n  }\n\n  renderResults() {\n    const { query, results, isSearching } = this.props;\n\n    if (!query) {\n      return (\n        <li className=\"search__results__item search__results__item--empty\">\n          <FormattedMessage id=\"search.emptyQuery\" />\n        </li>\n      );\n    }\n\n    if (isSearching) {\n      return (\n        <li className=\"search__results__item search__results__item--not-found\">\n          <FormattedMessage id=\"search.searching\" values={{ query }} />\n        </li>\n      );\n    }\n\n    if (!results.length) {\n      return (\n        <li className=\"search__results__item search__results__item--not-found\">\n          <FormattedHTMLMessage id=\"search.notFound\" values={{ query }} />\n        </li>\n      );\n    }\n\n    return results.map((result, index) => {\n      return <SearchResultItem {...result} key={index} />\n    });\n  }\n\n  render() {\n    const { isExpanded, onToggleExpanded } = this.props;\n\n    return (\n      <div>\n        <div className=\"search__expand\" onClick={onToggleExpanded}>\n          <i className=\"material-icons\">{isExpanded ? 'chevron_right' : 'chevron_left'}</i>\n          <i className=\"material-icons\">{isExpanded ? 'chevron_right' : 'chevron_left'}</i>\n        </div>\n        <header className=\"search__header\">\n          <ul className=\"search__filter\">\n            <li className=\"search__filter__item search__filter__item--active\">Text</li>\n          </ul>\n        </header>\n        <div className=\"search__body\">\n          <ul className=\"search__results\">\n            {this.renderResults()}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SearchResults;\n"]}