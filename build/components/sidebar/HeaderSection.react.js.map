{"version":3,"sources":["../../../src/components/sidebar/HeaderSection.react.js"],"names":[],"mappings":"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","file":"HeaderSection.react.js","sourcesContent":["/*\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\n */\n\nimport React, { Component, PropTypes } from 'react';\nimport { Container } from 'flux/utils';\nimport classnames from 'classnames';\nimport ActorClient from '../../utils/ActorClient';\nimport { escapeWithEmoji } from '../../utils/EmojiUtils'\nimport confirm from '../../utils/confirm'\nimport SharedContainer from '../../utils/SharedContainer';\nimport { twitter, homePage } from '../../constants/ActorAppConstants';\n\nimport MyProfileActions from '../../actions/MyProfileActionCreators';\nimport CreateGroupActionCreators from '../../actions/CreateGroupActionCreators';\nimport LoginActionCreators from '../../actions/LoginActionCreators';\nimport HelpActionCreators from '../../actions/HelpActionCreators';\nimport AddContactActionCreators from '../../actions/AddContactActionCreators';\nimport PreferencesActionCreators from '../../actions/PreferencesActionCreators';\n\nimport MyProfileStore from '../../stores/MyProfileStore';\nimport CreateGroupStore from '../../stores/CreateGroupStore';\nimport AddContactStore from '../../stores/AddContactStore';\nimport PreferencesStore from '../../stores/PreferencesStore';\n\nimport AvatarItem from '../common/AvatarItem.react';\nimport CreateGroupModal from '../modals/CreateGroup';\nimport MyProfileModal from '../modals/MyProfile.react';\nimport AddContactModal from '../modals/AddContact.react';\nimport PreferencesModal from '../modals/Preferences.react';\n\nclass HeaderSection extends Component {\n  constructor(props) {\n    super(props);\n\n    const SharedActor = SharedContainer.get();\n    this.twitter = SharedActor.twitter ? SharedActor.twitter : twitter;\n    this.homePage = SharedActor.homePage ? SharedActor.homePage : homePage;\n  }\n\n  static getStores = () => [MyProfileStore, CreateGroupStore, AddContactStore, PreferencesStore];\n\n  static calculateState() {\n    return {\n      profile: MyProfileStore.getProfile(),\n      isMyProfileOpen: MyProfileStore.isModalOpen(),\n      isAddContactsOpen: AddContactStore.isOpen(),\n      isCreateGroupOpen: CreateGroupStore.isModalOpen(),\n      isPreferencesOpen: PreferencesStore.isOpen()\n    }\n  }\n\n  static contextTypes = {\n    intl: PropTypes.object\n  };\n\n  componentWillMount() {\n    this.setState({isOpened: false});\n  }\n\n  toggleHeaderMenu = () => {\n    const { isOpened } = this.state;\n\n    if (!isOpened) {\n      this.setState({isOpened: true});\n      document.addEventListener('click', this.closeHeaderMenu, false);\n    } else {\n      this.closeHeaderMenu();\n    }\n  };\n\n  closeHeaderMenu = () => {\n    this.setState({isOpened: false});\n    document.removeEventListener('click', this.closeHeaderMenu, false);\n  };\n\n  openMyProfile = () => MyProfileActions.show();\n  openCreateGroup = () => CreateGroupActionCreators.open();\n  openHelpDialog = () => HelpActionCreators.open();\n  openAddContactModal = () => AddContactActionCreators.open();\n  onSettingsOpen = () => PreferencesActionCreators.show();\n  openTwitter = (event) => {\n    event.preventDefault();\n    if (ActorClient.isElectron()) {\n      ActorClient.handleLinkClick(event);\n    } else {\n      window.open(`https://twitter.com/${this.twitter}`, '_blank');\n    }\n  };\n  openHomePage = (event) => {\n    event.preventDefault();\n    if (ActorClient.isElectron()) {\n      ActorClient.handleLinkClick(event);\n    } else {\n      window.open(this.homePage, '_blank');\n    }\n  };\n  setLogout = () => {\n    const { intl } = this.context;\n    confirm(intl.messages['modal.confirm.logout'], {\n      abortLabel: intl.messages['button.cancel'],\n      confirmLabel: intl.messages['button.ok']\n    }).then(\n      () => LoginActionCreators.setLoggedOut(),\n      () => {}\n    );\n  };\n\n  render() {\n    const { profile, isOpened, isMyProfileOpen, isCreateGroupOpen, isAddContactsOpen, isPreferencesOpen } = this.state;\n    const { intl } = this.context;\n\n    if (profile) {\n      const headerClass = classnames('sidebar__header', 'sidebar__header--clickable', {\n        'sidebar__header--opened': isOpened\n      });\n      const menuClass = classnames('dropdown', {\n        'dropdown--opened': isOpened\n      });\n\n      return (\n        <header className={headerClass}>\n          <div className=\"sidebar__header__user row\" onClick={this.toggleHeaderMenu}>\n            <AvatarItem image={profile.avatar}\n                        placeholder={profile.placeholder}\n                        size=\"tiny\"\n                        title={profile.name} />\n            <span className=\"sidebar__header__user__name col-xs\"\n                  dangerouslySetInnerHTML={{__html: escapeWithEmoji(profile.name)}}/>\n            <div className={menuClass}>\n              <span className=\"dropdown__button\">\n                <i className=\"material-icons\">arrow_drop_down</i>\n              </span>\n              <ul className=\"dropdown__menu dropdown__menu--right\">\n                <li className=\"dropdown__menu__item\" onClick={this.openMyProfile}>\n                  <i className=\"material-icons\">edit</i>\n                  {intl.messages['menu.editProfile']}\n                </li>\n                <li className=\"dropdown__menu__item\" onClick={this.openAddContactModal}>\n                  <i className=\"material-icons\">person_add</i>\n                  {intl.messages['menu.addToContacts']}\n                </li>\n                <li className=\"dropdown__menu__item\" onClick={this.openCreateGroup}>\n                  <i className=\"material-icons\">group_add</i>\n                  {intl.messages['menu.createGroup']}\n                </li>\n                <li className=\"dropdown__menu__separator\"/>\n                <li className=\"dropdown__menu__item\" onClick={this.onSettingsOpen}>\n                  <i className=\"material-icons\">settings</i>\n                  {intl.messages['menu.preferences']}\n                </li>\n                <li className=\"dropdown__menu__item\" onClick={this.openHelpDialog}>\n                  <i className=\"material-icons\">help</i>\n                  {intl.messages['menu.helpAndFeedback']}\n                </li>\n                <li className=\"dropdown__menu__item\">\n                  <a href={`https://twitter.com/${this.twitter}`} onClick={this.openTwitter}>\n                    <svg className=\"icon icon--dropdown\"\n                         style={{marginLeft: -34}}\n                         dangerouslySetInnerHTML={{__html: '<use xlink:href=\"assets/images/icons.svg#twitter\"/>'}}/>\n                    {intl.messages['menu.twitter']}\n                  </a>\n                </li>\n                <li className=\"dropdown__menu__item\">\n                  <a href={this.homePage} onClick={this.openHomePage}>\n                    <i className=\"material-icons\">public</i>\n                    {intl.messages['menu.homePage']}\n                  </a>\n                </li>\n                <li className=\"dropdown__menu__separator\"/>\n                <li className=\"dropdown__menu__item\" onClick={this.setLogout}>\n                  {intl.messages['menu.signOut']}\n                </li>\n              </ul>\n            </div>\n          </div>\n\n\n          {/* Modals */}\n          {isMyProfileOpen ? <MyProfileModal/> : null}\n          {isCreateGroupOpen ? <CreateGroupModal/> : null}\n          {isAddContactsOpen ? <AddContactModal/> : null}\n          {isPreferencesOpen ? <PreferencesModal/> : null}\n\n        </header>\n      );\n    } else {\n      return null;\n    }\n  }\n}\n\nexport default Container.create(HeaderSection);\n"]}