{"version":3,"sources":["../../../src/components/sidebar/RecentSection.react.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgBA,IAAM,uBAAuB,GAAG,GAAG,CAAC;;IAE9B,aAAa;YAAb,aAAa;;AACjB,WADI,aAAa,CACL,KAAK,EAAE;0BADf,aAAa;;uEAAb,aAAa,aAET,KAAK;;UAsBb,QAAQ,GAAG,UAAA,KAAK,EAAI;0BACgC,KAAK,CAAC,MAAM;UAAtD,YAAY,iBAAZ,YAAY;UAAE,SAAS,iBAAT,SAAS;UAAE,YAAY,iBAAZ,YAAY;;AAE7C,UAAI,YAAY,GAAG,SAAS,GAAG,YAAY,IAAI,uBAAuB,EAAE;AACtE,uCAAqB,YAAY,EAAE,CAAC;OACrC;KACF;;;GA3BA;;eAHG,aAAa;;wCAaG;;;AAClB,gBAAU,CAAC,YAAM;AACf,YAAM,QAAQ,GAAG,gBAAM,WAAW,CAAC,OAAK,IAAI,CAAC,IAAI,CAAC,CAAC,qBAAqB,EAAE,CAAC;AAC3E,YAAM,UAAU,GAAG,gBAAM,WAAW,CAAC,OAAK,IAAI,CAAC,MAAM,CAAC,CAAC,qBAAqB,EAAE,CAAC;;AAE/E,YAAI,QAAQ,CAAC,MAAM,GAAG,UAAU,CAAC,MAAM,EAAE;AACvC,yCAAqB,YAAY,EAAE,CAAC;SACrC;OACF,CAAC,CAAC;KACJ;;;6BAUQ;UACC,OAAO,GAAK,IAAI,CAAC,KAAK,CAAtB,OAAO;;AAEf,UAAM,UAAU,GAAG,iBAAI,OAAO,EAAE,UAAC,MAAM,EAAE,KAAK;eAAK,6DAAmB,MAAM,EAAE,MAAM,AAAC,EAAC,GAAG,EAAE,KAAK,AAAC,GAAE;OAAA,CAAC,CAAC;;AAErG,aACE;;UAAS,SAAS,EAAC,iBAAiB,EAAC,GAAG,EAAC,QAAQ;QAC/C;;YAAW,QAAQ,EAAE,IAAI,CAAC,QAAQ,AAAC;UACjC;;cAAI,SAAS,EAAC,eAAe,EAAC,GAAG,EAAC,MAAM;YACrC,UAAU;WACR;SACK;OACJ,CACV;KACH;;;qCAvCuB;AACtB,aAAO;AACL,eAAO,EAAE,0BAAgB,aAAa,EAAE;OACzC,CAAC;KACH;;;SAXG,aAAa;;;AAAb,aAAa,CAKV,SAAS,GAAG;SAAM,2BAAiB;CAAA;;kBA4C7B,iBAAU,MAAM,CAAC,aAAa,CAAC","file":"RecentSection.react.js","sourcesContent":["/*\n * Copyright (C) 2015 Actor LLC. <https://actor.im>\n */\n\nimport { map } from 'lodash';\n\nimport React, { Component } from 'react';\nimport Scrollbar from '../common/Scrollbar.react';\nimport { Container } from 'flux/utils';\n\nimport DialogActionCreators from '../../actions/DialogActionCreators';\n\nimport AllDialogsStore from '../../stores/AllDialogsStore';\n\nimport RecentSectionItem from './RecentSectionItem.react';\n\nconst LoadDialogsScrollBottom = 100;\n\nclass RecentSection extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  static getStores = () => [AllDialogsStore];\n\n  static calculateState() {\n    return {\n      dialogs: AllDialogsStore.getAllDialogs()\n    };\n  }\n\n  componentDidMount() {\n    setTimeout(() => {\n      const listRect = React.findDOMNode(this.refs.list).getBoundingClientRect();\n      const recentRect = React.findDOMNode(this.refs.recent).getBoundingClientRect();\n\n      if (listRect.height < recentRect.height) {\n        DialogActionCreators.onDialogsEnd();\n      }\n    });\n  }\n\n  onScroll = event => {\n    const { scrollHeight, scrollTop, clientHeight } = event.target;\n\n    if (scrollHeight - scrollTop - clientHeight <= LoadDialogsScrollBottom) {\n      DialogActionCreators.onDialogsEnd();\n    }\n  };\n\n  render() {\n    const { dialogs } = this.state;\n\n    const dialogList = map(dialogs, (dialog, index) => <RecentSectionItem dialog={dialog} key={index}/>);\n\n    return (\n      <section className=\"sidebar__recent\" ref=\"recent\">\n        <Scrollbar onScroll={this.onScroll}>\n          <ul className=\"sidebar__list\" ref=\"list\">\n            {dialogList}\n          </ul>\n        </Scrollbar>\n      </section>\n    );\n  }\n}\n\nexport default Container.create(RecentSection);\n"]}