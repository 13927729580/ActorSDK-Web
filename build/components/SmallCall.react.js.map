{"version":3,"sources":["../../src/components/SmallCall.react.js"],"names":[],"mappings":"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","file":"SmallCall.react.js","sourcesContent":["/*\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\n */\n\nimport React, { Component } from 'react';\nimport { shouldComponentUpdate } from 'react-addons-pure-render-mixin';\nimport { Container } from 'flux/utils';\n\nimport { PeerTypes } from '../constants/ActorAppConstants';\nimport PeerUtils from '../utils/PeerUtils';\n\nimport CallActionCreators from '../actions/CallActionCreators';\n\nimport CallStore from '../stores/CallStore';\nimport DialogStore from '../stores/DialogStore';\nimport UserStore from '../stores/UserStore';\nimport GroupStore from '../stores/GroupStore';\n\nimport CallDraggable from './call/CallDraggable.react';\n\nclass SmallCall extends Component {\n  static getStores() {\n    return [CallStore, DialogStore];\n  }\n\n  static calculatePeerInfo(peer) {\n    if (peer) {\n      if (peer.type === PeerTypes.USER) {\n        return UserStore.getUser(peer.id);\n      }\n\n      if (peer.type === PeerTypes.GROUP) {\n        return GroupStore.getGroup(peer.id);\n      }\n    }\n\n    return null;\n  }\n\n  static calculateState() {\n    const call = CallStore.getState();\n    if (!call.isOpen) {\n      return { isOpen: false };\n    }\n\n    const dialogPeer = DialogStore.getCurrentPeer();\n    const isSameDialog = PeerUtils.equals(dialogPeer, call.peer);\n\n    if (isSameDialog && !call.isFloating) {\n      return { isOpen: false };\n    }\n\n    return {\n      call,\n      isOpen: true,\n      peerInfo: SmallCall.calculatePeerInfo(call.peer)\n    };\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.onAnswer = this.onAnswer.bind(this);\n    this.onEnd = this.onEnd.bind(this);\n    this.onMuteToggle = this.onMuteToggle.bind(this);\n    this.onClose = this.onClose.bind(this);\n    this.onFullscreen = this.onFullscreen.bind(this);\n    this.onUserAdd = this.onUserAdd.bind(this);\n    this.onVideo = this.onVideo.bind(this);\n    this.shouldComponentUpdate = shouldComponentUpdate.bind(this);\n  }\n\n  onAnswer() {\n    CallActionCreators.answerCall(this.state.call.id);\n  }\n\n  onEnd() {\n    CallActionCreators.endCall(this.state.call.id);\n  }\n\n  onMuteToggle() {\n    CallActionCreators.toggleCallMute(this.state.call.id);\n  }\n\n  onClose() {\n    CallActionCreators.hide();\n  }\n\n  onFullscreen() {\n    console.debug('onFullscreen');\n  }\n\n  onUserAdd() {\n    console.debug('onUserAdd');\n  }\n\n  onVideo() {\n    console.debug('onVideo');\n  }\n\n  render() {\n    const { isOpen, call, peerInfo } = this.state;\n\n    if (!isOpen) {\n      return null;\n    }\n\n    return (\n      <CallDraggable\n        peerInfo={peerInfo}\n        callState={call.state}\n        isOutgoing={call.isOutgoing}\n        isMuted={call.isMuted}\n        onEnd={this.onEnd}\n        onAnswer={this.onAnswer}\n        onMuteToggle={this.onMuteToggle}\n        onFullscreen={this.onFullscreen}\n        onUserAdd={this.onUserAdd}\n        onVideo={this.onVideo}\n        onClose={this.onClose}\n      />\n    );\n  }\n}\n\nexport default Container.create(SmallCall);\n"]}