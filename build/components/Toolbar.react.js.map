{"version":3,"sources":["../../src/components/Toolbar.react.js"],"names":[],"mappings":"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","file":"Toolbar.react.js","sourcesContent":["/*\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\n */\n\nimport React, { Component, PropTypes } from 'react';\nimport { Container } from 'flux/utils';\nimport classnames from 'classnames';\nimport { escapeWithEmoji } from '../utils/EmojiUtils';\n\nimport ActivityActionCreators from '../actions/ActivityActionCreators';\nimport FavoriteActionCreators from '../actions/FavoriteActionCreators';\n\nimport AvatarItem from '../components/common/AvatarItem.react';\n\nimport DialogInfoStore from '../stores/DialogInfoStore';\nimport OnlineStore from '../stores/OnlineStore';\nimport ActivityStore from '../stores/ActivityStore';\nimport DialogStore from '../stores/DialogStore';\n\nclass ToolbarSection extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  static getStores = () => [DialogInfoStore, ActivityStore, OnlineStore, DialogStore];\n\n  static calculateState() {\n    const thisPeer = DialogStore.getCurrentPeer();\n\n    return {\n      thisPeer,\n      dialogInfo: DialogInfoStore.getInfo(),\n      isActivityOpen: ActivityStore.isOpen(),\n      message: OnlineStore.getMessage(),\n      isFavorite: DialogStore.isFavorite(thisPeer.id)\n    };\n  }\n\n  static contextTypes = {\n    isExperimental: PropTypes.bool\n  };\n\n  handleFavorite = (event) => {\n    const { thisPeer } = this.state;\n    FavoriteActionCreators.favoriteChat(thisPeer);\n  };\n\n  handleUnfavorite = (event) => {\n    const { thisPeer } = this.state;\n    FavoriteActionCreators.unfavoriteChat(thisPeer);\n  };\n\n  onClick = () => {\n    if (!this.state.isActivityOpen) {\n      ActivityActionCreators.show();\n    } else {\n      ActivityActionCreators.hide();\n    }\n  };\n\n  render() {\n    const { dialogInfo, isActivityOpen, message, isFavorite } = this.state;\n\n    const infoButtonClassName = classnames('button button--icon', {\n      'active': isActivityOpen\n    });\n\n    const favoriteClassName = classnames('toolbar__peer__favorite', {\n      'toolbar__peer__favorite--active': isFavorite\n    });\n\n    if (dialogInfo !== null) {\n      return (\n        <header className=\"toolbar row\">\n          <AvatarItem image={dialogInfo.avatar}\n                      placeholder={dialogInfo.placeholder}\n                      size=\"medium\"\n                      title={dialogInfo.name}/>\n\n\n          <div className=\"toolbar__peer col-xs\">\n            <header>\n              <span className=\"toolbar__peer__title\" dangerouslySetInnerHTML={{__html: escapeWithEmoji(dialogInfo.name)}}/>\n              <span className={favoriteClassName}>\n                {\n                  isFavorite\n                    ? <i className=\"material-icons\" onClick={this.handleUnfavorite}>star</i>\n                    : <i className=\"material-icons\" onClick={this.handleFavorite}>star_border</i>\n                }\n              </span>\n            </header>\n            <div className=\"toolbar__peer__message\">{message}</div>\n          </div>\n\n          <div className=\"toolbar__controls\">\n            <div className=\"toolbar__controls__buttons pull-right\">\n              <button className={infoButtonClassName} onClick={this.onClick}>\n                <i className=\"material-icons\">info</i>\n              </button>\n              <button className=\"button button--icon hide\">\n                <i className=\"material-icons\">more_vert</i>\n              </button>\n            </div>\n          </div>\n        </header>\n      );\n    } else {\n      return (\n        <header className=\"toolbar\"/>\n      );\n    }\n  }\n}\n\nexport default Container.create(ToolbarSection, {pure: false});\n"]}