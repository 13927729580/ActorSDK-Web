{"version":3,"sources":["../../src/components/Toolbar.react.js"],"names":[],"mappings":"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","file":"Toolbar.react.js","sourcesContent":["/*\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\n */\n\nimport React, { Component, PropTypes } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Container } from 'flux/utils';\nimport classnames from 'classnames';\nimport Tooltip from 'rc-tooltip';\nimport { debounce } from 'lodash';\n\nimport { escapeWithEmoji } from '../utils/EmojiUtils';\nimport PeerUtils from '../utils/PeerUtils';\n\nimport CallActionCreators from '../actions/CallActionCreators';\nimport ActivityActionCreators from '../actions/ActivityActionCreators';\nimport FavoriteActionCreators from '../actions/FavoriteActionCreators';\nimport SearchMessagesActionCreators from '../actions/SearchMessagesActionCreators';\n\nimport SearchMessagesStore from '../stores/SearchMessagesStore';\nimport DialogInfoStore from '../stores/DialogInfoStore';\nimport OnlineStore from '../stores/OnlineStore';\nimport ActivityStore from '../stores/ActivityStore';\nimport DialogStore from '../stores/DialogStore';\nimport CallStore from '../stores/CallStore';\n\nimport AvatarItem from './common/AvatarItem.react';\nimport ToggleFavorite from './common/ToggleFavorite.react';\nimport SearchInput from './search/SearchInput.react';\n\nclass ToolbarSection extends Component {\n  static contextTypes = {\n    delegate: PropTypes.object.isRequired\n  };\n\n  static getStores() {\n    return [DialogInfoStore, ActivityStore, OnlineStore, DialogStore, CallStore, SearchMessagesStore];\n  }\n\n  static calculateState() {\n    const thisPeer = DialogStore.getCurrentPeer();\n    return {\n      thisPeer,\n      dialogInfo: DialogInfoStore.getState(),\n      isActivityOpen: ActivityStore.isOpen(),\n      message: OnlineStore.getMessage(),\n      isFavorite: DialogStore.isFavorite(thisPeer.id),\n      search: SearchMessagesStore.getState(),\n      call: ToolbarSection.calculateCallState(thisPeer)\n    };\n  }\n\n  static calculateCallState(thisPeer) {\n    const call = CallStore.getState();\n    if (!call.isOpen || !PeerUtils.equals(thisPeer, call.peer)) {\n      return {\n        isCalling: false\n      };\n    }\n\n    return {\n      isCalling: true,\n      time: call.time,\n      state: call.state,\n      isFloating: call.isFloating\n    };\n  }\n\n  constructor(props, context) {\n    super(props, context);\n\n    this.onSearch = debounce(this.onSearch.bind(this), 300);\n    this.onSearchChange = this.onSearchChange.bind(this);\n    this.onSearchToggleOpen = this.onSearchToggleOpen.bind(this);\n    this.onSearchToggleFocus = this.onSearchToggleFocus.bind(this);\n  }\n\n  onFavoriteToggle = () => {\n    const { thisPeer, isFavorite } = this.state;\n    if (isFavorite) {\n      FavoriteActionCreators.unfavoriteChat(thisPeer);\n    } else {\n      FavoriteActionCreators.favoriteChat(thisPeer);\n    }\n  };\n\n  onClick = () => {\n    if (!this.state.isActivityOpen) {\n      ActivityActionCreators.show();\n    } else {\n      ActivityActionCreators.hide();\n    }\n  };\n\n  handleInCallClick = () => CallActionCreators.toggleFloating();\n\n  onSearch(query) {\n    SearchMessagesActionCreators.findAllText(query);\n  }\n\n  onSearchChange(query) {\n    SearchMessagesActionCreators.setQuery(query);\n    this.onSearch(query);\n  }\n\n  onSearchToggleOpen(isOpen) {\n    SearchMessagesActionCreators.toggleOpen(isOpen);\n  }\n\n  onSearchToggleFocus(isEnabled) {\n    SearchMessagesActionCreators.toggleFocus(isEnabled);\n  }\n\n  getMessage() {\n    const { call, message } = this.state;\n    if (call.isCalling) {\n      return (\n        <FormattedMessage id={`call.state.${call.state}`} values={{ time: call.time }} />\n      );\n    }\n\n    return message;\n  }\n\n  renderSearch() {\n    if (!this.context.delegate.features.search) {\n      return;\n    }\n\n    const { search: { query, isOpen, isFocused } } = this.state;\n    return (\n      <SearchInput\n        className=\"toolbar__controls__search pull-left\"\n        value={query}\n        isOpen={isOpen}\n        isFocused={isFocused}\n        onChange={this.onSearchChange}\n        onToggleOpen={this.onSearchToggleOpen}\n        onToggleFocus={this.onSearchToggleFocus}\n      />\n    );\n  }\n\n  renderInfoButton() {\n    const { call, isActivityOpen } = this.state;\n\n    const activityButtonClassName = classnames('button button--icon', {\n      'active': isActivityOpen || (call.isCalling && !call.isFloating)\n    });\n\n    if (call.isCalling) {\n      return (\n        <Tooltip\n          placement=\"left\"\n          mouseEnterDelay={0.15} mouseLeaveDelay={0}\n          overlay={<FormattedMessage id=\"tooltip.toolbar.info\"/>}\n        >\n          <button className={activityButtonClassName} onClick={this.handleInCallClick}>\n            <i className=\"material-icons\">info</i>\n          </button>\n        </Tooltip>\n      )\n    }\n\n    return (\n      <Tooltip\n        placement=\"left\"\n        mouseEnterDelay={0.15} mouseLeaveDelay={0}\n        overlay={<FormattedMessage id=\"tooltip.toolbar.info\"/>}\n      >\n        <button className={activityButtonClassName} onClick={this.onClick}>\n          <i className=\"material-icons\">info</i>\n        </button>\n      </Tooltip>\n    )\n  }\n\n  render() {\n    const { dialogInfo, isFavorite, call } = this.state;\n\n    if (!dialogInfo) {\n      return <header className=\"toolbar\" />;\n    }\n\n    const message = this.getMessage();\n\n    const headerClassName = classnames('toolbar row', {\n      toolbar__calling: call.isCalling\n    });\n\n    const favoriteClassName = classnames('toolbar__peer__favorite', {\n      'toolbar__peer__favorite--active': isFavorite\n    });\n\n    return (\n      <header className={headerClassName}>\n        <AvatarItem image={dialogInfo.avatar}\n                    placeholder={dialogInfo.placeholder}\n                    size=\"medium\"\n                    title={dialogInfo.name}/>\n\n\n        <div className=\"toolbar__peer col-xs\">\n          <header>\n            <span className=\"toolbar__peer__title\" dangerouslySetInnerHTML={{ __html: escapeWithEmoji(dialogInfo.name) }}/>\n            <Tooltip\n              placement=\"bottom\"\n              mouseEnterDelay={0.15} mouseLeaveDelay={0}\n              overlay={<FormattedMessage id=\"tooltip.toolbar.favorite\"/>}\n            >\n              <span className={favoriteClassName}>\n                <ToggleFavorite value={isFavorite} onToggle={this.onFavoriteToggle} />\n              </span>\n            </Tooltip>\n          </header>\n          <div className=\"toolbar__peer__message\">{message}</div>\n        </div>\n\n        <div className=\"toolbar__controls\">\n          {this.renderSearch()}\n          <div className=\"toolbar__controls__buttons pull-right\">\n            {this.renderInfoButton()}\n          </div>\n        </div>\n      </header>\n    );\n  }\n}\n\nexport default Container.create(ToolbarSection, { pure: false });\n"]}