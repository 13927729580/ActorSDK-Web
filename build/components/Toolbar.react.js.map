{"version":3,"sources":["../../src/components/Toolbar.react.js"],"names":[],"mappings":"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","file":"Toolbar.react.js","sourcesContent":["/*\n * Copyright (C) 2015-2016 Actor LLC. <https://actor.im>\n */\n\nimport React, { Component, PropTypes } from 'react';\nimport { Container } from 'flux/utils';\nimport classnames from 'classnames';\nimport { FormattedMessage } from 'react-intl';\nimport { escapeWithEmoji } from '../utils/EmojiUtils';\nimport PeerUtils from '../utils/PeerUtils';\n\nimport ActivityActionCreators from '../actions/ActivityActionCreators';\nimport FavoriteActionCreators from '../actions/FavoriteActionCreators';\nimport CallActionCreators from '../actions/CallActionCreators';\n\nimport AvatarItem from './common/AvatarItem.react';\nimport ToggleFavorite from './common/ToggleFavorite.react';\nimport Tooltip from 'rc-tooltip';\n\nimport DialogInfoStore from '../stores/DialogInfoStore';\nimport OnlineStore from '../stores/OnlineStore';\nimport ActivityStore from '../stores/ActivityStore';\nimport DialogStore from '../stores/DialogStore';\nimport CallStore from '../stores/CallStore';\n\nclass ToolbarSection extends Component {\n  static contextTypes = {\n    isExperimental: PropTypes.bool\n  };\n\n  static getStores() {\n    return [DialogInfoStore, ActivityStore, OnlineStore, DialogStore, CallStore];\n  }\n\n  static calculateState() {\n    const thisPeer = DialogStore.getCurrentPeer();\n    return {\n      thisPeer,\n      dialogInfo: DialogInfoStore.getInfo(),\n      isActivityOpen: ActivityStore.isOpen(),\n      message: OnlineStore.getMessage(),\n      isFavorite: DialogStore.isFavorite(thisPeer.id),\n      call: ToolbarSection.calculateCallState(thisPeer)\n    };\n  }\n\n  static calculateCallState(thisPeer) {\n    const call = CallStore.getState();\n    if (!call.isOpen || !PeerUtils.equals(thisPeer, call.peer)) {\n      return {\n        isCalling: false\n      };\n    }\n\n    return {\n      time: '00:00',\n      isCalling: true,\n      state: call.state,\n      isFloating: call.isFloating\n    };\n  }\n\n  onFavoriteToggle = () => {\n    const { thisPeer, isFavorite } = this.state;\n    if (isFavorite) {\n      FavoriteActionCreators.unfavoriteChat(thisPeer);\n    } else {\n      FavoriteActionCreators.favoriteChat(thisPeer);\n    }\n  };\n\n  onClick = () => {\n    if (!this.state.isActivityOpen) {\n      ActivityActionCreators.show();\n    } else {\n      ActivityActionCreators.hide();\n    }\n  };\n\n  handleInCallClick = () => CallActionCreators.toggleFloating();\n\n  getMessage() {\n    const { call, message } = this.state;\n    if (call.isCalling) {\n      return (\n        <FormattedMessage id={`toolbar.callState.${call.state}`} values={{time: call.time}} />\n      );\n    }\n\n    return message;\n  }\n\n  renderInfoButton() {\n    const { call, isActivityOpen } = this.state;\n\n    const activityButtonClassName = classnames('button button--icon', {\n      'active': isActivityOpen || (call.isCalling && !call.isFloating)\n    });\n\n    if (call.isCalling) {\n      return (\n        <Tooltip\n          placement=\"left\"\n          mouseEnterDelay={0.5}\n          overlay={<FormattedMessage id=\"tooltip.toolbar.info\"/>}\n        >\n          <button className={activityButtonClassName} onClick={this.handleInCallClick}>\n            <i className=\"material-icons\">info</i>\n          </button>\n        </Tooltip>\n      )\n    }\n\n    return (\n      <Tooltip\n        placement=\"left\"\n        mouseEnterDelay={0.5}\n        overlay={<FormattedMessage id=\"tooltip.toolbar.info\"/>}\n      >\n        <button className={activityButtonClassName} onClick={this.onClick}>\n          <i className=\"material-icons\">info</i>\n        </button>\n      </Tooltip>\n    )\n  }\n\n  render() {\n    const { dialogInfo, isFavorite, call } = this.state;\n\n    if (!dialogInfo) {\n      return <header className=\"toolbar\" />;\n    }\n\n    const message = this.getMessage();\n\n    const headerClassName = classnames('toolbar row', {\n      toolbar__calling: call.isCalling\n    });\n\n    const favoriteClassName = classnames('toolbar__peer__favorite', {\n      'toolbar__peer__favorite--active': isFavorite\n    });\n\n    return (\n      <header className={headerClassName}>\n        <AvatarItem image={dialogInfo.avatar}\n                    placeholder={dialogInfo.placeholder}\n                    size=\"medium\"\n                    title={dialogInfo.name}/>\n\n\n        <div className=\"toolbar__peer col-xs\">\n          <header>\n            <span className=\"toolbar__peer__title\" dangerouslySetInnerHTML={{__html: escapeWithEmoji(dialogInfo.name)}}/>\n            <Tooltip\n              placement=\"bottom\"\n              mouseEnterDelay={0.5}\n              overlay={<FormattedMessage id=\"tooltip.toolbar.favorite\"/>}\n            >\n              <span className={favoriteClassName}>\n                <ToggleFavorite value={isFavorite} onToggle={this.onFavoriteToggle} />\n              </span>\n            </Tooltip>\n          </header>\n          <div className=\"toolbar__peer__message\">{message}</div>\n        </div>\n\n        <div className=\"toolbar__controls\">\n          <div className=\"toolbar__controls__buttons pull-right\">\n            {this.renderInfoButton()}\n          </div>\n        </div>\n      </header>\n    );\n  }\n}\n\nexport default Container.create(ToolbarSection, {pure: false});\n"]}